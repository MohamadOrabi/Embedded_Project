

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Nov 16 14:16:59 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           ; Version 2.10
    61                           ; Generated 31/07/2019 GMT
    62                           ; 
    63                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4550 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     _ADCON0bits	set	4034
    95  0000                     _ADCON0	set	4034
    96  0000                     _ADRESL	set	4035
    97  0000                     _ADRESH	set	4036
    98  0000                     _ADCON2	set	4032
    99  0000                     _ADCON1	set	4033
   100  0000                     _TRISD	set	3989
   101  0000                     _TRISE	set	3990
   102  0000                     _TRISA	set	3986
   103  0000                     _INTCONbits	set	4082
   104  0000                     _INTCON2	set	4081
   105  0000                     _TRISBbits	set	3987
   106  0000                     _LATE	set	3981
   107  0000                     _LATA	set	3977
   108  0000                     _TRISCbits	set	3988
   109  0000                     _OSCCON	set	4051
   110  0000                     _LATD3	set	31843
   111  0000                     _LATD2	set	31842
   112  0000                     _LATC6	set	31838
   113                           
   114                           	psect	smallconst
   115  000800                     __psmallconst:
   116                           	opt callstack 0
   117  000800  00                 	db	0
   118  000801                     STR_1:
   119  000801  25                 	db	37
   120  000802  2E                 	db	46
   121  000803  32                 	db	50	;'2'
   122  000804  66                 	db	102	;'f'
   123  000805  00                 	db	0
   124  000806                     STR_2:
   125  000806  49                 	db	73	;'I'
   126  000807  4E                 	db	78	;'N'
   127  000808  46                 	db	70	;'F'
   128  000809  00                 	db	0
   129  00080A                     STR_6:
   130  00080A  4E                 	db	78	;'N'
   131  00080B  41                 	db	65	;'A'
   132  00080C  4E                 	db	78	;'N'
   133  00080D  00                 	db	0
   134  00080E                     STR_3:
   135  00080E  69                 	db	105	;'i'
   136  00080F  6E                 	db	110	;'n'
   137  000810  66                 	db	102	;'f'
   138  000811  00                 	db	0
   139  000812                     STR_7:
   140  000812  6E                 	db	110	;'n'
   141  000813  61                 	db	97	;'a'
   142  000814  6E                 	db	110	;'n'
   143  000815  00                 	db	0
   144  000816                     STR_10:
   145  000816  6C                 	db	108	;'l'
   146  000817  66                 	db	102	;'f'
   147  000818  00                 	db	0
   148  0000                     
   149                           ; #config settings
   150  000819  00                 	db	0	; dummy byte at the end
   151  0000                     
   152                           	psect	cinit
   153  003690                     __pcinit:
   154                           	opt callstack 0
   155  003690                     start_initialization:
   156                           	opt callstack 0
   157  003690                     __initialization:
   158                           	opt callstack 0
   159                           
   160                           ; Clear objects allocated to BANK1 (80 bytes)
   161  003690  EE01  F000         	lfsr	0,__pbssBANK1
   162  003694  0E50               	movlw	80
   163  003696                     clear_0:
   164  003696  6AEE               	clrf	postinc0,c
   165  003698  06E8               	decf	wreg,f,c
   166  00369A  E1FD               	bnz	clear_0
   167                           
   168                           ; Clear objects allocated to BANK0 (10 bytes)
   169  00369C  EE00  F0CA         	lfsr	0,__pbssBANK0
   170  0036A0  0E0A               	movlw	10
   171  0036A2                     clear_1:
   172  0036A2  6AEE               	clrf	postinc0,c
   173  0036A4  06E8               	decf	wreg,f,c
   174  0036A6  E1FD               	bnz	clear_1
   175                           
   176                           ; Clear objects allocated to COMRAM (6 bytes)
   177  0036A8  6A51               	clrf	(__pbssCOMRAM+5)& (0+255),c
   178  0036AA  6A50               	clrf	(__pbssCOMRAM+4)& (0+255),c
   179  0036AC  6A4F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   180  0036AE  6A4E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   181  0036B0  6A4D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   182  0036B2  6A4C               	clrf	__pbssCOMRAM& (0+255),c
   183  0036B4                     end_of_initialization:
   184                           	opt callstack 0
   185  0036B4                     __end_of__initialization:
   186                           	opt callstack 0
   187  0036B4  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   188  0036B6  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   189  0036B8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   190  0036BA  6EF8               	movwf	tblptru,c
   191  0036BC  0100               	movlb	0
   192  0036BE  EFCB  F018         	goto	_main	;jump to C main() function
   193                           
   194                           	psect	bssCOMRAM
   195  00004C                     __pbssCOMRAM:
   196                           	opt callstack 0
   197  00004C                     _width:
   198                           	opt callstack 0
   199  00004C                     	ds	2
   200  00004E                     _prec:
   201                           	opt callstack 0
   202  00004E                     	ds	2
   203  000050                     _flags:
   204                           	opt callstack 0
   205  000050                     	ds	2
   206                           
   207                           	psect	bssBANK0
   208  0000CA                     __pbssBANK0:
   209                           	opt callstack 0
   210  0000CA                     floorf@F524:
   211                           	opt callstack 0
   212  0000CA                     	ds	4
   213  0000CE                     ___fpclassifyf@F463:
   214                           	opt callstack 0
   215  0000CE                     	ds	4
   216  0000D2                     _nout:
   217                           	opt callstack 0
   218  0000D2                     	ds	2
   219                           
   220                           	psect	bssBANK1
   221  000100                     __pbssBANK1:
   222                           	opt callstack 0
   223  000100                     _dbuf:
   224                           	opt callstack 0
   225  000100                     	ds	80
   226                           
   227                           	psect	cstackBANK0
   228  000060                     __pcstackBANK0:
   229                           	opt callstack 0
   230  000060                     efgtoa@ou:
   231                           	opt callstack 0
   232                           
   233                           ; 4 bytes @ 0x0
   234  000060                     	ds	4
   235  000064                     _efgtoa$444:
   236                           	opt callstack 0
   237                           
   238                           ; 2 bytes @ 0x4
   239  000064                     	ds	2
   240  000066                     _efgtoa$445:
   241                           	opt callstack 0
   242                           
   243                           ; 2 bytes @ 0x6
   244  000066                     	ds	2
   245  000068                     _efgtoa$450:
   246                           	opt callstack 0
   247                           
   248                           ; 2 bytes @ 0x8
   249  000068                     	ds	2
   250  00006A                     _efgtoa$454:
   251                           	opt callstack 0
   252                           
   253                           ; 2 bytes @ 0xA
   254  00006A                     	ds	2
   255  00006C                     _efgtoa$455:
   256                           	opt callstack 0
   257                           
   258                           ; 2 bytes @ 0xC
   259  00006C                     	ds	2
   260  00006E                     _efgtoa$456:
   261                           	opt callstack 0
   262                           
   263                           ; 2 bytes @ 0xE
   264  00006E                     	ds	2
   265  000070                     efgtoa@t:
   266                           	opt callstack 0
   267                           
   268                           ; 2 bytes @ 0x10
   269  000070                     	ds	2
   270  000072                     efgtoa@pp:
   271                           	opt callstack 0
   272                           
   273                           ; 2 bytes @ 0x12
   274  000072                     	ds	2
   275  000074                     efgtoa@m:
   276                           	opt callstack 0
   277                           
   278                           ; 2 bytes @ 0x14
   279  000074                     	ds	2
   280  000076                     efgtoa@ne:
   281                           	opt callstack 0
   282                           
   283                           ; 2 bytes @ 0x16
   284  000076                     	ds	2
   285  000078                     efgtoa@d:
   286                           	opt callstack 0
   287                           
   288                           ; 2 bytes @ 0x18
   289  000078                     	ds	2
   290  00007A                     efgtoa@sign:
   291                           	opt callstack 0
   292                           
   293                           ; 2 bytes @ 0x1A
   294  00007A                     	ds	2
   295  00007C                     efgtoa@p:
   296                           	opt callstack 0
   297                           
   298                           ; 2 bytes @ 0x1C
   299  00007C                     	ds	2
   300  00007E                     efgtoa@nmode:
   301                           	opt callstack 0
   302                           
   303                           ; 1 bytes @ 0x1E
   304  00007E                     	ds	1
   305  00007F                     efgtoa@w:
   306                           	opt callstack 0
   307                           
   308                           ; 2 bytes @ 0x1F
   309  00007F                     	ds	2
   310  000081                     efgtoa@mode:
   311                           	opt callstack 0
   312                           
   313                           ; 1 bytes @ 0x21
   314  000081                     	ds	1
   315  000082                     efgtoa@h:
   316                           	opt callstack 0
   317                           
   318                           ; 4 bytes @ 0x22
   319  000082                     	ds	4
   320  000086                     efgtoa@l:
   321                           	opt callstack 0
   322                           
   323                           ; 4 bytes @ 0x26
   324  000086                     	ds	4
   325  00008A                     efgtoa@i:
   326                           	opt callstack 0
   327                           
   328                           ; 2 bytes @ 0x2A
   329  00008A                     	ds	2
   330  00008C                     efgtoa@g:
   331                           	opt callstack 0
   332                           
   333                           ; 4 bytes @ 0x2C
   334  00008C                     	ds	4
   335  000090                     efgtoa@e:
   336                           	opt callstack 0
   337                           
   338                           ; 2 bytes @ 0x30
   339  000090                     	ds	2
   340  000092                     efgtoa@n:
   341                           	opt callstack 0
   342                           
   343                           ; 2 bytes @ 0x32
   344  000092                     	ds	2
   345  000094                     efgtoa@u:
   346                           	opt callstack 0
   347                           
   348                           ; 4 bytes @ 0x34
   349  000094                     	ds	4
   350  000098                     _vfpfcnvrt$470:
   351                           	opt callstack 0
   352                           
   353                           ; 2 bytes @ 0x38
   354  000098                     	ds	2
   355  00009A                     _vfpfcnvrt$474:
   356                           	opt callstack 0
   357                           
   358                           ; 2 bytes @ 0x3A
   359  00009A                     	ds	2
   360  00009C                     vfpfcnvrt@f:
   361                           	opt callstack 0
   362                           
   363                           ; 4 bytes @ 0x3C
   364  00009C                     	ds	4
   365  0000A0                     vfpfcnvrt@ct:
   366                           	opt callstack 0
   367                           
   368                           ; 3 bytes @ 0x40
   369  0000A0                     	ds	3
   370  0000A3                     vfpfcnvrt@c:
   371                           	opt callstack 0
   372                           
   373                           ; 1 bytes @ 0x43
   374  0000A3                     	ds	1
   375  0000A4                     ?_vfprintf:
   376                           	opt callstack 0
   377  0000A4                     vfprintf@fp:
   378                           	opt callstack 0
   379                           
   380                           ; 2 bytes @ 0x44
   381  0000A4                     	ds	2
   382  0000A6                     vfprintf@fmt:
   383                           	opt callstack 0
   384                           
   385                           ; 2 bytes @ 0x46
   386  0000A6                     	ds	2
   387  0000A8                     vfprintf@ap:
   388                           	opt callstack 0
   389                           
   390                           ; 2 bytes @ 0x48
   391  0000A8                     	ds	2
   392  0000AA                     ?_sprintf:
   393                           	opt callstack 0
   394  0000AA                     sprintf@s:
   395                           	opt callstack 0
   396                           
   397                           ; 2 bytes @ 0x4A
   398  0000AA                     	ds	2
   399  0000AC                     sprintf@fmt:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0x4C
   403  0000AC                     	ds	8
   404  0000B4                     sprintf@ap:
   405                           	opt callstack 0
   406                           
   407                           ; 2 bytes @ 0x54
   408  0000B4                     	ds	2
   409  0000B6                     sprintf@f:
   410                           	opt callstack 0
   411                           
   412                           ; 6 bytes @ 0x56
   413  0000B6                     	ds	6
   414  0000BC                     main@result:
   415                           	opt callstack 0
   416                           
   417                           ; 10 bytes @ 0x5C
   418  0000BC                     	ds	10
   419  0000C6                     main@digital:
   420                           	opt callstack 0
   421                           
   422                           ; 4 bytes @ 0x66
   423  0000C6                     	ds	4
   424                           
   425                           	psect	cstackCOMRAM
   426  000001                     __pcstackCOMRAM:
   427                           	opt callstack 0
   428  000001                     i2MSdelay@val:
   429                           	opt callstack 0
   430                           
   431                           ; 2 bytes @ 0x0
   432  000001                     	ds	2
   433  000003                     i2MSdelay@i:
   434                           	opt callstack 0
   435                           
   436                           ; 2 bytes @ 0x2
   437  000003                     	ds	2
   438  000005                     i2MSdelay@j:
   439                           	opt callstack 0
   440                           
   441                           ; 2 bytes @ 0x4
   442  000005                     	ds	2
   443  000007                     ?_strlen:
   444                           	opt callstack 0
   445  000007                     ?___fpclassifyf:
   446                           	opt callstack 0
   447  000007                     ?_isupper:
   448                           	opt callstack 0
   449  000007                     ?_isdigit:
   450                           	opt callstack 0
   451  000007                     ?_strncmp:
   452                           	opt callstack 0
   453  000007                     ?_isspace:
   454                           	opt callstack 0
   455  000007                     ?___wmul:
   456                           	opt callstack 0
   457  000007                     ?___awdiv:
   458                           	opt callstack 0
   459  000007                     ?___awmod:
   460                           	opt callstack 0
   461  000007                     ?___fladd:
   462                           	opt callstack 0
   463  000007                     ?___fldiv:
   464                           	opt callstack 0
   465  000007                     ?___flmul:
   466                           	opt callstack 0
   467  000007                     ?___flneg:
   468                           	opt callstack 0
   469  000007                     ?___fltol:
   470                           	opt callstack 0
   471  000007                     ?___xxtofl:
   472                           	opt callstack 0
   473  000007                     process_data@data:
   474                           	opt callstack 0
   475  000007                     MSdelay@val:
   476                           	opt callstack 0
   477  000007                     ___wmul@multiplier:
   478                           	opt callstack 0
   479  000007                     ___awdiv@dividend:
   480                           	opt callstack 0
   481  000007                     ___awmod@dividend:
   482                           	opt callstack 0
   483  000007                     isdigit@c:
   484                           	opt callstack 0
   485  000007                     isspace@c:
   486                           	opt callstack 0
   487  000007                     isupper@c:
   488                           	opt callstack 0
   489  000007                     fputc@c:
   490                           	opt callstack 0
   491  000007                     strcpy@dest:
   492                           	opt callstack 0
   493  000007                     strlen@s:
   494                           	opt callstack 0
   495  000007                     strncmp@_l:
   496                           	opt callstack 0
   497  000007                     ___fleq@ff1:
   498                           	opt callstack 0
   499  000007                     ___flneg@f1:
   500                           	opt callstack 0
   501  000007                     ___fltol@f1:
   502                           	opt callstack 0
   503  000007                     ___fladd@b:
   504                           	opt callstack 0
   505  000007                     ___fldiv@b:
   506                           	opt callstack 0
   507  000007                     ___flmul@b:
   508                           	opt callstack 0
   509  000007                     ___xxtofl@val:
   510                           	opt callstack 0
   511  000007                     ___fpclassifyf@x:
   512                           	opt callstack 0
   513                           
   514                           ; 4 bytes @ 0x6
   515  000007                     	ds	2
   516  000009                     ??_isupper:
   517  000009                     ??_isdigit:
   518  000009                     ??_isspace:
   519  000009                     MSdelay@i:
   520                           	opt callstack 0
   521  000009                     ___wmul@multiplicand:
   522                           	opt callstack 0
   523  000009                     ___awdiv@divisor:
   524                           	opt callstack 0
   525  000009                     ___awmod@divisor:
   526                           	opt callstack 0
   527  000009                     fputc@fp:
   528                           	opt callstack 0
   529  000009                     strcpy@src:
   530                           	opt callstack 0
   531  000009                     strlen@a:
   532                           	opt callstack 0
   533  000009                     strncmp@_r:
   534                           	opt callstack 0
   535                           
   536                           ; 2 bytes @ 0x8
   537  000009                     	ds	2
   538  00000B                     ??_fputc:
   539  00000B                     ??___fpclassifyf:
   540  00000B                     ??_strcpy:
   541  00000B                     ??___fltol:
   542  00000B                     ??___xxtofl:
   543  00000B                     ___awdiv@counter:
   544                           	opt callstack 0
   545  00000B                     ___awmod@counter:
   546                           	opt callstack 0
   547  00000B                     MSdelay@j:
   548                           	opt callstack 0
   549  00000B                     ___wmul@product:
   550                           	opt callstack 0
   551  00000B                     strncmp@n:
   552                           	opt callstack 0
   553  00000B                     ___fleq@ff2:
   554                           	opt callstack 0
   555  00000B                     ___fladd@a:
   556                           	opt callstack 0
   557  00000B                     ___fldiv@a:
   558                           	opt callstack 0
   559  00000B                     ___flmul@a:
   560                           	opt callstack 0
   561                           
   562                           ; 4 bytes @ 0xA
   563  00000B                     	ds	1
   564  00000C                     ___awdiv@sign:
   565                           	opt callstack 0
   566  00000C                     ___awmod@sign:
   567                           	opt callstack 0
   568                           
   569                           ; 1 bytes @ 0xB
   570  00000C                     	ds	1
   571  00000D                     ??_strncmp:
   572  00000D                     ?_tolower:
   573                           	opt callstack 0
   574  00000D                     LCD_Command@cmd:
   575                           	opt callstack 0
   576  00000D                     LCD_Char@dat:
   577                           	opt callstack 0
   578  00000D                     _isspace$976:
   579                           	opt callstack 0
   580  00000D                     ___awdiv@quotient:
   581                           	opt callstack 0
   582  00000D                     strcpy@s:
   583                           	opt callstack 0
   584  00000D                     tolower@c:
   585                           	opt callstack 0
   586                           
   587                           ; 2 bytes @ 0xC
   588  00000D                     	ds	1
   589  00000E                     ?_atoi:
   590                           	opt callstack 0
   591  00000E                     LCD_String@msg:
   592                           	opt callstack 0
   593  00000E                     atoi@s:
   594                           	opt callstack 0
   595  00000E                     strncmp@l:
   596                           	opt callstack 0
   597                           
   598                           ; 2 bytes @ 0xD
   599  00000E                     	ds	1
   600  00000F                     ??_tolower:
   601  00000F                     ??___fladd:
   602  00000F                     ??___fldiv:
   603  00000F                     ??___flmul:
   604  00000F                     ??___fleq:
   605  00000F                     ___fltol@sign1:
   606                           	opt callstack 0
   607  00000F                     ___xxtofl@sign:
   608                           	opt callstack 0
   609  00000F                     ___fpclassifyf@e:
   610                           	opt callstack 0
   611  00000F                     strcpy@d:
   612                           	opt callstack 0
   613                           
   614                           ; 2 bytes @ 0xE
   615  00000F                     	ds	1
   616  000010                     ??_atoi:
   617  000010                     LCD_String_xy@pos:
   618                           	opt callstack 0
   619  000010                     ___fltol@exp1:
   620                           	opt callstack 0
   621  000010                     ___xxtofl@exp:
   622                           	opt callstack 0
   623  000010                     fputs@s:
   624                           	opt callstack 0
   625  000010                     strncmp@r:
   626                           	opt callstack 0
   627                           
   628                           ; 2 bytes @ 0xF
   629  000010                     	ds	1
   630  000011                     LCD_String_xy@msg:
   631                           	opt callstack 0
   632  000011                     ___xxtofl@arg:
   633                           	opt callstack 0
   634  000011                     ___fpclassifyf@u:
   635                           	opt callstack 0
   636                           
   637                           ; 4 bytes @ 0x10
   638  000011                     	ds	1
   639  000012                     fputs@fp:
   640                           	opt callstack 0
   641                           
   642                           ; 2 bytes @ 0x11
   643  000012                     	ds	1
   644  000013                     LCD_String_xy@row:
   645                           	opt callstack 0
   646  000013                     ___fladd@signs:
   647                           	opt callstack 0
   648  000013                     ___flmul@sign:
   649                           	opt callstack 0
   650  000013                     _tolower$1061:
   651                           	opt callstack 0
   652  000013                     ___fldiv@rem:
   653                           	opt callstack 0
   654                           
   655                           ; 4 bytes @ 0x12
   656  000013                     	ds	1
   657  000014                     LCD_String_xy@location:
   658                           	opt callstack 0
   659  000014                     ___fladd@aexp:
   660                           	opt callstack 0
   661  000014                     ___flmul@aexp:
   662                           	opt callstack 0
   663  000014                     fputs@c:
   664                           	opt callstack 0
   665  000014                     atoi@neg:
   666                           	opt callstack 0
   667                           
   668                           ; 2 bytes @ 0x13
   669  000014                     	ds	1
   670  000015                     ?_ADC_Read:
   671                           	opt callstack 0
   672  000015                     ___fladd@bexp:
   673                           	opt callstack 0
   674  000015                     ADC_Read@channel:
   675                           	opt callstack 0
   676  000015                     fputs@i:
   677                           	opt callstack 0
   678  000015                     ___flmul@grs:
   679                           	opt callstack 0
   680                           
   681                           ; 4 bytes @ 0x14
   682  000015                     	ds	1
   683  000016                     ___fladd@grs:
   684                           	opt callstack 0
   685  000016                     _atoi$945:
   686                           	opt callstack 0
   687                           
   688                           ; 2 bytes @ 0x15
   689  000016                     	ds	1
   690  000017                     ?_pad:
   691                           	opt callstack 0
   692  000017                     ___fldiv@sign:
   693                           	opt callstack 0
   694  000017                     pad@fp:
   695                           	opt callstack 0
   696                           
   697                           ; 2 bytes @ 0x16
   698  000017                     	ds	1
   699  000018                     ___fldiv@new_exp:
   700                           	opt callstack 0
   701  000018                     _atoi$947:
   702                           	opt callstack 0
   703                           
   704                           ; 2 bytes @ 0x17
   705  000018                     	ds	1
   706  000019                     ??_ADC_Read:
   707  000019                     ___flmul@bexp:
   708                           	opt callstack 0
   709  000019                     pad@buf:
   710                           	opt callstack 0
   711                           
   712                           ; 2 bytes @ 0x18
   713  000019                     	ds	1
   714  00001A                     _atoi$946:
   715                           	opt callstack 0
   716  00001A                     ___fldiv@grs:
   717                           	opt callstack 0
   718  00001A                     ___flmul@prod:
   719                           	opt callstack 0
   720                           
   721                           ; 4 bytes @ 0x19
   722  00001A                     	ds	1
   723  00001B                     pad@p:
   724                           	opt callstack 0
   725  00001B                     atoi@n:
   726                           	opt callstack 0
   727  00001B                     ADC_Read@digital:
   728                           	opt callstack 0
   729                           
   730                           ; 4 bytes @ 0x1A
   731  00001B                     	ds	2
   732  00001D                     ??_pad:
   733                           
   734                           ; 1 bytes @ 0x1C
   735  00001D                     	ds	1
   736  00001E                     ___fldiv@bexp:
   737                           	opt callstack 0
   738  00001E                     pad@i:
   739                           	opt callstack 0
   740  00001E                     ___flmul@temp:
   741                           	opt callstack 0
   742                           
   743                           ; 2 bytes @ 0x1D
   744  00001E                     	ds	1
   745  00001F                     ___fldiv@aexp:
   746                           	opt callstack 0
   747                           
   748                           ; 1 bytes @ 0x1E
   749  00001F                     	ds	1
   750  000020                     ?_floorf:
   751                           	opt callstack 0
   752  000020                     ?___flsub:
   753                           	opt callstack 0
   754  000020                     pad@w:
   755                           	opt callstack 0
   756  000020                     ___flge@ff1:
   757                           	opt callstack 0
   758  000020                     ___flsub@b:
   759                           	opt callstack 0
   760  000020                     floorf@x:
   761                           	opt callstack 0
   762                           
   763                           ; 4 bytes @ 0x1F
   764  000020                     	ds	4
   765  000024                     ??_floorf:
   766  000024                     ___flge@ff2:
   767                           	opt callstack 0
   768  000024                     ___flsub@a:
   769                           	opt callstack 0
   770                           
   771                           ; 4 bytes @ 0x23
   772  000024                     	ds	4
   773  000028                     ??___flge:
   774                           
   775                           ; 1 bytes @ 0x27
   776  000028                     	ds	2
   777  00002A                     floorf@m:
   778                           	opt callstack 0
   779                           
   780                           ; 4 bytes @ 0x29
   781  00002A                     	ds	4
   782  00002E                     floorf@e:
   783                           	opt callstack 0
   784                           
   785                           ; 2 bytes @ 0x2D
   786  00002E                     	ds	2
   787  000030                     floorf@u:
   788                           	opt callstack 0
   789                           
   790                           ; 4 bytes @ 0x2F
   791  000030                     	ds	4
   792  000034                     ?_efgtoa:
   793                           	opt callstack 0
   794  000034                     efgtoa@fp:
   795                           	opt callstack 0
   796                           
   797                           ; 2 bytes @ 0x33
   798  000034                     	ds	2
   799  000036                     efgtoa@f:
   800                           	opt callstack 0
   801                           
   802                           ; 4 bytes @ 0x35
   803  000036                     	ds	4
   804  00003A                     efgtoa@c:
   805                           	opt callstack 0
   806                           
   807                           ; 1 bytes @ 0x39
   808  00003A                     	ds	1
   809  00003B                     ??_efgtoa:
   810                           
   811                           ; 1 bytes @ 0x3A
   812  00003B                     	ds	5
   813  000040                     ?_vfpfcnvrt:
   814                           	opt callstack 0
   815  000040                     vfpfcnvrt@fp:
   816                           	opt callstack 0
   817                           
   818                           ; 2 bytes @ 0x3F
   819  000040                     	ds	2
   820  000042                     vfpfcnvrt@fmt:
   821                           	opt callstack 0
   822                           
   823                           ; 2 bytes @ 0x41
   824  000042                     	ds	2
   825  000044                     vfpfcnvrt@ap:
   826                           	opt callstack 0
   827                           
   828                           ; 2 bytes @ 0x43
   829  000044                     	ds	2
   830  000046                     ??_vfpfcnvrt:
   831                           
   832                           ; 1 bytes @ 0x45
   833  000046                     	ds	4
   834  00004A                     vfprintf@cfmt:
   835                           	opt callstack 0
   836                           
   837                           ; 2 bytes @ 0x49
   838  00004A                     	ds	2
   839  00004C                     
   840                           ; 1 bytes @ 0x4B
   841 ;;
   842 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   843 ;;
   844 ;; *************** function _main *****************
   845 ;; Defined at:
   846 ;;		line 42 in file "main.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  result         10   92[BANK0 ] unsigned char [10]
   851 ;;  digital         4  102[BANK0 ] float 
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   861 ;;      Params:         0       0       0       0       0       0       0       0       0
   862 ;;      Locals:         0      14       0       0       0       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0       0       0       0       0
   864 ;;      Totals:         0      14       0       0       0       0       0       0       0
   865 ;;Total ram usage:       14 bytes
   866 ;; Hardware stack levels required when called:   10
   867 ;; This function calls:
   868 ;;		_ADC_Init
   869 ;;		_ADC_Read
   870 ;;		_External_Interrupt_Init
   871 ;;		_LCD_Init
   872 ;;		_LCD_String_xy
   873 ;;		_MSdelay
   874 ;;		_sprintf
   875 ;; This function is called by:
   876 ;;		Startup code after reset
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text0
   881  003196                     __ptext0:
   882                           	opt callstack 0
   883  003196                     _main:
   884                           	opt callstack 21
   885  003196                     
   886                           ;main.c: 44:     OSCCON=0x72;
   887  003196  0E72               	movlw	114
   888  003198  6ED3               	movwf	211,c	;volatile
   889  00319A                     
   890                           ;main.c: 45:     float digital;;main.c: 46:     char result[10];;main.c: 47:     ADC_Ini
      +                          t();
   891  00319A  ECDF  F01B         	call	_ADC_Init	;wreg free
   892  00319E                     
   893                           ;main.c: 48:     LCD_Init();
   894  00319E  EC61  F01B         	call	_LCD_Init	;wreg free
   895  0031A2                     
   896                           ;main.c: 49:     External_Interrupt_Init();
   897  0031A2  ECE8  F01B         	call	_External_Interrupt_Init	;wreg free
   898  0031A6                     
   899                           ;main.c: 50:     TRISCbits.TRISC6 = 0;
   900  0031A6  9C94               	bcf	148,6,c	;volatile
   901  0031A8                     
   902                           ;main.c: 51:     LATC6 = 1;
   903  0031A8  8C8B               	bsf	3979,6,c	;volatile
   904  0031AA                     l5306:
   905                           
   906                           ;main.c: 55:         digital = ADC_Read(7);
   907  0031AA  0E00               	movlw	0
   908  0031AC  6E16               	movwf	(ADC_Read@channel+1)^0,c
   909  0031AE  0E07               	movlw	7
   910  0031B0  6E15               	movwf	ADC_Read@channel^0,c
   911  0031B2  EC09  F019         	call	_ADC_Read	;wreg free
   912  0031B6  C015  F0C6         	movff	?_ADC_Read,main@digital
   913  0031BA  C016  F0C7         	movff	?_ADC_Read+1,main@digital+1
   914  0031BE  C017  F0C8         	movff	?_ADC_Read+2,main@digital+2
   915  0031C2  C018  F0C9         	movff	?_ADC_Read+3,main@digital+3
   916  0031C6                     
   917                           ;main.c: 56:         sprintf(result, "%.2f", digital);
   918  0031C6  0EBC               	movlw	low main@result
   919  0031C8  0100               	movlb	0	; () banked
   920  0031CA  6FAA               	movwf	sprintf@s& (0+255),b
   921  0031CC  0E00               	movlw	high main@result
   922  0031CE  6FAB               	movwf	(sprintf@s+1)& (0+255),b
   923  0031D0  0E01               	movlw	low STR_1
   924  0031D2  6FAC               	movwf	sprintf@fmt& (0+255),b
   925  0031D4  0E08               	movlw	high STR_1
   926  0031D6  6FAD               	movwf	(sprintf@fmt+1)& (0+255),b
   927  0031D8  C0C6  F0AE         	movff	main@digital,?_sprintf+4
   928  0031DC  C0C7  F0AF         	movff	main@digital+1,?_sprintf+5
   929  0031E0  C0C8  F0B0         	movff	main@digital+2,?_sprintf+6
   930  0031E4  C0C9  F0B1         	movff	main@digital+3,?_sprintf+7
   931  0031E8  ECD4  F019         	call	_sprintf	;wreg free
   932  0031EC                     
   933                           ;main.c: 57:         MSdelay(1000);
   934  0031EC  0E03               	movlw	3
   935  0031EE  6E08               	movwf	(MSdelay@val+1)^0,c
   936  0031F0  0EE8               	movlw	232
   937  0031F2  6E07               	movwf	MSdelay@val^0,c
   938  0031F4  EC4F  F01A         	call	_MSdelay	;wreg free
   939  0031F8                     
   940                           ;main.c: 58:         LCD_String_xy(1,0,result);
   941  0031F8  0E00               	movlw	0
   942  0031FA  6E10               	movwf	LCD_String_xy@pos^0,c
   943  0031FC  0EBC               	movlw	low main@result
   944  0031FE  6E11               	movwf	LCD_String_xy@msg^0,c
   945  003200  0E00               	movlw	high main@result
   946  003202  6E12               	movwf	(LCD_String_xy@msg+1)^0,c
   947  003204  0E01               	movlw	1
   948  003206  ECB9  F01A         	call	_LCD_String_xy
   949  00320A  EFD5  F018         	goto	l5306
   950  00320E  EF07  F000         	goto	start
   951  003212                     __end_of_main:
   952                           	opt callstack 0
   953                           
   954 ;; *************** function _sprintf *****************
   955 ;; Defined at:
   956 ;;		line 9 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  s               2   74[BANK0 ] PTR unsigned char 
   959 ;;		 -> main@result(10), 
   960 ;;  fmt             2   76[BANK0 ] PTR const unsigned char 
   961 ;;		 -> STR_1(5), 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  f               6   86[BANK0 ] struct _IO_FILE
   964 ;;  ap              2   84[BANK0 ] PTR void [1]
   965 ;;		 -> ?_sprintf(2), 
   966 ;;  ret             2    0        int 
   967 ;; Return value:  Size  Location     Type
   968 ;;                  2   74[BANK0 ] int 
   969 ;; Registers used:
   970 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   976 ;;      Params:         0       8       0       0       0       0       0       0       0
   977 ;;      Locals:         0      10       0       0       0       0       0       0       0
   978 ;;      Temps:          0       0       0       0       0       0       0       0       0
   979 ;;      Totals:         0      18       0       0       0       0       0       0       0
   980 ;;Total ram usage:       18 bytes
   981 ;; Hardware stack levels used:    1
   982 ;; Hardware stack levels required when called:    9
   983 ;; This function calls:
   984 ;;		_vfprintf
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text1
   991  0033A8                     __ptext1:
   992                           	opt callstack 0
   993  0033A8                     _sprintf:
   994                           	opt callstack 21
   995  0033A8  0EAE               	movlw	low (?_sprintf+4)
   996  0033AA  0100               	movlb	0	; () banked
   997  0033AC  6FB4               	movwf	sprintf@ap& (0+255),b
   998  0033AE  0E00               	movlw	high (?_sprintf+4)
   999  0033B0  6FB5               	movwf	(sprintf@ap+1)& (0+255),b
  1000  0033B2  C0AA  F0B6         	movff	sprintf@s,sprintf@f
  1001  0033B6  C0AB  F0B7         	movff	sprintf@s+1,sprintf@f+1
  1002  0033BA                     
  1003                           ; BSR set to: 0
  1004  0033BA  0E00               	movlw	0
  1005  0033BC  6FB9               	movwf	(sprintf@f+3)& (0+255),b
  1006  0033BE  0E00               	movlw	0
  1007  0033C0  6FB8               	movwf	(sprintf@f+2)& (0+255),b
  1008  0033C2                     
  1009                           ; BSR set to: 0
  1010  0033C2  0E00               	movlw	0
  1011  0033C4  6FBB               	movwf	(sprintf@f+5)& (0+255),b
  1012  0033C6  0E00               	movlw	0
  1013  0033C8  6FBA               	movwf	(sprintf@f+4)& (0+255),b
  1014  0033CA                     
  1015                           ; BSR set to: 0
  1016  0033CA  0EB6               	movlw	low sprintf@f
  1017  0033CC  6FA4               	movwf	vfprintf@fp& (0+255),b
  1018  0033CE  0E00               	movlw	high sprintf@f
  1019  0033D0  6FA5               	movwf	(vfprintf@fp+1)& (0+255),b
  1020  0033D2  C0AC  F0A6         	movff	sprintf@fmt,vfprintf@fmt
  1021  0033D6  C0AD  F0A7         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1022  0033DA  0EB4               	movlw	low sprintf@ap
  1023  0033DC  6FA8               	movwf	vfprintf@ap& (0+255),b
  1024  0033DE  0E00               	movlw	high sprintf@ap
  1025  0033E0  6FA9               	movwf	(vfprintf@ap+1)& (0+255),b
  1026  0033E2  EC45  F019         	call	_vfprintf	;wreg free
  1027  0033E6  0100               	movlb	0	; () banked
  1028  0033E8  51B8               	movf	(sprintf@f+2)& (0+255),w,b
  1029  0033EA  25AA               	addwf	sprintf@s& (0+255),w,b
  1030  0033EC  6ED9               	movwf	fsr2l,c
  1031  0033EE  51B9               	movf	(sprintf@f+3)& (0+255),w,b
  1032  0033F0  21AB               	addwfc	(sprintf@s+1)& (0+255),w,b
  1033  0033F2  6EDA               	movwf	fsr2h,c
  1034  0033F4  0E00               	movlw	0
  1035  0033F6  6EDF               	movwf	indf2,c
  1036  0033F8                     
  1037                           ; BSR set to: 0
  1038  0033F8  0012               	return		;funcret
  1039  0033FA                     __end_of_sprintf:
  1040                           	opt callstack 0
  1041                           
  1042 ;; *************** function _vfprintf *****************
  1043 ;; Defined at:
  1044 ;;		line 1368 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;  fp              2   68[BANK0 ] PTR struct _IO_FILE
  1047 ;;		 -> sprintf@f(6), 
  1048 ;;  fmt             2   70[BANK0 ] PTR const unsigned char 
  1049 ;;		 -> STR_1(5), 
  1050 ;;  ap              2   72[BANK0 ] PTR PTR void 
  1051 ;;		 -> sprintf@ap(2), 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;  cfmt            2   73[COMRAM] PTR unsigned char 
  1054 ;;		 -> STR_1(5), 
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  2   68[BANK0 ] int 
  1057 ;; Registers used:
  1058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1064 ;;      Params:         0       6       0       0       0       0       0       0       0
  1065 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1067 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1068 ;;Total ram usage:        8 bytes
  1069 ;; Hardware stack levels used:    1
  1070 ;; Hardware stack levels required when called:    8
  1071 ;; This function calls:
  1072 ;;		_vfpfcnvrt
  1073 ;; This function is called by:
  1074 ;;		_sprintf
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           	psect	text2
  1079  00328A                     __ptext2:
  1080                           	opt callstack 0
  1081  00328A                     _vfprintf:
  1082                           	opt callstack 21
  1083  00328A                     
  1084                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.10/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
  1085  00328A  C0A6  F04A         	movff	vfprintf@fmt,vfprintf@cfmt
  1086  00328E  C0A7  F04B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1087  003292                     
  1088                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1089  003292  0E00               	movlw	0
  1090  003294  0100               	movlb	0	; () banked
  1091  003296  6FD3               	movwf	(_nout+1)& (0+255),b
  1092  003298  0E00               	movlw	0
  1093  00329A  6FD2               	movwf	_nout& (0+255),b
  1094                           
  1095                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  1096  00329C  EF63  F019         	goto	l5280
  1097  0032A0                     l5278:
  1098                           
  1099                           ; BSR set to: 0
  1100                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  1101  0032A0  C0A4  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1102  0032A4  C0A5  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1103  0032A8  0E4A               	movlw	low vfprintf@cfmt
  1104  0032AA  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1105  0032AC  0E00               	movlw	high vfprintf@cfmt
  1106  0032AE  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1107  0032B0  C0A8  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1108  0032B4  C0A9  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1109  0032B8  EC46  F00C         	call	_vfpfcnvrt	;wreg free
  1110  0032BC  5040               	movf	?_vfpfcnvrt^0,w,c
  1111  0032BE  0100               	movlb	0	; () banked
  1112  0032C0  27D2               	addwf	_nout& (0+255),f,b
  1113  0032C2  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1114  0032C4  23D3               	addwfc	(_nout+1)& (0+255),f,b
  1115  0032C6                     l5280:
  1116                           
  1117                           ; BSR set to: 0
  1118                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  1119  0032C6  C04A  FFF6         	movff	vfprintf@cfmt,tblptrl
  1120  0032CA  C04B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1121  0032CE                     	if	0	;tblptru may be non-zero
  1122  0032CE                     	endif
  1123  0032CE                     	if	0	;tblptru may be non-zero
  1124  0032CE                     	endif
  1125  0032CE  0008               	tblrd		*
  1126  0032D0  50F5               	movf	tablat,w,c
  1127  0032D2  0900               	iorlw	0
  1128  0032D4  A4D8               	btfss	status,2,c
  1129  0032D6  EF6F  F019         	goto	u7161
  1130  0032DA  EF71  F019         	goto	u7160
  1131  0032DE                     u7161:
  1132  0032DE  EF50  F019         	goto	l5278
  1133  0032E2                     u7160:
  1134  0032E2                     
  1135                           ; BSR set to: 0
  1136                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
  1137  0032E2  C0D2  F0A4         	movff	_nout,?_vfprintf
  1138  0032E6  C0D3  F0A5         	movff	_nout+1,?_vfprintf+1
  1139  0032EA                     
  1140                           ; BSR set to: 0
  1141  0032EA  0012               	return		;funcret
  1142  0032EC                     __end_of_vfprintf:
  1143                           	opt callstack 0
  1144                           
  1145 ;; *************** function _vfpfcnvrt *****************
  1146 ;; Defined at:
  1147 ;;		line 670 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1150 ;;		 -> sprintf@f(6), 
  1151 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1152 ;;		 -> vfprintf@cfmt(2), 
  1153 ;;  ap              2   67[COMRAM] PTR PTR void 
  1154 ;;		 -> sprintf@ap(2), 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  llu             8    0        unsigned long long 
  1157 ;;  ll              8    0        long long 
  1158 ;;  f               4   60[BANK0 ] long long 
  1159 ;;  ct              3   64[BANK0 ] unsigned char [3]
  1160 ;;  vp              3    0        PTR void 
  1161 ;;  cp              3    0        PTR unsigned char 
  1162 ;;  i               2    0        int 
  1163 ;;  done            2    0        int 
  1164 ;;  c               1   67[BANK0 ] unsigned char 
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  2   63[COMRAM] int 
  1167 ;; Registers used:
  1168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1174 ;;      Params:         6       0       0       0       0       0       0       0       0
  1175 ;;      Locals:         0      12       0       0       0       0       0       0       0
  1176 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1177 ;;      Totals:        10      12       0       0       0       0       0       0       0
  1178 ;;Total ram usage:       22 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; Hardware stack levels required when called:    7
  1181 ;; This function calls:
  1182 ;;		_atoi
  1183 ;;		_efgtoa
  1184 ;;		_fputc
  1185 ;;		_isdigit
  1186 ;;		_isupper
  1187 ;;		_strncmp
  1188 ;;		_tolower
  1189 ;; This function is called by:
  1190 ;;		_vfprintf
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           	psect	text3
  1195  00188C                     __ptext3:
  1196                           	opt callstack 0
  1197  00188C                     _vfpfcnvrt:
  1198                           	opt callstack 21
  1199  00188C                     
  1200                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.10/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.10/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.10/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.10/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
  1201  00188C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1202  001890  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1203  001894  CFDE FFF6          	movff	postinc2,tblptrl
  1204  001898  CFDD FFF7          	movff	postdec2,tblptrh
  1205  00189C                     	if	0	;tblptru may be non-zero
  1206  00189C                     	endif
  1207  00189C                     	if	0	;tblptru may be non-zero
  1208  00189C                     	endif
  1209  00189C  0008               	tblrd		*
  1210  00189E  50F5               	movf	tablat,w,c
  1211  0018A0  0A25               	xorlw	37
  1212  0018A2  A4D8               	btfss	status,2,c
  1213  0018A4  EF56  F00C         	goto	u7021
  1214  0018A8  EF58  F00C         	goto	u7020
  1215  0018AC                     u7021:
  1216  0018AC  EF5E  F00E         	goto	l5266
  1217  0018B0                     u7020:
  1218  0018B0                     
  1219                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  1220  0018B0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1221  0018B4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1222  0018B8  2ADE               	incf	postinc2,f,c
  1223  0018BA  0E00               	movlw	0
  1224  0018BC  22DD               	addwfc	postdec2,f,c
  1225  0018BE                     
  1226                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
  1227  0018BE  0E00               	movlw	0
  1228  0018C0  6E4D               	movwf	(_width+1)^0,c
  1229  0018C2  0E00               	movlw	0
  1230  0018C4  6E4C               	movwf	_width^0,c
  1231  0018C6  C04C  F050         	movff	_width,_flags
  1232  0018CA  C04D  F051         	movff	_width+1,_flags+1
  1233  0018CE                     
  1234                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
  1235  0018CE  684E               	setf	_prec^0,c
  1236  0018D0  684F               	setf	(_prec+1)^0,c
  1237  0018D2                     
  1238                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*f
      +                          mt)[0] == '.') {
  1239  0018D2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1240  0018D6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1241  0018DA  CFDE FFF6          	movff	postinc2,tblptrl
  1242  0018DE  CFDD FFF7          	movff	postdec2,tblptrh
  1243  0018E2                     	if	0	;tblptru may be non-zero
  1244  0018E2                     	endif
  1245  0018E2                     	if	0	;tblptru may be non-zero
  1246  0018E2                     	endif
  1247  0018E2  0008               	tblrd		*
  1248  0018E4  50F5               	movf	tablat,w,c
  1249  0018E6  0A2E               	xorlw	46
  1250  0018E8  A4D8               	btfss	status,2,c
  1251  0018EA  EF79  F00C         	goto	u7031
  1252  0018EE  EF7B  F00C         	goto	u7030
  1253  0018F2                     u7031:
  1254  0018F2  EFF9  F00C         	goto	l5212
  1255  0018F6                     u7030:
  1256  0018F6                     
  1257                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             pre
      +                          c = 0;
  1258  0018F6  0E00               	movlw	0
  1259  0018F8  6E4F               	movwf	(_prec+1)^0,c
  1260  0018FA  0E00               	movlw	0
  1261  0018FC  6E4E               	movwf	_prec^0,c
  1262  0018FE                     
  1263                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*
      +                          fmt;
  1264  0018FE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1265  001902  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1266  001906  2ADE               	incf	postinc2,f,c
  1267  001908  0E00               	movlw	0
  1268  00190A  22DD               	addwfc	postdec2,f,c
  1269  00190C                     
  1270                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if 
      +                          ((*fmt)[0] == '*') {
  1271  00190C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1272  001910  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1273  001914  CFDE FFF6          	movff	postinc2,tblptrl
  1274  001918  CFDD FFF7          	movff	postdec2,tblptrh
  1275  00191C                     	if	0	;tblptru may be non-zero
  1276  00191C                     	endif
  1277  00191C                     	if	0	;tblptru may be non-zero
  1278  00191C                     	endif
  1279  00191C  0008               	tblrd		*
  1280  00191E  50F5               	movf	tablat,w,c
  1281  001920  0A2A               	xorlw	42
  1282  001922  A4D8               	btfss	status,2,c
  1283  001924  EF96  F00C         	goto	u7041
  1284  001928  EF98  F00C         	goto	u7040
  1285  00192C                     u7041:
  1286  00192C  EFB5  F00C         	goto	l5202
  1287  001930                     u7040:
  1288  001930                     
  1289                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                
      +                           ++*fmt;
  1290  001930  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1291  001934  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1292  001938  2ADE               	incf	postinc2,f,c
  1293  00193A  0E00               	movlw	0
  1294  00193C  22DD               	addwfc	postdec2,f,c
  1295                           
  1296                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                
      +                           prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1297  00193E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1298  001942  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1299  001946  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1300  00194A  0E02               	movlw	2
  1301  00194C  26DE               	addwf	postinc2,f,c
  1302  00194E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1303  001952  0E00               	movlw	0
  1304  001954  22DD               	addwfc	postdec2,f,c
  1305  001956  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1306  00195A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1307  00195E  CFDE F04E          	movff	postinc2,_prec
  1308  001962  CFDD F04F          	movff	postdec2,_prec+1
  1309                           
  1310                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } e
      +                          lse {
  1311  001966  EFF9  F00C         	goto	l5212
  1312  00196A                     l5202:
  1313                           
  1314                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                
      +                           prec = atoi(*fmt);
  1315  00196A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1316  00196E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1317  001972  CFDE F00E          	movff	postinc2,atoi@s
  1318  001976  CFDD F00F          	movff	postdec2,atoi@s+1
  1319  00197A  EC3F  F014         	call	_atoi	;wreg free
  1320  00197E  C00E  F04E         	movff	?_atoi,_prec
  1321  001982  C00F  F04F         	movff	?_atoi+1,_prec+1
  1322                           
  1323                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                
      +                           while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1324  001986  EFCC  F00C         	goto	l5206
  1325  00198A                     l5204:
  1326                           
  1327                           ; BSR set to: 0
  1328                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                
      +                               ++*fmt;
  1329  00198A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1330  00198E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1331  001992  2ADE               	incf	postinc2,f,c
  1332  001994  0E00               	movlw	0
  1333  001996  22DD               	addwfc	postdec2,f,c
  1334  001998                     l5206:
  1335  001998  0ED0               	movlw	208
  1336  00199A  6E46               	movwf	??_vfpfcnvrt^0,c
  1337  00199C  0EFF               	movlw	255
  1338  00199E  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  1339  0019A0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1340  0019A4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1341  0019A8  CFDE FFF6          	movff	postinc2,tblptrl
  1342  0019AC  CFDD FFF7          	movff	postdec2,tblptrh
  1343  0019B0                     	if	0	;tblptru may be non-zero
  1344  0019B0                     	endif
  1345  0019B0                     	if	0	;tblptru may be non-zero
  1346  0019B0                     	endif
  1347  0019B0  0008               	tblrd		*
  1348  0019B2  50F5               	movf	tablat,w,c
  1349  0019B4  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  1350  0019B6  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  1351  0019B8  5046               	movf	??_vfpfcnvrt^0,w,c
  1352  0019BA  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1353  0019BC  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  1354  0019BE  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1355  0019C0  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  1356  0019C2  E10A               	bnz	u7050
  1357  0019C4  0E0A               	movlw	10
  1358  0019C6  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1359  0019C8  A0D8               	btfss	status,0,c
  1360  0019CA  EFE9  F00C         	goto	u7051
  1361  0019CE  EFEC  F00C         	goto	u7050
  1362  0019D2                     u7051:
  1363  0019D2  0E01               	movlw	1
  1364  0019D4  EFED  F00C         	goto	u7060
  1365  0019D8                     u7050:
  1366  0019D8  0E00               	movlw	0
  1367  0019DA                     u7060:
  1368  0019DA  0100               	movlb	0	; () banked
  1369  0019DC  6F98               	movwf	_vfpfcnvrt$470& (0+255),b
  1370  0019DE  6B99               	clrf	(_vfpfcnvrt$470+1)& (0+255),b
  1371  0019E0                     
  1372                           ; BSR set to: 0
  1373  0019E0  5198               	movf	_vfpfcnvrt$470& (0+255),w,b
  1374  0019E2  1199               	iorwf	(_vfpfcnvrt$470+1)& (0+255),w,b
  1375  0019E4  A4D8               	btfss	status,2,c
  1376  0019E6  EFF7  F00C         	goto	u7071
  1377  0019EA  EFF9  F00C         	goto	u7070
  1378  0019EE                     u7071:
  1379  0019EE  EFC5  F00C         	goto	l5204
  1380  0019F2                     u7070:
  1381  0019F2                     l5212:
  1382                           
  1383                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] =
      +                           tolower((int)(*fmt)[0]);
  1384  0019F2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1385  0019F6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1386  0019FA  CFDE FFF6          	movff	postinc2,tblptrl
  1387  0019FE  CFDD FFF7          	movff	postdec2,tblptrh
  1388  001A02                     	if	0	;tblptru may be non-zero
  1389  001A02                     	endif
  1390  001A02                     	if	0	;tblptru may be non-zero
  1391  001A02                     	endif
  1392  001A02  0008               	tblrd		*
  1393  001A04  50F5               	movf	tablat,w,c
  1394  001A06  6E0D               	movwf	tolower@c^0,c
  1395  001A08  6A0E               	clrf	(tolower@c+1)^0,c
  1396  001A0A  EC76  F019         	call	_tolower	;wreg free
  1397  001A0E  500D               	movf	?_tolower^0,w,c
  1398  001A10  0100               	movlb	0	; () banked
  1399  001A12  6FA0               	movwf	vfpfcnvrt@ct& (0+255),b
  1400  001A14                     
  1401                           ; BSR set to: 0
  1402                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[
      +                          0]) {
  1403  001A14  51A0               	movf	vfpfcnvrt@ct& (0+255),w,b
  1404  001A16  B4D8               	btfsc	status,2,c
  1405  001A18  EF10  F00D         	goto	u7081
  1406  001A1C  EF12  F00D         	goto	u7080
  1407  001A20                     u7081:
  1408  001A20  EF4C  F00D         	goto	l5222
  1409  001A24                     u7080:
  1410  001A24                     
  1411                           ; BSR set to: 0
  1412                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[
      +                          1] = tolower((int)(*fmt)[1]);
  1413  001A24  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1414  001A28  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1415  001A2C  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  1416  001A30  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  1417  001A34  0E01               	movlw	1
  1418  001A36  2646               	addwf	??_vfpfcnvrt^0,f,c
  1419  001A38  0E00               	movlw	0
  1420  001A3A  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1421  001A3C  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1422  001A40  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1423  001A44                     	if	0	;tblptru may be non-zero
  1424  001A44                     	endif
  1425  001A44                     	if	0	;tblptru may be non-zero
  1426  001A44                     	endif
  1427  001A44  0008               	tblrd		*
  1428  001A46  50F5               	movf	tablat,w,c
  1429  001A48  6E0D               	movwf	tolower@c^0,c
  1430  001A4A  6A0E               	clrf	(tolower@c+1)^0,c
  1431  001A4C  EC76  F019         	call	_tolower	;wreg free
  1432  001A50  500D               	movf	?_tolower^0,w,c
  1433  001A52  0100               	movlb	0	; () banked
  1434  001A54  6FA1               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1435  001A56                     
  1436                           ; BSR set to: 0
  1437                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if 
      +                          (ct[1]) {
  1438  001A56  51A1               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1439  001A58  B4D8               	btfsc	status,2,c
  1440  001A5A  EF31  F00D         	goto	u7091
  1441  001A5E  EF33  F00D         	goto	u7090
  1442  001A62                     u7091:
  1443  001A62  EF4C  F00D         	goto	l5222
  1444  001A66                     u7090:
  1445  001A66                     
  1446                           ; BSR set to: 0
  1447                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                
      +                           ct[2] = tolower((int)(*fmt)[2]);
  1448  001A66  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1449  001A6A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1450  001A6E  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  1451  001A72  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  1452  001A76  0E02               	movlw	2
  1453  001A78  2646               	addwf	??_vfpfcnvrt^0,f,c
  1454  001A7A  0E00               	movlw	0
  1455  001A7C  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1456  001A7E  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1457  001A82  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1458  001A86                     	if	0	;tblptru may be non-zero
  1459  001A86                     	endif
  1460  001A86                     	if	0	;tblptru may be non-zero
  1461  001A86                     	endif
  1462  001A86  0008               	tblrd		*
  1463  001A88  50F5               	movf	tablat,w,c
  1464  001A8A  6E0D               	movwf	tolower@c^0,c
  1465  001A8C  6A0E               	clrf	(tolower@c+1)^0,c
  1466  001A8E  EC76  F019         	call	_tolower	;wreg free
  1467  001A92  500D               	movf	?_tolower^0,w,c
  1468  001A94  0100               	movlb	0	; () banked
  1469  001A96  6FA2               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1470  001A98                     l5222:
  1471                           
  1472                           ; BSR set to: 0
  1473                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[
      +                          0] == 'f') {
  1474  001A98  0E66               	movlw	102
  1475  001A9A  19A0               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1476  001A9C  A4D8               	btfss	status,2,c
  1477  001A9E  EF53  F00D         	goto	u7101
  1478  001AA2  EF55  F00D         	goto	u7100
  1479  001AA6                     u7101:
  1480  001AA6  EF95  F00D         	goto	l5234
  1481  001AAA                     u7100:
  1482  001AAA                     
  1483                           ; BSR set to: 0
  1484                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c =
      +                           (*fmt)[0];
  1485  001AAA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1486  001AAE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1487  001AB2  CFDE FFF6          	movff	postinc2,tblptrl
  1488  001AB6  CFDD FFF7          	movff	postdec2,tblptrh
  1489  001ABA                     	if	0	;tblptru may be non-zero
  1490  001ABA                     	endif
  1491  001ABA                     	if	0	;tblptru may be non-zero
  1492  001ABA                     	endif
  1493  001ABA  0008               	tblrd		*
  1494  001ABC  CFF5 F0A3          	movff	tablat,vfpfcnvrt@c
  1495  001AC0                     
  1496                           ; BSR set to: 0
  1497                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*
      +                          fmt;
  1498  001AC0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1499  001AC4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1500  001AC8  2ADE               	incf	postinc2,f,c
  1501  001ACA  0E00               	movlw	0
  1502  001ACC  22DD               	addwfc	postdec2,f,c
  1503  001ACE                     
  1504                           ; BSR set to: 0
  1505                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f =
      +                           (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1506  001ACE  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1507  001AD2  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1508  001AD6  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1509  001ADA  0E04               	movlw	4
  1510  001ADC  26DE               	addwf	postinc2,f,c
  1511  001ADE  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1512  001AE2  0E00               	movlw	0
  1513  001AE4  22DD               	addwfc	postdec2,f,c
  1514  001AE6  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1515  001AEA  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1516  001AEE  CFDE F09C          	movff	postinc2,vfpfcnvrt@f
  1517  001AF2  CFDE F09D          	movff	postinc2,vfpfcnvrt@f+1
  1518  001AF6  CFDE F09E          	movff	postinc2,vfpfcnvrt@f+2
  1519  001AFA  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+3
  1520  001AFE                     l5230:
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             ret
      +                          urn efgtoa(fp, f, c);
  1524  001AFE  C040  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  1525  001B02  C041  F035         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1526  001B06  C09C  F036         	movff	vfpfcnvrt@f,efgtoa@f
  1527  001B0A  C09D  F037         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1528  001B0E  C09E  F038         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1529  001B12  C09F  F039         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1530  001B16  C0A3  F03A         	movff	vfpfcnvrt@c,efgtoa@c
  1531  001B1A  EC0D  F004         	call	_efgtoa	;wreg free
  1532  001B1E  C034  F040         	movff	?_efgtoa,?_vfpfcnvrt
  1533  001B22  C035  F041         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1534  001B26  EF79  F00E         	goto	l269
  1535  001B2A                     l5234:
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!st
      +                          rncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1539  001B2A  0EA0               	movlw	low vfpfcnvrt@ct
  1540  001B2C  6E07               	movwf	strncmp@_l^0,c
  1541  001B2E  0E00               	movlw	high vfpfcnvrt@ct
  1542  001B30  6E08               	movwf	(strncmp@_l+1)^0,c
  1543  001B32  0E16               	movlw	low STR_10
  1544  001B34  6E09               	movwf	strncmp@_r^0,c
  1545  001B36  0E08               	movlw	high STR_10
  1546  001B38  6E0A               	movwf	(strncmp@_r+1)^0,c
  1547  001B3A  0E00               	movlw	0
  1548  001B3C  6E0C               	movwf	(strncmp@n+1)^0,c
  1549  001B3E  0E02               	movlw	2
  1550  001B40  6E0B               	movwf	strncmp@n^0,c
  1551  001B42  EC8B  F016         	call	_strncmp	;wreg free
  1552  001B46  5007               	movf	?_strncmp^0,w,c
  1553  001B48  1008               	iorwf	(?_strncmp+1)^0,w,c
  1554  001B4A  A4D8               	btfss	status,2,c
  1555  001B4C  EFAA  F00D         	goto	u7111
  1556  001B50  EFAC  F00D         	goto	u7110
  1557  001B54                     u7111:
  1558  001B54  EF28  F00E         	goto	l5250
  1559  001B58                     u7110:
  1560  001B58                     
  1561                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if 
      +                          ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1562  001B58  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1563  001B5C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1564  001B60  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  1565  001B64  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  1566  001B68  0E01               	movlw	1
  1567  001B6A  2646               	addwf	??_vfpfcnvrt^0,f,c
  1568  001B6C  0E00               	movlw	0
  1569  001B6E  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1570  001B70  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1571  001B74  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1572  001B78                     	if	0	;tblptru may be non-zero
  1573  001B78                     	endif
  1574  001B78                     	if	0	;tblptru may be non-zero
  1575  001B78                     	endif
  1576  001B78  0008               	tblrd		*
  1577  001B7A  CFF5 F0A3          	movff	tablat,vfpfcnvrt@c
  1578  001B7E  0EBF               	movlw	191
  1579  001B80  6E46               	movwf	??_vfpfcnvrt^0,c
  1580  001B82  0EFF               	movlw	255
  1581  001B84  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  1582  001B86  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1583  001B8A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1584  001B8E  CFDE FFF6          	movff	postinc2,tblptrl
  1585  001B92  CFDD FFF7          	movff	postdec2,tblptrh
  1586  001B96                     	if	0	;tblptru may be non-zero
  1587  001B96                     	endif
  1588  001B96                     	if	0	;tblptru may be non-zero
  1589  001B96                     	endif
  1590  001B96  0008               	tblrd		*
  1591  001B98  50F5               	movf	tablat,w,c
  1592  001B9A  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  1593  001B9C  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  1594  001B9E  5046               	movf	??_vfpfcnvrt^0,w,c
  1595  001BA0  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1596  001BA2  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  1597  001BA4  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1598  001BA6  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  1599  001BA8  E10A               	bnz	u7120
  1600  001BAA  0E1A               	movlw	26
  1601  001BAC  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1602  001BAE  A0D8               	btfss	status,0,c
  1603  001BB0  EFDC  F00D         	goto	u7121
  1604  001BB4  EFDF  F00D         	goto	u7120
  1605  001BB8                     u7121:
  1606  001BB8  0E01               	movlw	1
  1607  001BBA  EFE0  F00D         	goto	u7130
  1608  001BBE                     u7120:
  1609  001BBE  0E00               	movlw	0
  1610  001BC0                     u7130:
  1611  001BC0  0100               	movlb	0	; () banked
  1612  001BC2  6F9A               	movwf	_vfpfcnvrt$474& (0+255),b
  1613  001BC4  6B9B               	clrf	(_vfpfcnvrt$474+1)& (0+255),b
  1614  001BC6                     
  1615                           ; BSR set to: 0
  1616  001BC6  519A               	movf	_vfpfcnvrt$474& (0+255),w,b
  1617  001BC8  119B               	iorwf	(_vfpfcnvrt$474+1)& (0+255),w,b
  1618  001BCA  B4D8               	btfsc	status,2,c
  1619  001BCC  EFEA  F00D         	goto	u7141
  1620  001BD0  EFEC  F00D         	goto	u7140
  1621  001BD4                     u7141:
  1622  001BD4  EF06  F00E         	goto	l5244
  1623  001BD8                     u7140:
  1624  001BD8                     
  1625                           ; BSR set to: 0
  1626                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                
      +                           f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1627  001BD8  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1628  001BDC  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1629  001BE0  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1630  001BE4  0E04               	movlw	4
  1631  001BE6  26DE               	addwf	postinc2,f,c
  1632  001BE8  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1633  001BEC  0E00               	movlw	0
  1634  001BEE  22DD               	addwfc	postdec2,f,c
  1635  001BF0  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1636  001BF4  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1637  001BF8  CFDE F09C          	movff	postinc2,vfpfcnvrt@f
  1638  001BFC  CFDE F09D          	movff	postinc2,vfpfcnvrt@f+1
  1639  001C00  CFDE F09E          	movff	postinc2,vfpfcnvrt@f+2
  1640  001C04  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+3
  1641                           
  1642                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } e
      +                          lse {
  1643  001C08  EF1E  F00E         	goto	l276
  1644  001C0C                     l5244:
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                
      +                           f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1648  001C0C  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1649  001C10  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1650  001C14  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1651  001C18  0E04               	movlw	4
  1652  001C1A  26DE               	addwf	postinc2,f,c
  1653  001C1C  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1654  001C20  0E00               	movlw	0
  1655  001C22  22DD               	addwfc	postdec2,f,c
  1656  001C24  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1657  001C28  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1658  001C2C  CFDE F09C          	movff	postinc2,vfpfcnvrt@f
  1659  001C30  CFDE F09D          	movff	postinc2,vfpfcnvrt@f+1
  1660  001C34  CFDE F09E          	movff	postinc2,vfpfcnvrt@f+2
  1661  001C38  CFDE F09F          	movff	postinc2,vfpfcnvrt@f+3
  1662  001C3C                     l276:
  1663                           
  1664                           ; BSR set to: 0
  1665                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fm
      +                          t += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1666  001C3C  0E02               	movlw	2
  1667  001C3E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1668  001C42  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1669  001C46  26DE               	addwf	postinc2,f,c
  1670  001C48  0E00               	movlw	0
  1671  001C4A  22DD               	addwfc	postdec2,f,c
  1672  001C4C  EF7F  F00D         	goto	l5230
  1673  001C50                     l5250:
  1674                           
  1675                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
  1676  001C50  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1677  001C54  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1678  001C58  CFDE FFF6          	movff	postinc2,tblptrl
  1679  001C5C  CFDD FFF7          	movff	postdec2,tblptrh
  1680  001C60                     	if	0	;tblptru may be non-zero
  1681  001C60                     	endif
  1682  001C60                     	if	0	;tblptru may be non-zero
  1683  001C60                     	endif
  1684  001C60  0008               	tblrd		*
  1685  001C62  50F5               	movf	tablat,w,c
  1686  001C64  0A25               	xorlw	37
  1687  001C66  A4D8               	btfss	status,2,c
  1688  001C68  EF38  F00E         	goto	u7151
  1689  001C6C  EF3A  F00E         	goto	u7150
  1690  001C70                     u7151:
  1691  001C70  EF51  F00E         	goto	l5260
  1692  001C74                     u7150:
  1693  001C74                     
  1694                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
  1695  001C74  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1696  001C78  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1697  001C7C  2ADE               	incf	postinc2,f,c
  1698  001C7E  0E00               	movlw	0
  1699  001C80  22DD               	addwfc	postdec2,f,c
  1700  001C82                     
  1701                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
  1702  001C82  0E00               	movlw	0
  1703  001C84  6E08               	movwf	(fputc@c+1)^0,c
  1704  001C86  0E25               	movlw	37
  1705  001C88  6E07               	movwf	fputc@c^0,c
  1706  001C8A  C040  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1707  001C8E  C041  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1708  001C92  ECF6  F016         	call	_fputc	;wreg free
  1709  001C96                     l5256:
  1710                           
  1711                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
  1712  001C96  0E00               	movlw	0
  1713  001C98  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1714  001C9A  0E01               	movlw	1
  1715  001C9C  6E40               	movwf	?_vfpfcnvrt^0,c
  1716  001C9E  EF79  F00E         	goto	l269
  1717  001CA2                     l5260:
  1718                           
  1719                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
  1720  001CA2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1721  001CA6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1722  001CAA  2ADE               	incf	postinc2,f,c
  1723  001CAC  0E00               	movlw	0
  1724  001CAE  22DD               	addwfc	postdec2,f,c
  1725  001CB0                     
  1726                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
  1727  001CB0  0E00               	movlw	0
  1728  001CB2  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1729  001CB4  0E00               	movlw	0
  1730  001CB6  6E40               	movwf	?_vfpfcnvrt^0,c
  1731  001CB8  EF79  F00E         	goto	l269
  1732  001CBC                     l5266:
  1733                           
  1734                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
  1735  001CBC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1736  001CC0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1737  001CC4  CFDE FFF6          	movff	postinc2,tblptrl
  1738  001CC8  CFDD FFF7          	movff	postdec2,tblptrh
  1739  001CCC                     	if	0	;tblptru may be non-zero
  1740  001CCC                     	endif
  1741  001CCC                     	if	0	;tblptru may be non-zero
  1742  001CCC                     	endif
  1743  001CCC  0008               	tblrd		*
  1744  001CCE  50F5               	movf	tablat,w,c
  1745  001CD0  6E07               	movwf	fputc@c^0,c
  1746  001CD2  6A08               	clrf	(fputc@c+1)^0,c
  1747  001CD4  C040  F009         	movff	vfpfcnvrt@fp,fputc@fp
  1748  001CD8  C041  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1749  001CDC  ECF6  F016         	call	_fputc	;wreg free
  1750  001CE0                     
  1751                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  1752  001CE0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1753  001CE4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1754  001CE8  2ADE               	incf	postinc2,f,c
  1755  001CEA  0E00               	movlw	0
  1756  001CEC  22DD               	addwfc	postdec2,f,c
  1757  001CEE  EF4B  F00E         	goto	l5256
  1758  001CF2                     l269:
  1759  001CF2  0012               	return		;funcret
  1760  001CF4                     __end_of_vfpfcnvrt:
  1761                           	opt callstack 0
  1762                           
  1763 ;; *************** function _strncmp *****************
  1764 ;; Defined at:
  1765 ;;		line 3 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  _l              2    6[COMRAM] PTR const unsigned char 
  1768 ;;		 -> vfpfcnvrt@ct(3), 
  1769 ;;  _r              2    8[COMRAM] PTR const unsigned char 
  1770 ;;		 -> STR_12(3), 
  1771 ;;  n               2   10[COMRAM] unsigned int 
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;  r               2   15[COMRAM] PTR const unsigned char 
  1774 ;;		 -> STR_12(3), 
  1775 ;;  l               2   13[COMRAM] PTR const unsigned char 
  1776 ;;		 -> vfpfcnvrt@ct(3), 
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  2    6[COMRAM] int 
  1779 ;; Registers used:
  1780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1786 ;;      Params:         6       0       0       0       0       0       0       0       0
  1787 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1788 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1789 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1790 ;;Total ram usage:       11 bytes
  1791 ;; Hardware stack levels used:    1
  1792 ;; Hardware stack levels required when called:    2
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_vfpfcnvrt
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text4
  1801  002D16                     __ptext4:
  1802                           	opt callstack 0
  1803  002D16                     _strncmp:
  1804                           	opt callstack 25
  1805  002D16  C007  F00E         	movff	strncmp@_l,strncmp@l
  1806  002D1A  C008  F00F         	movff	strncmp@_l+1,strncmp@l+1
  1807  002D1E  C009  F010         	movff	strncmp@_r,strncmp@r
  1808  002D22  C00A  F011         	movff	strncmp@_r+1,strncmp@r+1
  1809  002D26  060B               	decf	strncmp@n^0,f,c
  1810  002D28  A0D8               	btfss	status,0,c
  1811  002D2A  060C               	decf	(strncmp@n+1)^0,f,c
  1812  002D2C  280B               	incf	strncmp@n^0,w,c
  1813  002D2E  E106               	bnz	u6971
  1814  002D30  280C               	incf	(strncmp@n+1)^0,w,c
  1815  002D32  A4D8               	btfss	status,2,c
  1816  002D34  EF9E  F016         	goto	u6971
  1817  002D38  EFA0  F016         	goto	u6970
  1818  002D3C                     u6971:
  1819  002D3C  EFAD  F016         	goto	l5172
  1820  002D40                     u6970:
  1821  002D40  0E00               	movlw	0
  1822  002D42  6E08               	movwf	(?_strncmp+1)^0,c
  1823  002D44  0E00               	movlw	0
  1824  002D46  6E07               	movwf	?_strncmp^0,c
  1825  002D48  EFF5  F016         	goto	l1078
  1826  002D4C                     l5170:
  1827  002D4C  4A0E               	infsnz	strncmp@l^0,f,c
  1828  002D4E  2A0F               	incf	(strncmp@l+1)^0,f,c
  1829  002D50  4A10               	infsnz	strncmp@r^0,f,c
  1830  002D52  2A11               	incf	(strncmp@r+1)^0,f,c
  1831  002D54  060B               	decf	strncmp@n^0,f,c
  1832  002D56  A0D8               	btfss	status,0,c
  1833  002D58  060C               	decf	(strncmp@n+1)^0,f,c
  1834  002D5A                     l5172:
  1835  002D5A  C00E  FFD9         	movff	strncmp@l,fsr2l
  1836  002D5E  C00F  FFDA         	movff	strncmp@l+1,fsr2h
  1837  002D62  50DF               	movf	indf2,w,c
  1838  002D64  B4D8               	btfsc	status,2,c
  1839  002D66  EFB7  F016         	goto	u6981
  1840  002D6A  EFB9  F016         	goto	u6980
  1841  002D6E                     u6981:
  1842  002D6E  EFE4  F016         	goto	l5180
  1843  002D72                     u6980:
  1844  002D72  C010  FFF6         	movff	strncmp@r,tblptrl
  1845  002D76  C011  FFF7         	movff	strncmp@r+1,tblptrh
  1846  002D7A                     	if	0	;tblptru may be non-zero
  1847  002D7A                     	endif
  1848  002D7A                     	if	0	;tblptru may be non-zero
  1849  002D7A                     	endif
  1850  002D7A  0008               	tblrd		*
  1851  002D7C  50F5               	movf	tablat,w,c
  1852  002D7E  0900               	iorlw	0
  1853  002D80  B4D8               	btfsc	status,2,c
  1854  002D82  EFC5  F016         	goto	u6991
  1855  002D86  EFC7  F016         	goto	u6990
  1856  002D8A                     u6991:
  1857  002D8A  EFE4  F016         	goto	l5180
  1858  002D8E                     u6990:
  1859  002D8E  500B               	movf	strncmp@n^0,w,c
  1860  002D90  100C               	iorwf	(strncmp@n+1)^0,w,c
  1861  002D92  B4D8               	btfsc	status,2,c
  1862  002D94  EFCE  F016         	goto	u7001
  1863  002D98  EFD0  F016         	goto	u7000
  1864  002D9C                     u7001:
  1865  002D9C  EFE4  F016         	goto	l5180
  1866  002DA0                     u7000:
  1867  002DA0  C00E  FFD9         	movff	strncmp@l,fsr2l
  1868  002DA4  C00F  FFDA         	movff	strncmp@l+1,fsr2h
  1869  002DA8  50DF               	movf	indf2,w,c
  1870  002DAA  6E0D               	movwf	??_strncmp^0,c
  1871  002DAC  C010  FFF6         	movff	strncmp@r,tblptrl
  1872  002DB0  C011  FFF7         	movff	strncmp@r+1,tblptrh
  1873  002DB4                     	if	0	;tblptru may be non-zero
  1874  002DB4                     	endif
  1875  002DB4                     	if	0	;tblptru may be non-zero
  1876  002DB4                     	endif
  1877  002DB4  0008               	tblrd		*
  1878  002DB6  50F5               	movf	tablat,w,c
  1879  002DB8  180D               	xorwf	??_strncmp^0,w,c
  1880  002DBA  B4D8               	btfsc	status,2,c
  1881  002DBC  EFE2  F016         	goto	u7011
  1882  002DC0  EFE4  F016         	goto	u7010
  1883  002DC4                     u7011:
  1884  002DC4  EFA6  F016         	goto	l5170
  1885  002DC8                     u7010:
  1886  002DC8                     l5180:
  1887  002DC8  C00E  FFD9         	movff	strncmp@l,fsr2l
  1888  002DCC  C00F  FFDA         	movff	strncmp@l+1,fsr2h
  1889  002DD0  50DF               	movf	indf2,w,c
  1890  002DD2  6E0D               	movwf	??_strncmp^0,c
  1891  002DD4  C010  FFF6         	movff	strncmp@r,tblptrl
  1892  002DD8  C011  FFF7         	movff	strncmp@r+1,tblptrh
  1893  002DDC                     	if	0	;tblptru may be non-zero
  1894  002DDC                     	endif
  1895  002DDC                     	if	0	;tblptru may be non-zero
  1896  002DDC                     	endif
  1897  002DDC  0008               	tblrd		*
  1898  002DDE  50F5               	movf	tablat,w,c
  1899  002DE0  5C0D               	subwf	??_strncmp^0,w,c
  1900  002DE2  6E07               	movwf	?_strncmp^0,c
  1901  002DE4  6A08               	clrf	(?_strncmp+1)^0,c
  1902  002DE6  A0D8               	btfss	status,0,c
  1903  002DE8  0608               	decf	(?_strncmp+1)^0,f,c
  1904  002DEA                     l1078:
  1905  002DEA  0012               	return		;funcret
  1906  002DEC                     __end_of_strncmp:
  1907                           	opt callstack 0
  1908                           
  1909 ;; *************** function _efgtoa *****************
  1910 ;; Defined at:
  1911 ;;		line 319 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  1914 ;;		 -> sprintf@f(6), 
  1915 ;;  f               4   53[COMRAM] PTR struct _IO_FILE
  1916 ;;  c               1   57[COMRAM] unsigned char 
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;  u               4   52[BANK0 ] unsigned char 
  1919 ;;  g               4   44[BANK0 ] unsigned char 
  1920 ;;  l               4   38[BANK0 ] unsigned char 
  1921 ;;  h               4   34[BANK0 ] unsigned char 
  1922 ;;  ou              4    0[BANK0 ] unsigned char 
  1923 ;;  n               2   50[BANK0 ] int 
  1924 ;;  e               2   48[BANK0 ] int 
  1925 ;;  i               2   42[BANK0 ] int 
  1926 ;;  w               2   31[BANK0 ] int 
  1927 ;;  p               2   28[BANK0 ] int 
  1928 ;;  sign            2   26[BANK0 ] int 
  1929 ;;  d               2   24[BANK0 ] int 
  1930 ;;  ne              2   22[BANK0 ] int 
  1931 ;;  m               2   20[BANK0 ] int 
  1932 ;;  pp              2   18[BANK0 ] int 
  1933 ;;  t               2   16[BANK0 ] int 
  1934 ;;  mode            1   33[BANK0 ] unsigned char 
  1935 ;;  nmode           1   30[BANK0 ] unsigned char 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  2   51[COMRAM] int 
  1938 ;; Registers used:
  1939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1945 ;;      Params:         7       0       0       0       0       0       0       0       0
  1946 ;;      Locals:         0      56       0       0       0       0       0       0       0
  1947 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1948 ;;      Totals:        12      56       0       0       0       0       0       0       0
  1949 ;;Total ram usage:       68 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    6
  1952 ;; This function calls:
  1953 ;;		___awdiv
  1954 ;;		___awmod
  1955 ;;		___fladd
  1956 ;;		___fldiv
  1957 ;;		___fleq
  1958 ;;		___flge
  1959 ;;		___flmul
  1960 ;;		___flneg
  1961 ;;		___flsub
  1962 ;;		___fltol
  1963 ;;		___fpclassifyf
  1964 ;;		_floorf
  1965 ;;		_isupper
  1966 ;;		_pad
  1967 ;;		_strcpy
  1968 ;;		_tolower
  1969 ;; This function is called by:
  1970 ;;		_vfpfcnvrt
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text5
  1975  00081A                     __ptext5:
  1976                           	opt callstack 0
  1977  00081A                     _efgtoa:
  1978                           	opt callstack 21
  1979  00081A                     
  1980                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgt
      +                          oa(FILE *fp, long double f, char c);/Applications/microchip/xc8/v2.10/pic/sources/c99/co
      +                          mmon/doprnt.c: 320: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c:
      +                           321:     char mode, nmode;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dop
      +                          rnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;/Applications/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 323:     long double g, h, l, ou, u;
  1981  00081A  0E00               	movlw	0
  1982  00081C  0100               	movlb	0	; () banked
  1983  00081E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  1984  000820  0E00               	movlw	0
  1985  000822  6F7A               	movwf	efgtoa@sign& (0+255),b
  1986  000824                     
  1987                           ; BSR set to: 0
  1988                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
  1989  000824  C036  F08C         	movff	efgtoa@f,efgtoa@g
  1990  000828  C037  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  1991  00082C  C038  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  1992  000830  C039  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  1993  000834                     
  1994                           ; BSR set to: 0
  1995                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0
      +                          ) {
  1996  000834  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1997  000836  EF21  F004         	goto	u6380
  1998  00083A  EF1F  F004         	goto	u6381
  1999  00083E                     u6381:
  2000  00083E  EF37  F004         	goto	l4834
  2001  000842                     u6380:
  2002  000842                     
  2003                           ; BSR set to: 0
  2004                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 
      +                          1;
  2005  000842  0E00               	movlw	0
  2006  000844  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2007  000846  0E01               	movlw	1
  2008  000848  6F7A               	movwf	efgtoa@sign& (0+255),b
  2009  00084A                     
  2010                           ; BSR set to: 0
  2011                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  2012  00084A  C08C  F007         	movff	efgtoa@g,___flneg@f1
  2013  00084E  C08D  F008         	movff	efgtoa@g+1,___flneg@f1+1
  2014  000852  C08E  F009         	movff	efgtoa@g+2,___flneg@f1+2
  2015  000856  C08F  F00A         	movff	efgtoa@g+3,___flneg@f1+3
  2016  00085A  ECF5  F01A         	call	___flneg	;wreg free
  2017  00085E  C007  F08C         	movff	?___flneg,efgtoa@g
  2018  000862  C008  F08D         	movff	?___flneg+1,efgtoa@g+1
  2019  000866  C009  F08E         	movff	?___flneg+2,efgtoa@g+2
  2020  00086A  C00A  F08F         	movff	?___flneg+3,efgtoa@g+3
  2021  00086E                     l4834:
  2022                           
  2023                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  2024  00086E  0E00               	movlw	0
  2025  000870  0100               	movlb	0	; () banked
  2026  000872  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2027  000874  0E00               	movlw	0
  2028  000876  6F92               	movwf	efgtoa@n& (0+255),b
  2029  000878                     
  2030                           ; BSR set to: 0
  2031                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
  2032  000878  C04C  F07F         	movff	_width,efgtoa@w
  2033  00087C  C04D  F080         	movff	_width+1,efgtoa@w+1
  2034  000880                     
  2035                           ; BSR set to: 0
  2036                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign ||
      +                           (flags & (1 << 2))) {
  2037  000880  517A               	movf	efgtoa@sign& (0+255),w,b
  2038  000882  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2039  000884  A4D8               	btfss	status,2,c
  2040  000886  EF47  F004         	goto	u6391
  2041  00088A  EF49  F004         	goto	u6390
  2042  00088E                     u6391:
  2043  00088E  EF50  F004         	goto	l4842
  2044  000892                     u6390:
  2045  000892                     
  2046                           ; BSR set to: 0
  2047  000892  A450               	btfss	_flags^0,2,c
  2048  000894  EF4E  F004         	goto	u6401
  2049  000898  EF50  F004         	goto	u6400
  2050  00089C                     u6401:
  2051  00089C  EF6A  F004         	goto	l4854
  2052  0008A0                     u6400:
  2053  0008A0                     l4842:
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n]
      +                           = sign ? '-' : '+';
  2057  0008A0  517A               	movf	efgtoa@sign& (0+255),w,b
  2058  0008A2  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2059  0008A4  A4D8               	btfss	status,2,c
  2060  0008A6  EF57  F004         	goto	u6411
  2061  0008AA  EF59  F004         	goto	u6410
  2062  0008AE                     u6411:
  2063  0008AE  EF5F  F004         	goto	l4846
  2064  0008B2                     u6410:
  2065  0008B2                     
  2066                           ; BSR set to: 0
  2067  0008B2  0E00               	movlw	0
  2068  0008B4  6F65               	movwf	(_efgtoa$444+1)& (0+255),b
  2069  0008B6  0E2B               	movlw	43
  2070  0008B8  6F64               	movwf	_efgtoa$444& (0+255),b
  2071  0008BA  EF63  F004         	goto	l4848
  2072  0008BE                     l4846:
  2073                           
  2074                           ; BSR set to: 0
  2075  0008BE  0E00               	movlw	0
  2076  0008C0  6F65               	movwf	(_efgtoa$444+1)& (0+255),b
  2077  0008C2  0E2D               	movlw	45
  2078  0008C4  6F64               	movwf	_efgtoa$444& (0+255),b
  2079  0008C6                     l4848:
  2080                           
  2081                           ; BSR set to: 0
  2082  0008C6  C064  F100         	movff	_efgtoa$444,_dbuf
  2083  0008CA                     
  2084                           ; BSR set to: 0
  2085                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
  2086  0008CA  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2087  0008CC  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2088  0008CE                     
  2089                           ; BSR set to: 0
  2090                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
  2091  0008CE  077F               	decf	efgtoa@w& (0+255),f,b
  2092  0008D0  A0D8               	btfss	status,0,c
  2093  0008D2  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2094  0008D4                     l4854:
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 
      +                          ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2098  0008D4  C08C  F007         	movff	efgtoa@g,___fpclassifyf@x
  2099  0008D8  C08D  F008         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2100  0008DC  C08E  F009         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2101  0008E0  C08F  F00A         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2102  0008E4  EC0C  F016         	call	___fpclassifyf	;wreg free
  2103  0008E8  0407               	decf	?___fpclassifyf^0,w,c
  2104  0008EA  1008               	iorwf	(?___fpclassifyf+1)^0,w,c
  2105  0008EC  A4D8               	btfss	status,2,c
  2106  0008EE  EF7B  F004         	goto	u6421
  2107  0008F2  EF7D  F004         	goto	u6420
  2108  0008F6                     u6421:
  2109  0008F6  EFD4  F004         	goto	l4872
  2110  0008FA                     u6420:
  2111  0008FA  0EBF               	movlw	191
  2112  0008FC  6E3B               	movwf	??_efgtoa^0,c
  2113  0008FE  0EFF               	movlw	255
  2114  000900  6E3C               	movwf	(??_efgtoa+1)^0,c
  2115  000902  503A               	movf	efgtoa@c^0,w,c
  2116  000904  6E3D               	movwf	(??_efgtoa+2)^0,c
  2117  000906  6A3E               	clrf	(??_efgtoa+3)^0,c
  2118  000908  503B               	movf	??_efgtoa^0,w,c
  2119  00090A  263D               	addwf	(??_efgtoa+2)^0,f,c
  2120  00090C  503C               	movf	(??_efgtoa+1)^0,w,c
  2121  00090E  223E               	addwfc	(??_efgtoa+3)^0,f,c
  2122  000910  503E               	movf	(??_efgtoa+3)^0,w,c
  2123  000912  E10A               	bnz	u6430
  2124  000914  0E1A               	movlw	26
  2125  000916  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  2126  000918  A0D8               	btfss	status,0,c
  2127  00091A  EF91  F004         	goto	u6431
  2128  00091E  EF94  F004         	goto	u6430
  2129  000922                     u6431:
  2130  000922  0E01               	movlw	1
  2131  000924  EF95  F004         	goto	u6440
  2132  000928                     u6430:
  2133  000928  0E00               	movlw	0
  2134  00092A                     u6440:
  2135  00092A  0100               	movlb	0	; () banked
  2136  00092C  6F66               	movwf	_efgtoa$445& (0+255),b
  2137  00092E  6B67               	clrf	(_efgtoa$445+1)& (0+255),b
  2138  000930                     
  2139                           ; BSR set to: 0
  2140  000930  5166               	movf	_efgtoa$445& (0+255),w,b
  2141  000932  1167               	iorwf	(_efgtoa$445+1)& (0+255),w,b
  2142  000934  B4D8               	btfsc	status,2,c
  2143  000936  EF9F  F004         	goto	u6451
  2144  00093A  EFA1  F004         	goto	u6450
  2145  00093E                     u6451:
  2146  00093E  EFAF  F004         	goto	l4864
  2147  000942                     u6450:
  2148  000942                     
  2149                           ; BSR set to: 0
  2150                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             str
      +                          cpy(&dbuf[n], "INF");
  2151  000942  0E00               	movlw	low _dbuf
  2152  000944  2592               	addwf	efgtoa@n& (0+255),w,b
  2153  000946  6E07               	movwf	strcpy@dest^0,c
  2154  000948  0E01               	movlw	high _dbuf
  2155  00094A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2156  00094C  6E08               	movwf	(strcpy@dest+1)^0,c
  2157  00094E  0E06               	movlw	low STR_2
  2158  000950  6E09               	movwf	strcpy@src^0,c
  2159  000952  0E08               	movlw	high STR_2
  2160  000954  6E0A               	movwf	(strcpy@src+1)^0,c
  2161  000956  ECA6  F019         	call	_strcpy	;wreg free
  2162                           
  2163                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else 
      +                          {
  2164  00095A  EFBB  F004         	goto	l4866
  2165  00095E                     l4864:
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             str
      +                          cpy(&dbuf[n], "inf");
  2169  00095E  0E00               	movlw	low _dbuf
  2170  000960  2592               	addwf	efgtoa@n& (0+255),w,b
  2171  000962  6E07               	movwf	strcpy@dest^0,c
  2172  000964  0E01               	movlw	high _dbuf
  2173  000966  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2174  000968  6E08               	movwf	(strcpy@dest+1)^0,c
  2175  00096A  0E0E               	movlw	low STR_3
  2176  00096C  6E09               	movwf	strcpy@src^0,c
  2177  00096E  0E08               	movlw	high STR_3
  2178  000970  6E0A               	movwf	(strcpy@src+1)^0,c
  2179  000972  ECA6  F019         	call	_strcpy	;wreg free
  2180  000976                     l4866:
  2181                           
  2182                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2183  000976  0100               	movlb	0	; () banked
  2184  000978  0EFD               	movlw	253
  2185  00097A  277F               	addwf	efgtoa@w& (0+255),f,b
  2186  00097C  0EFF               	movlw	255
  2187  00097E  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2188  000980                     l4868:
  2189                           
  2190                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return 
      +                          pad(fp, &dbuf[0], w);
  2191  000980  C034  F017         	movff	efgtoa@fp,pad@fp
  2192  000984  C035  F018         	movff	efgtoa@fp+1,pad@fp+1
  2193  000988  0E00               	movlw	low _dbuf
  2194  00098A  6E19               	movwf	pad@buf^0,c
  2195  00098C  0E01               	movlw	high _dbuf
  2196  00098E  6E1A               	movwf	(pad@buf+1)^0,c
  2197  000990  C07F  F01B         	movff	efgtoa@w,pad@p
  2198  000994  C080  F01C         	movff	efgtoa@w+1,pad@p+1
  2199  000998  ECBD  F017         	call	_pad	;wreg free
  2200  00099C  C017  F034         	movff	?_pad,?_efgtoa
  2201  0009A0  C018  F035         	movff	?_pad+1,?_efgtoa+1
  2202  0009A4  EFE5  F009         	goto	l179
  2203  0009A8                     l4872:
  2204                           
  2205                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 
      +                          ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2206  0009A8  C08C  F007         	movff	efgtoa@g,___fpclassifyf@x
  2207  0009AC  C08D  F008         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2208  0009B0  C08E  F009         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2209  0009B4  C08F  F00A         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2210  0009B8  EC0C  F016         	call	___fpclassifyf	;wreg free
  2211  0009BC  5007               	movf	?___fpclassifyf^0,w,c
  2212  0009BE  1008               	iorwf	(?___fpclassifyf+1)^0,w,c
  2213  0009C0  A4D8               	btfss	status,2,c
  2214  0009C2  EFE5  F004         	goto	u6461
  2215  0009C6  EFE7  F004         	goto	u6460
  2216  0009CA                     u6461:
  2217  0009CA  EF27  F005         	goto	l4890
  2218  0009CE                     u6460:
  2219  0009CE  0EBF               	movlw	191
  2220  0009D0  6E3B               	movwf	??_efgtoa^0,c
  2221  0009D2  0EFF               	movlw	255
  2222  0009D4  6E3C               	movwf	(??_efgtoa+1)^0,c
  2223  0009D6  503A               	movf	efgtoa@c^0,w,c
  2224  0009D8  6E3D               	movwf	(??_efgtoa+2)^0,c
  2225  0009DA  6A3E               	clrf	(??_efgtoa+3)^0,c
  2226  0009DC  503B               	movf	??_efgtoa^0,w,c
  2227  0009DE  263D               	addwf	(??_efgtoa+2)^0,f,c
  2228  0009E0  503C               	movf	(??_efgtoa+1)^0,w,c
  2229  0009E2  223E               	addwfc	(??_efgtoa+3)^0,f,c
  2230  0009E4  503E               	movf	(??_efgtoa+3)^0,w,c
  2231  0009E6  E10A               	bnz	u6470
  2232  0009E8  0E1A               	movlw	26
  2233  0009EA  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  2234  0009EC  A0D8               	btfss	status,0,c
  2235  0009EE  EFFB  F004         	goto	u6471
  2236  0009F2  EFFE  F004         	goto	u6470
  2237  0009F6                     u6471:
  2238  0009F6  0E01               	movlw	1
  2239  0009F8  EFFF  F004         	goto	u6480
  2240  0009FC                     u6470:
  2241  0009FC  0E00               	movlw	0
  2242  0009FE                     u6480:
  2243  0009FE  0100               	movlb	0	; () banked
  2244  000A00  6F68               	movwf	_efgtoa$450& (0+255),b
  2245  000A02  6B69               	clrf	(_efgtoa$450+1)& (0+255),b
  2246  000A04                     
  2247                           ; BSR set to: 0
  2248  000A04  5168               	movf	_efgtoa$450& (0+255),w,b
  2249  000A06  1169               	iorwf	(_efgtoa$450+1)& (0+255),w,b
  2250  000A08  B4D8               	btfsc	status,2,c
  2251  000A0A  EF09  F005         	goto	u6491
  2252  000A0E  EF0B  F005         	goto	u6490
  2253  000A12                     u6491:
  2254  000A12  EF19  F005         	goto	l4882
  2255  000A16                     u6490:
  2256  000A16                     
  2257                           ; BSR set to: 0
  2258                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             str
      +                          cpy(&dbuf[n], "NAN");
  2259  000A16  0E00               	movlw	low _dbuf
  2260  000A18  2592               	addwf	efgtoa@n& (0+255),w,b
  2261  000A1A  6E07               	movwf	strcpy@dest^0,c
  2262  000A1C  0E01               	movlw	high _dbuf
  2263  000A1E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2264  000A20  6E08               	movwf	(strcpy@dest+1)^0,c
  2265  000A22  0E0A               	movlw	low STR_6
  2266  000A24  6E09               	movwf	strcpy@src^0,c
  2267  000A26  0E08               	movlw	high STR_6
  2268  000A28  6E0A               	movwf	(strcpy@src+1)^0,c
  2269  000A2A  ECA6  F019         	call	_strcpy	;wreg free
  2270                           
  2271                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else 
      +                          {
  2272  000A2E  EFBB  F004         	goto	l4866
  2273  000A32                     l4882:
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             str
      +                          cpy(&dbuf[n], "nan");
  2277  000A32  0E00               	movlw	low _dbuf
  2278  000A34  2592               	addwf	efgtoa@n& (0+255),w,b
  2279  000A36  6E07               	movwf	strcpy@dest^0,c
  2280  000A38  0E01               	movlw	high _dbuf
  2281  000A3A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2282  000A3C  6E08               	movwf	(strcpy@dest+1)^0,c
  2283  000A3E  0E12               	movlw	low STR_7
  2284  000A40  6E09               	movwf	strcpy@src^0,c
  2285  000A42  0E08               	movlw	high STR_7
  2286  000A44  6E0A               	movwf	(strcpy@src+1)^0,c
  2287  000A46  ECA6  F019         	call	_strcpy	;wreg free
  2288  000A4A  EFBB  F004         	goto	l4866
  2289  000A4E                     l4890:
  2290                           
  2291                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  2292  000A4E  0E00               	movlw	0
  2293  000A50  0100               	movlb	0	; () banked
  2294  000A52  6F94               	movwf	efgtoa@u& (0+255),b
  2295  000A54  0E00               	movlw	0
  2296  000A56  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2297  000A58  0E80               	movlw	128
  2298  000A5A  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2299  000A5C  0E3F               	movlw	63
  2300  000A5E  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2301                           
  2302                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  2303  000A60  0E00               	movlw	0
  2304  000A62  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2305  000A64  0E00               	movlw	0
  2306  000A66  6F90               	movwf	efgtoa@e& (0+255),b
  2307  000A68                     
  2308                           ; BSR set to: 0
  2309                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 
      +                          0.0)) {
  2310  000A68  C08C  F007         	movff	efgtoa@g,___fleq@ff1
  2311  000A6C  C08D  F008         	movff	efgtoa@g+1,___fleq@ff1+1
  2312  000A70  C08E  F009         	movff	efgtoa@g+2,___fleq@ff1+2
  2313  000A74  C08F  F00A         	movff	efgtoa@g+3,___fleq@ff1+3
  2314  000A78  0E00               	movlw	0
  2315  000A7A  6E0B               	movwf	___fleq@ff2^0,c
  2316  000A7C  0E00               	movlw	0
  2317  000A7E  6E0C               	movwf	(___fleq@ff2+1)^0,c
  2318  000A80  0E00               	movlw	0
  2319  000A82  6E0D               	movwf	(___fleq@ff2+2)^0,c
  2320  000A84  0E00               	movlw	0
  2321  000A86  6E0E               	movwf	(___fleq@ff2+3)^0,c
  2322  000A88  EC76  F018         	call	___fleq	;wreg free
  2323  000A8C  B0D8               	btfsc	status,0,c
  2324  000A8E  EF4B  F005         	goto	u6501
  2325  000A92  EF4D  F005         	goto	u6500
  2326  000A96                     u6501:
  2327  000A96  EFD0  F005         	goto	l4908
  2328  000A9A                     u6500:
  2329  000A9A  EF6C  F005         	goto	l4900
  2330  000A9E                     l4896:
  2331                           
  2332                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u =
      +                           u*10.0;
  2333  000A9E  C094  F007         	movff	efgtoa@u,___flmul@b
  2334  000AA2  C095  F008         	movff	efgtoa@u+1,___flmul@b+1
  2335  000AA6  C096  F009         	movff	efgtoa@u+2,___flmul@b+2
  2336  000AAA  C097  F00A         	movff	efgtoa@u+3,___flmul@b+3
  2337  000AAE  0E00               	movlw	0
  2338  000AB0  6E0B               	movwf	___flmul@a^0,c
  2339  000AB2  0E00               	movlw	0
  2340  000AB4  6E0C               	movwf	(___flmul@a+1)^0,c
  2341  000AB6  0E20               	movlw	32
  2342  000AB8  6E0D               	movwf	(___flmul@a+2)^0,c
  2343  000ABA  0E41               	movlw	65
  2344  000ABC  6E0E               	movwf	(___flmul@a+3)^0,c
  2345  000ABE  EC7A  F00E         	call	___flmul	;wreg free
  2346  000AC2  C007  F094         	movff	?___flmul,efgtoa@u
  2347  000AC6  C008  F095         	movff	?___flmul+1,efgtoa@u+1
  2348  000ACA  C009  F096         	movff	?___flmul+2,efgtoa@u+2
  2349  000ACE  C00A  F097         	movff	?___flmul+3,efgtoa@u+3
  2350  000AD2                     
  2351                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e
      +                          ;
  2352  000AD2  0100               	movlb	0	; () banked
  2353  000AD4  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2354  000AD6  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2355  000AD8                     l4900:
  2356                           
  2357                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (
      +                          !(g < (u*10.0))) {
  2358  000AD8  C08C  F020         	movff	efgtoa@g,___flge@ff1
  2359  000ADC  C08D  F021         	movff	efgtoa@g+1,___flge@ff1+1
  2360  000AE0  C08E  F022         	movff	efgtoa@g+2,___flge@ff1+2
  2361  000AE4  C08F  F023         	movff	efgtoa@g+3,___flge@ff1+3
  2362  000AE8  0E00               	movlw	0
  2363  000AEA  6E0B               	movwf	___flmul@a^0,c
  2364  000AEC  0E00               	movlw	0
  2365  000AEE  6E0C               	movwf	(___flmul@a+1)^0,c
  2366  000AF0  0E20               	movlw	32
  2367  000AF2  6E0D               	movwf	(___flmul@a+2)^0,c
  2368  000AF4  0E41               	movlw	65
  2369  000AF6  6E0E               	movwf	(___flmul@a+3)^0,c
  2370  000AF8  C094  F007         	movff	efgtoa@u,___flmul@b
  2371  000AFC  C095  F008         	movff	efgtoa@u+1,___flmul@b+1
  2372  000B00  C096  F009         	movff	efgtoa@u+2,___flmul@b+2
  2373  000B04  C097  F00A         	movff	efgtoa@u+3,___flmul@b+3
  2374  000B08  EC7A  F00E         	call	___flmul	;wreg free
  2375  000B0C  C007  F024         	movff	?___flmul,___flge@ff2
  2376  000B10  C008  F025         	movff	?___flmul+1,___flge@ff2+1
  2377  000B14  C009  F026         	movff	?___flmul+2,___flge@ff2+2
  2378  000B18  C00A  F027         	movff	?___flmul+3,___flge@ff2+3
  2379  000B1C  EC8A  F015         	call	___flge	;wreg free
  2380  000B20  B0D8               	btfsc	status,0,c
  2381  000B22  EF95  F005         	goto	u6511
  2382  000B26  EF97  F005         	goto	u6510
  2383  000B2A                     u6511:
  2384  000B2A  EF4F  F005         	goto	l4896
  2385  000B2E                     u6510:
  2386  000B2E  EFB7  F005         	goto	l4906
  2387  000B32                     l4902:
  2388                           
  2389                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u =
      +                           u/10.0;
  2390  000B32  C094  F007         	movff	efgtoa@u,___fldiv@b
  2391  000B36  C095  F008         	movff	efgtoa@u+1,___fldiv@b+1
  2392  000B3A  C096  F009         	movff	efgtoa@u+2,___fldiv@b+2
  2393  000B3E  C097  F00A         	movff	efgtoa@u+3,___fldiv@b+3
  2394  000B42  0E00               	movlw	0
  2395  000B44  6E0B               	movwf	___fldiv@a^0,c
  2396  000B46  0E00               	movlw	0
  2397  000B48  6E0C               	movwf	(___fldiv@a+1)^0,c
  2398  000B4A  0E20               	movlw	32
  2399  000B4C  6E0D               	movwf	(___fldiv@a+2)^0,c
  2400  000B4E  0E41               	movlw	65
  2401  000B50  6E0E               	movwf	(___fldiv@a+3)^0,c
  2402  000B52  EC8F  F010         	call	___fldiv	;wreg free
  2403  000B56  C007  F094         	movff	?___fldiv,efgtoa@u
  2404  000B5A  C008  F095         	movff	?___fldiv+1,efgtoa@u+1
  2405  000B5E  C009  F096         	movff	?___fldiv+2,efgtoa@u+2
  2406  000B62  C00A  F097         	movff	?___fldiv+3,efgtoa@u+3
  2407  000B66                     
  2408                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e
      +                          ;
  2409  000B66  0100               	movlb	0	; () banked
  2410  000B68  0790               	decf	efgtoa@e& (0+255),f,b
  2411  000B6A  A0D8               	btfss	status,0,c
  2412  000B6C  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  2413  000B6E                     l4906:
  2414                           
  2415                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (
      +                          g < u) {
  2416  000B6E  C08C  F020         	movff	efgtoa@g,___flge@ff1
  2417  000B72  C08D  F021         	movff	efgtoa@g+1,___flge@ff1+1
  2418  000B76  C08E  F022         	movff	efgtoa@g+2,___flge@ff1+2
  2419  000B7A  C08F  F023         	movff	efgtoa@g+3,___flge@ff1+3
  2420  000B7E  C094  F024         	movff	efgtoa@u,___flge@ff2
  2421  000B82  C095  F025         	movff	efgtoa@u+1,___flge@ff2+1
  2422  000B86  C096  F026         	movff	efgtoa@u+2,___flge@ff2+2
  2423  000B8A  C097  F027         	movff	efgtoa@u+3,___flge@ff2+3
  2424  000B8E  EC8A  F015         	call	___flge	;wreg free
  2425  000B92  A0D8               	btfss	status,0,c
  2426  000B94  EFCE  F005         	goto	u6521
  2427  000B98  EFD0  F005         	goto	u6520
  2428  000B9C                     u6521:
  2429  000B9C  EF99  F005         	goto	l4902
  2430  000BA0                     u6520:
  2431  000BA0                     l4908:
  2432                           
  2433                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolo
      +                          wer((int)c);
  2434  000BA0  C03A  F00D         	movff	efgtoa@c,tolower@c
  2435  000BA4  6A0E               	clrf	(tolower@c+1)^0,c
  2436  000BA6  EC76  F019         	call	_tolower	;wreg free
  2437  000BAA  500D               	movf	?_tolower^0,w,c
  2438  000BAC  0100               	movlb	0	; () banked
  2439  000BAE  6F81               	movwf	efgtoa@mode& (0+255),b
  2440  000BB0                     
  2441                           ; BSR set to: 0
  2442                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mod
      +                          e;
  2443  000BB0  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  2444  000BB4                     
  2445                           ; BSR set to: 0
  2446                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode ==
      +                           'g') {
  2447  000BB4  0E67               	movlw	103
  2448  000BB6  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2449  000BB8  A4D8               	btfss	status,2,c
  2450  000BBA  EFE1  F005         	goto	u6531
  2451  000BBE  EFE3  F005         	goto	u6530
  2452  000BC2                     u6531:
  2453  000BC2  EF09  F006         	goto	l4922
  2454  000BC6                     u6530:
  2455  000BC6                     
  2456                           ; BSR set to: 0
  2457                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0
      +                          ) {
  2458  000BC6  504E               	movf	_prec^0,w,c
  2459  000BC8  104F               	iorwf	(_prec+1)^0,w,c
  2460  000BCA  A4D8               	btfss	status,2,c
  2461  000BCC  EFEA  F005         	goto	u6541
  2462  000BD0  EFEC  F005         	goto	u6540
  2463  000BD4                     u6541:
  2464  000BD4  EFF0  F005         	goto	l4918
  2465  000BD8                     u6540:
  2466  000BD8                     
  2467                           ; BSR set to: 0
  2468                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  2469  000BD8  0E00               	movlw	0
  2470  000BDA  6E4F               	movwf	(_prec+1)^0,c
  2471  000BDC  0E01               	movlw	1
  2472  000BDE  6E4E               	movwf	_prec^0,c
  2473  000BE0                     l4918:
  2474                           
  2475                           ; BSR set to: 0
  2476                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 
      +                          < prec) ? prec : 6;
  2477  000BE0  BE4F               	btfsc	(_prec+1)^0,7,c
  2478  000BE2  EFFD  F005         	goto	u6550
  2479  000BE6  504F               	movf	(_prec+1)^0,w,c
  2480  000BE8  E106               	bnz	u6551
  2481  000BEA  044E               	decf	_prec^0,w,c
  2482  000BEC  B0D8               	btfsc	status,0,c
  2483  000BEE  EFFB  F005         	goto	u6551
  2484  000BF2  EFFD  F005         	goto	u6550
  2485  000BF6                     u6551:
  2486  000BF6  EF03  F006         	goto	l197
  2487  000BFA                     u6550:
  2488  000BFA                     l4920:
  2489                           
  2490                           ; BSR set to: 0
  2491  000BFA  0E00               	movlw	0
  2492  000BFC  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  2493  000BFE  0E06               	movlw	6
  2494  000C00  6F7C               	movwf	efgtoa@p& (0+255),b
  2495  000C02  EF12  F006         	goto	l4928
  2496  000C06                     l197:
  2497                           
  2498                           ; BSR set to: 0
  2499  000C06  C04E  F07C         	movff	_prec,efgtoa@p
  2500  000C0A  C04F  F07D         	movff	_prec+1,efgtoa@p+1
  2501  000C0E  EF12  F006         	goto	l4928
  2502  000C12                     l4922:
  2503                           
  2504                           ; BSR set to: 0
  2505                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (pr
      +                          ec < 0) ? 6 : prec;
  2506  000C12  BE4F               	btfsc	(_prec+1)^0,7,c
  2507  000C14  EF0E  F006         	goto	u6561
  2508  000C18  EF10  F006         	goto	u6560
  2509  000C1C                     u6561:
  2510  000C1C  EFFD  F005         	goto	l4920
  2511  000C20                     u6560:
  2512  000C20  EF03  F006         	goto	l197
  2513  000C24                     l4928:
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode ==
      +                           'g') {
  2517  000C24  0E67               	movlw	103
  2518  000C26  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2519  000C28  A4D8               	btfss	status,2,c
  2520  000C2A  EF19  F006         	goto	u6571
  2521  000C2E  EF1B  F006         	goto	u6570
  2522  000C32                     u6571:
  2523  000C32  EF4A  F006         	goto	l4938
  2524  000C36                     u6570:
  2525  000C36                     
  2526                           ; BSR set to: 0
  2527                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e
      +                           < -4) && !((p - 1) < e)) {
  2528  000C36  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  2529  000C38  EF29  F006         	goto	u6580
  2530  000C3C  0EFC               	movlw	252
  2531  000C3E  5D90               	subwf	efgtoa@e& (0+255),w,b
  2532  000C40  0EFF               	movlw	255
  2533  000C42  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2534  000C44  A0D8               	btfss	status,0,c
  2535  000C46  EF27  F006         	goto	u6581
  2536  000C4A  EF29  F006         	goto	u6580
  2537  000C4E                     u6581:
  2538  000C4E  EF48  F006         	goto	l4936
  2539  000C52                     u6580:
  2540  000C52                     
  2541                           ; BSR set to: 0
  2542  000C52  0EFF               	movlw	255
  2543  000C54  6E3B               	movwf	??_efgtoa^0,c
  2544  000C56  0EFF               	movlw	255
  2545  000C58  6E3C               	movwf	(??_efgtoa+1)^0,c
  2546  000C5A  C07C  F03D         	movff	efgtoa@p,??_efgtoa+2
  2547  000C5E  C07D  F03E         	movff	efgtoa@p+1,??_efgtoa+3
  2548  000C62  503B               	movf	??_efgtoa^0,w,c
  2549  000C64  263D               	addwf	(??_efgtoa+2)^0,f,c
  2550  000C66  503C               	movf	(??_efgtoa+1)^0,w,c
  2551  000C68  223E               	addwfc	(??_efgtoa+3)^0,f,c
  2552  000C6A  5190               	movf	efgtoa@e& (0+255),w,b
  2553  000C6C  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  2554  000C6E  503E               	movf	(??_efgtoa+3)^0,w,c
  2555  000C70  0A80               	xorlw	128
  2556  000C72  6E3F               	movwf	(??_efgtoa+4)^0,c
  2557  000C74  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2558  000C76  0A80               	xorlw	128
  2559  000C78  583F               	subwfb	(??_efgtoa+4)^0,w,c
  2560  000C7A  A0D8               	btfss	status,0,c
  2561  000C7C  EF42  F006         	goto	u6591
  2562  000C80  EF44  F006         	goto	u6590
  2563  000C84                     u6591:
  2564  000C84  EF48  F006         	goto	l4936
  2565  000C88                     u6590:
  2566  000C88                     
  2567                           ; BSR set to: 0
  2568                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmo
      +                          de = 'f';
  2569  000C88  0E66               	movlw	102
  2570  000C8A  6F7E               	movwf	efgtoa@nmode& (0+255),b
  2571                           
  2572                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 392:         } else 
      +                          {
  2573  000C8C  EF4A  F006         	goto	l4938
  2574  000C90                     l4936:
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmo
      +                          de = 'e';
  2578  000C90  0E65               	movlw	101
  2579  000C92  6F7E               	movwf	efgtoa@nmode& (0+255),b
  2580  000C94                     l4938:
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
  2584  000C94  C07C  F074         	movff	efgtoa@p,efgtoa@m
  2585  000C98  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  2586  000C9C                     
  2587                           ; BSR set to: 0
  2588                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode 
      +                          == 'g') || ((nmode == 'f') && (e < 0))) {
  2589  000C9C  0E67               	movlw	103
  2590  000C9E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2591  000CA0  A4D8               	btfss	status,2,c
  2592  000CA2  EF55  F006         	goto	u6601
  2593  000CA6  EF57  F006         	goto	u6600
  2594  000CAA                     u6601:
  2595  000CAA  EF67  F006         	goto	l4946
  2596  000CAE                     u6600:
  2597  000CAE                     
  2598                           ; BSR set to: 0
  2599  000CAE  0E66               	movlw	102
  2600  000CB0  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2601  000CB2  A4D8               	btfss	status,2,c
  2602  000CB4  EF5E  F006         	goto	u6611
  2603  000CB8  EF60  F006         	goto	u6610
  2604  000CBC                     u6611:
  2605  000CBC  EF69  F006         	goto	l4948
  2606  000CC0                     u6610:
  2607  000CC0                     
  2608                           ; BSR set to: 0
  2609  000CC0  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2610  000CC2  EF67  F006         	goto	u6620
  2611  000CC6  EF65  F006         	goto	u6621
  2612  000CCA                     u6621:
  2613  000CCA  EF69  F006         	goto	l4948
  2614  000CCE                     u6620:
  2615  000CCE                     l4946:
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
  2619  000CCE  4B74               	infsnz	efgtoa@m& (0+255),f,b
  2620  000CD0  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  2621  000CD2                     l4948:
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode =
      +                          = 'f') {
  2625  000CD2  0E66               	movlw	102
  2626  000CD4  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2627  000CD6  A4D8               	btfss	status,2,c
  2628  000CD8  EF70  F006         	goto	u6631
  2629  000CDC  EF72  F006         	goto	u6630
  2630  000CE0                     u6631:
  2631  000CE0  EF92  F006         	goto	l4958
  2632  000CE4                     u6630:
  2633  000CE4                     
  2634                           ; BSR set to: 0
  2635                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e <
      +                           0) {
  2636  000CE4  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2637  000CE6  EF79  F006         	goto	u6640
  2638  000CEA  EF77  F006         	goto	u6641
  2639  000CEE                     u6641:
  2640  000CEE  EF85  F006         	goto	l4954
  2641  000CF2                     u6640:
  2642  000CF2                     
  2643                           ; BSR set to: 0
  2644                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u =
      +                           1.0;
  2645  000CF2  0E00               	movlw	0
  2646  000CF4  6F94               	movwf	efgtoa@u& (0+255),b
  2647  000CF6  0E00               	movlw	0
  2648  000CF8  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2649  000CFA  0E80               	movlw	128
  2650  000CFC  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2651  000CFE  0E3F               	movlw	63
  2652  000D00  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2653                           
  2654                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e =
      +                           0;
  2655  000D02  0E00               	movlw	0
  2656  000D04  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2657  000D06  0E00               	movlw	0
  2658  000D08  6F90               	movwf	efgtoa@e& (0+255),b
  2659  000D0A                     l4954:
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(m
      +                          ode == 'g')) {
  2663  000D0A  0E67               	movlw	103
  2664  000D0C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2665  000D0E  B4D8               	btfsc	status,2,c
  2666  000D10  EF8C  F006         	goto	u6651
  2667  000D14  EF8E  F006         	goto	u6650
  2668  000D18                     u6651:
  2669  000D18  EF92  F006         	goto	l4958
  2670  000D1C                     u6650:
  2671  000D1C                     
  2672                           ; BSR set to: 0
  2673                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m +
      +                          = e;
  2674  000D1C  5190               	movf	efgtoa@e& (0+255),w,b
  2675  000D1E  2774               	addwf	efgtoa@m& (0+255),f,b
  2676  000D20  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2677  000D22  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2678  000D24                     l4958:
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  2682  000D24  0E00               	movlw	0
  2683  000D26  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  2684  000D28  0E00               	movlw	0
  2685  000D2A  6F8A               	movwf	efgtoa@i& (0+255),b
  2686  000D2C                     
  2687                           ; BSR set to: 0
  2688                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
  2689  000D2C  C08C  F082         	movff	efgtoa@g,efgtoa@h
  2690  000D30  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  2691  000D34  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  2692  000D38  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  2693  000D3C                     
  2694                           ; BSR set to: 0
  2695                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  2696  000D3C  C094  F060         	movff	efgtoa@u,efgtoa@ou
  2697  000D40  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  2698  000D44  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  2699  000D48  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  2700                           
  2701                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < 
      +                          m) {
  2702  000D4C  EF23  F007         	goto	l4972
  2703  000D50                     l4964:
  2704                           
  2705                           ; BSR set to: 0
  2706                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = flo
      +                          orf(h/u);
  2707  000D50  C082  F007         	movff	efgtoa@h,___fldiv@b
  2708  000D54  C083  F008         	movff	efgtoa@h+1,___fldiv@b+1
  2709  000D58  C084  F009         	movff	efgtoa@h+2,___fldiv@b+2
  2710  000D5C  C085  F00A         	movff	efgtoa@h+3,___fldiv@b+3
  2711  000D60  C094  F00B         	movff	efgtoa@u,___fldiv@a
  2712  000D64  C095  F00C         	movff	efgtoa@u+1,___fldiv@a+1
  2713  000D68  C096  F00D         	movff	efgtoa@u+2,___fldiv@a+2
  2714  000D6C  C097  F00E         	movff	efgtoa@u+3,___fldiv@a+3
  2715  000D70  EC8F  F010         	call	___fldiv	;wreg free
  2716  000D74  C007  F020         	movff	?___fldiv,floorf@x
  2717  000D78  C008  F021         	movff	?___fldiv+1,floorf@x+1
  2718  000D7C  C009  F022         	movff	?___fldiv+2,floorf@x+2
  2719  000D80  C00A  F023         	movff	?___fldiv+3,floorf@x+3
  2720  000D84  EC5C  F012         	call	_floorf	;wreg free
  2721  000D88  C020  F086         	movff	?_floorf,efgtoa@l
  2722  000D8C  C021  F087         	movff	?_floorf+1,efgtoa@l+1
  2723  000D90  C022  F088         	movff	?_floorf+2,efgtoa@l+2
  2724  000D94  C023  F089         	movff	?_floorf+3,efgtoa@l+3
  2725                           
  2726                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (in
      +                          t)l;
  2727  000D98  C086  F007         	movff	efgtoa@l,___fltol@f1
  2728  000D9C  C087  F008         	movff	efgtoa@l+1,___fltol@f1+1
  2729  000DA0  C088  F009         	movff	efgtoa@l+2,___fltol@f1+2
  2730  000DA4  C089  F00A         	movff	efgtoa@l+3,___fltol@f1+3
  2731  000DA8  EC07  F015         	call	___fltol	;wreg free
  2732  000DAC  C007  F078         	movff	?___fltol,efgtoa@d
  2733  000DB0  C008  F079         	movff	?___fltol+1,efgtoa@d+1
  2734  000DB4                     
  2735                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*
      +                          u;
  2736  000DB4  C082  F020         	movff	efgtoa@h,___flsub@b
  2737  000DB8  C083  F021         	movff	efgtoa@h+1,___flsub@b+1
  2738  000DBC  C084  F022         	movff	efgtoa@h+2,___flsub@b+2
  2739  000DC0  C085  F023         	movff	efgtoa@h+3,___flsub@b+3
  2740  000DC4  C094  F00B         	movff	efgtoa@u,___flmul@a
  2741  000DC8  C095  F00C         	movff	efgtoa@u+1,___flmul@a+1
  2742  000DCC  C096  F00D         	movff	efgtoa@u+2,___flmul@a+2
  2743  000DD0  C097  F00E         	movff	efgtoa@u+3,___flmul@a+3
  2744  000DD4  C086  F007         	movff	efgtoa@l,___flmul@b
  2745  000DD8  C087  F008         	movff	efgtoa@l+1,___flmul@b+1
  2746  000DDC  C088  F009         	movff	efgtoa@l+2,___flmul@b+2
  2747  000DE0  C089  F00A         	movff	efgtoa@l+3,___flmul@b+3
  2748  000DE4  EC7A  F00E         	call	___flmul	;wreg free
  2749  000DE8  C007  F024         	movff	?___flmul,___flsub@a
  2750  000DEC  C008  F025         	movff	?___flmul+1,___flsub@a+1
  2751  000DF0  C009  F026         	movff	?___flmul+2,___flsub@a+2
  2752  000DF4  C00A  F027         	movff	?___flmul+3,___flsub@a+3
  2753  000DF8  EC74  F01A         	call	___flsub	;wreg free
  2754  000DFC  C020  F082         	movff	?___flsub,efgtoa@h
  2755  000E00  C021  F083         	movff	?___flsub+1,efgtoa@h+1
  2756  000E04  C022  F084         	movff	?___flsub+2,efgtoa@h+2
  2757  000E08  C023  F085         	movff	?___flsub+3,efgtoa@h+3
  2758  000E0C                     
  2759                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/1
      +                          0.0;
  2760  000E0C  C094  F007         	movff	efgtoa@u,___fldiv@b
  2761  000E10  C095  F008         	movff	efgtoa@u+1,___fldiv@b+1
  2762  000E14  C096  F009         	movff	efgtoa@u+2,___fldiv@b+2
  2763  000E18  C097  F00A         	movff	efgtoa@u+3,___fldiv@b+3
  2764  000E1C  0E00               	movlw	0
  2765  000E1E  6E0B               	movwf	___fldiv@a^0,c
  2766  000E20  0E00               	movlw	0
  2767  000E22  6E0C               	movwf	(___fldiv@a+1)^0,c
  2768  000E24  0E20               	movlw	32
  2769  000E26  6E0D               	movwf	(___fldiv@a+2)^0,c
  2770  000E28  0E41               	movlw	65
  2771  000E2A  6E0E               	movwf	(___fldiv@a+3)^0,c
  2772  000E2C  EC8F  F010         	call	___fldiv	;wreg free
  2773  000E30  C007  F094         	movff	?___fldiv,efgtoa@u
  2774  000E34  C008  F095         	movff	?___fldiv+1,efgtoa@u+1
  2775  000E38  C009  F096         	movff	?___fldiv+2,efgtoa@u+2
  2776  000E3C  C00A  F097         	movff	?___fldiv+3,efgtoa@u+3
  2777  000E40                     
  2778                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
  2779  000E40  0100               	movlb	0	; () banked
  2780  000E42  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  2781  000E44  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  2782  000E46                     l4972:
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < 
      +                          m) {
  2786  000E46  5174               	movf	efgtoa@m& (0+255),w,b
  2787  000E48  5D8A               	subwf	efgtoa@i& (0+255),w,b
  2788  000E4A  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  2789  000E4C  0A80               	xorlw	128
  2790  000E4E  6E3B               	movwf	??_efgtoa^0,c
  2791  000E50  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  2792  000E52  0A80               	xorlw	128
  2793  000E54  583B               	subwfb	??_efgtoa^0,w,c
  2794  000E56  A0D8               	btfss	status,0,c
  2795  000E58  EF30  F007         	goto	u6661
  2796  000E5C  EF32  F007         	goto	u6660
  2797  000E60                     u6661:
  2798  000E60  EFA8  F006         	goto	l4964
  2799  000E64                     u6660:
  2800  000E64                     
  2801                           ; BSR set to: 0
  2802                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  2803  000E64  C094  F007         	movff	efgtoa@u,___flmul@b
  2804  000E68  C095  F008         	movff	efgtoa@u+1,___flmul@b+1
  2805  000E6C  C096  F009         	movff	efgtoa@u+2,___flmul@b+2
  2806  000E70  C097  F00A         	movff	efgtoa@u+3,___flmul@b+3
  2807  000E74  0E00               	movlw	0
  2808  000E76  6E0B               	movwf	___flmul@a^0,c
  2809  000E78  0E00               	movlw	0
  2810  000E7A  6E0C               	movwf	(___flmul@a+1)^0,c
  2811  000E7C  0EA0               	movlw	160
  2812  000E7E  6E0D               	movwf	(___flmul@a+2)^0,c
  2813  000E80  0E40               	movlw	64
  2814  000E82  6E0E               	movwf	(___flmul@a+3)^0,c
  2815  000E84  EC7A  F00E         	call	___flmul	;wreg free
  2816  000E88  C007  F086         	movff	?___flmul,efgtoa@l
  2817  000E8C  C008  F087         	movff	?___flmul+1,efgtoa@l+1
  2818  000E90  C009  F088         	movff	?___flmul+2,efgtoa@l+2
  2819  000E94  C00A  F089         	movff	?___flmul+3,efgtoa@l+3
  2820  000E98                     
  2821                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) 
      +                          {
  2822  000E98  C082  F020         	movff	efgtoa@h,___flge@ff1
  2823  000E9C  C083  F021         	movff	efgtoa@h+1,___flge@ff1+1
  2824  000EA0  C084  F022         	movff	efgtoa@h+2,___flge@ff1+2
  2825  000EA4  C085  F023         	movff	efgtoa@h+3,___flge@ff1+3
  2826  000EA8  C086  F024         	movff	efgtoa@l,___flge@ff2
  2827  000EAC  C087  F025         	movff	efgtoa@l+1,___flge@ff2+1
  2828  000EB0  C088  F026         	movff	efgtoa@l+2,___flge@ff2+2
  2829  000EB4  C089  F027         	movff	efgtoa@l+3,___flge@ff2+3
  2830  000EB8  EC8A  F015         	call	___flge	;wreg free
  2831  000EBC  B0D8               	btfsc	status,0,c
  2832  000EBE  EF63  F007         	goto	u6671
  2833  000EC2  EF65  F007         	goto	u6670
  2834  000EC6                     u6671:
  2835  000EC6  EF70  F007         	goto	l4980
  2836  000ECA                     u6670:
  2837  000ECA                     
  2838                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0
      +                          ;
  2839  000ECA  0E00               	movlw	0
  2840  000ECC  0100               	movlb	0	; () banked
  2841  000ECE  6F86               	movwf	efgtoa@l& (0+255),b
  2842  000ED0  0E00               	movlw	0
  2843  000ED2  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  2844  000ED4  0E00               	movlw	0
  2845  000ED6  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  2846  000ED8  0E00               	movlw	0
  2847  000EDA  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  2848                           
  2849                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
  2850  000EDC  EF99  F007         	goto	l4986
  2851  000EE0                     l4980:
  2852                           
  2853                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h 
      +                          == l) && !(d % 2)) {
  2854  000EE0  C082  F007         	movff	efgtoa@h,___fleq@ff1
  2855  000EE4  C083  F008         	movff	efgtoa@h+1,___fleq@ff1+1
  2856  000EE8  C084  F009         	movff	efgtoa@h+2,___fleq@ff1+2
  2857  000EEC  C085  F00A         	movff	efgtoa@h+3,___fleq@ff1+3
  2858  000EF0  C086  F00B         	movff	efgtoa@l,___fleq@ff2
  2859  000EF4  C087  F00C         	movff	efgtoa@l+1,___fleq@ff2+1
  2860  000EF8  C088  F00D         	movff	efgtoa@l+2,___fleq@ff2+2
  2861  000EFC  C089  F00E         	movff	efgtoa@l+3,___fleq@ff2+3
  2862  000F00  EC76  F018         	call	___fleq	;wreg free
  2863  000F04  A0D8               	btfss	status,0,c
  2864  000F06  EF87  F007         	goto	u6681
  2865  000F0A  EF89  F007         	goto	u6680
  2866  000F0E                     u6681:
  2867  000F0E  EF99  F007         	goto	l4986
  2868  000F12                     u6680:
  2869  000F12  0100               	movlb	0	; () banked
  2870  000F14  B178               	btfsc	efgtoa@d& (0+255),0,b
  2871  000F16  EF8F  F007         	goto	u6691
  2872  000F1A  EF91  F007         	goto	u6690
  2873  000F1E                     u6691:
  2874  000F1E  EF99  F007         	goto	l4986
  2875  000F22                     u6690:
  2876  000F22                     
  2877                           ; BSR set to: 0
  2878                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l =
      +                           0.0;
  2879  000F22  0E00               	movlw	0
  2880  000F24  6F86               	movwf	efgtoa@l& (0+255),b
  2881  000F26  0E00               	movlw	0
  2882  000F28  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  2883  000F2A  0E00               	movlw	0
  2884  000F2C  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  2885  000F2E  0E00               	movlw	0
  2886  000F30  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  2887  000F32                     l4986:
  2888                           
  2889                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  2890  000F32  C08C  F007         	movff	efgtoa@g,___fladd@b
  2891  000F36  C08D  F008         	movff	efgtoa@g+1,___fladd@b+1
  2892  000F3A  C08E  F009         	movff	efgtoa@g+2,___fladd@b+2
  2893  000F3E  C08F  F00A         	movff	efgtoa@g+3,___fladd@b+3
  2894  000F42  C086  F00B         	movff	efgtoa@l,___fladd@a
  2895  000F46  C087  F00C         	movff	efgtoa@l+1,___fladd@a+1
  2896  000F4A  C088  F00D         	movff	efgtoa@l+2,___fladd@a+2
  2897  000F4E  C089  F00E         	movff	efgtoa@l+3,___fladd@a+3
  2898  000F52  ECE6  F009         	call	___fladd	;wreg free
  2899  000F56  C007  F082         	movff	?___fladd,efgtoa@h
  2900  000F5A  C008  F083         	movff	?___fladd+1,efgtoa@h+1
  2901  000F5E  C009  F084         	movff	?___fladd+2,efgtoa@h+2
  2902  000F62  C00A  F085         	movff	?___fladd+3,efgtoa@h+3
  2903  000F66                     
  2904                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  2905  000F66  C060  F094         	movff	efgtoa@ou,efgtoa@u
  2906  000F6A  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  2907  000F6E  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  2908  000F72  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  2909  000F76                     
  2910                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode
      +                           == 'e') ? 0 : e;
  2911  000F76  0E65               	movlw	101
  2912  000F78  0100               	movlb	0	; () banked
  2913  000F7A  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2914  000F7C  B4D8               	btfsc	status,2,c
  2915  000F7E  EFC3  F007         	goto	u6701
  2916  000F82  EFC5  F007         	goto	u6700
  2917  000F86                     u6701:
  2918  000F86  EFCB  F007         	goto	l4994
  2919  000F8A                     u6700:
  2920  000F8A                     
  2921                           ; BSR set to: 0
  2922  000F8A  C090  F076         	movff	efgtoa@e,efgtoa@ne
  2923  000F8E  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  2924  000F92  EFCF  F007         	goto	l223
  2925  000F96                     l4994:
  2926                           
  2927                           ; BSR set to: 0
  2928  000F96  0E00               	movlw	0
  2929  000F98  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  2930  000F9A  0E00               	movlw	0
  2931  000F9C  6F76               	movwf	efgtoa@ne& (0+255),b
  2932  000F9E                     l223:
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  2936  000F9E  0E00               	movlw	0
  2937  000FA0  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  2938  000FA2  0E00               	movlw	0
  2939  000FA4  6F72               	movwf	efgtoa@pp& (0+255),b
  2940                           
  2941                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  2942  000FA6  0E00               	movlw	0
  2943  000FA8  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  2944  000FAA  0E00               	movlw	0
  2945  000FAC  6F70               	movwf	efgtoa@t& (0+255),b
  2946                           
  2947                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  2948  000FAE  0E00               	movlw	0
  2949  000FB0  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  2950  000FB2  0E00               	movlw	0
  2951  000FB4  6F8A               	movwf	efgtoa@i& (0+255),b
  2952                           
  2953                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i <
      +                           m) && (n < (80 - 5))) {
  2954  000FB6  EFCB  F008         	goto	l5044
  2955  000FBA                     l4996:
  2956                           
  2957                           ; BSR set to: 0
  2958                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = flo
      +                          orf(h/u);
  2959  000FBA  C082  F007         	movff	efgtoa@h,___fldiv@b
  2960  000FBE  C083  F008         	movff	efgtoa@h+1,___fldiv@b+1
  2961  000FC2  C084  F009         	movff	efgtoa@h+2,___fldiv@b+2
  2962  000FC6  C085  F00A         	movff	efgtoa@h+3,___fldiv@b+3
  2963  000FCA  C094  F00B         	movff	efgtoa@u,___fldiv@a
  2964  000FCE  C095  F00C         	movff	efgtoa@u+1,___fldiv@a+1
  2965  000FD2  C096  F00D         	movff	efgtoa@u+2,___fldiv@a+2
  2966  000FD6  C097  F00E         	movff	efgtoa@u+3,___fldiv@a+3
  2967  000FDA  EC8F  F010         	call	___fldiv	;wreg free
  2968  000FDE  C007  F020         	movff	?___fldiv,floorf@x
  2969  000FE2  C008  F021         	movff	?___fldiv+1,floorf@x+1
  2970  000FE6  C009  F022         	movff	?___fldiv+2,floorf@x+2
  2971  000FEA  C00A  F023         	movff	?___fldiv+3,floorf@x+3
  2972  000FEE  EC5C  F012         	call	_floorf	;wreg free
  2973  000FF2  C020  F086         	movff	?_floorf,efgtoa@l
  2974  000FF6  C021  F087         	movff	?_floorf+1,efgtoa@l+1
  2975  000FFA  C022  F088         	movff	?_floorf+2,efgtoa@l+2
  2976  000FFE  C023  F089         	movff	?_floorf+3,efgtoa@l+3
  2977                           
  2978                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (in
      +                          t)l;
  2979  001002  C086  F007         	movff	efgtoa@l,___fltol@f1
  2980  001006  C087  F008         	movff	efgtoa@l+1,___fltol@f1+1
  2981  00100A  C088  F009         	movff	efgtoa@l+2,___fltol@f1+2
  2982  00100E  C089  F00A         	movff	efgtoa@l+3,___fltol@f1+3
  2983  001012  EC07  F015         	call	___fltol	;wreg free
  2984  001016  C007  F078         	movff	?___fltol,efgtoa@d
  2985  00101A  C008  F079         	movff	?___fltol+1,efgtoa@d+1
  2986  00101E                     
  2987                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(f
      +                          lags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  2988  00101E  B850               	btfsc	_flags^0,4,c
  2989  001020  EF14  F008         	goto	u6711
  2990  001024  EF16  F008         	goto	u6710
  2991  001028                     u6711:
  2992  001028  EF34  F008         	goto	l5008
  2993  00102C                     u6710:
  2994  00102C  0100               	movlb	0	; () banked
  2995  00102E  5178               	movf	efgtoa@d& (0+255),w,b
  2996  001030  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  2997  001032  A4D8               	btfss	status,2,c
  2998  001034  EF1E  F008         	goto	u6721
  2999  001038  EF20  F008         	goto	u6720
  3000  00103C                     u6721:
  3001  00103C  EF34  F008         	goto	l5008
  3002  001040                     u6720:
  3003  001040                     
  3004                           ; BSR set to: 0
  3005  001040  0E67               	movlw	103
  3006  001042  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3007  001044  A4D8               	btfss	status,2,c
  3008  001046  EF27  F008         	goto	u6731
  3009  00104A  EF29  F008         	goto	u6730
  3010  00104E                     u6731:
  3011  00104E  EF34  F008         	goto	l5008
  3012  001052                     u6730:
  3013  001052                     
  3014                           ; BSR set to: 0
  3015  001052  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3016  001054  EF30  F008         	goto	u6740
  3017  001058  EF2E  F008         	goto	u6741
  3018  00105C                     u6741:
  3019  00105C  EF34  F008         	goto	l5008
  3020  001060                     u6740:
  3021  001060                     
  3022                           ; BSR set to: 0
  3023                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t
      +                          ;
  3024  001060  4B70               	infsnz	efgtoa@t& (0+255),f,b
  3025  001062  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  3026                           
  3027                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else 
      +                          {
  3028  001064  EF7F  F008         	goto	l5036
  3029  001068                     l5008:
  3030                           
  3031                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if 
      +                          (!pp && (ne < 0)) {
  3032  001068  0100               	movlb	0	; () banked
  3033  00106A  5172               	movf	efgtoa@pp& (0+255),w,b
  3034  00106C  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3035  00106E  A4D8               	btfss	status,2,c
  3036  001070  EF3C  F008         	goto	u6751
  3037  001074  EF3E  F008         	goto	u6750
  3038  001078                     u6751:
  3039  001078  EF68  F008         	goto	l5028
  3040  00107C                     u6750:
  3041  00107C                     
  3042                           ; BSR set to: 0
  3043  00107C  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3044  00107E  EF45  F008         	goto	u6760
  3045  001082  EF43  F008         	goto	u6761
  3046  001086                     u6761:
  3047  001086  EF68  F008         	goto	l5028
  3048  00108A                     u6760:
  3049  00108A                     
  3050                           ; BSR set to: 0
  3051                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                
      +                           dbuf[n++] = '.';
  3052  00108A  0E00               	movlw	low _dbuf
  3053  00108C  2592               	addwf	efgtoa@n& (0+255),w,b
  3054  00108E  6ED9               	movwf	fsr2l,c
  3055  001090  0E01               	movlw	high _dbuf
  3056  001092  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3057  001094  6EDA               	movwf	fsr2h,c
  3058  001096  0E2E               	movlw	46
  3059  001098  6EDF               	movwf	indf2,c
  3060  00109A                     
  3061                           ; BSR set to: 0
  3062  00109A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3063  00109C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3064  00109E                     
  3065                           ; BSR set to: 0
  3066                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                
      +                           --w;
  3067  00109E  077F               	decf	efgtoa@w& (0+255),f,b
  3068  0010A0  A0D8               	btfss	status,0,c
  3069  0010A2  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3070  0010A4                     
  3071                           ; BSR set to: 0
  3072                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                
      +                           pp = 1;
  3073  0010A4  0E00               	movlw	0
  3074  0010A6  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3075  0010A8  0E01               	movlw	1
  3076  0010AA  6F72               	movwf	efgtoa@pp& (0+255),b
  3077  0010AC  EF68  F008         	goto	l5028
  3078  0010B0                     l5020:
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                
      +                           dbuf[n++] = '0';
  3082  0010B0  0E00               	movlw	low _dbuf
  3083  0010B2  2592               	addwf	efgtoa@n& (0+255),w,b
  3084  0010B4  6ED9               	movwf	fsr2l,c
  3085  0010B6  0E01               	movlw	high _dbuf
  3086  0010B8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3087  0010BA  6EDA               	movwf	fsr2h,c
  3088  0010BC  0E30               	movlw	48
  3089  0010BE  6EDF               	movwf	indf2,c
  3090  0010C0                     
  3091                           ; BSR set to: 0
  3092  0010C0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3093  0010C2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3094  0010C4                     
  3095                           ; BSR set to: 0
  3096                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                
      +                           --w;
  3097  0010C4  077F               	decf	efgtoa@w& (0+255),f,b
  3098  0010C6  A0D8               	btfss	status,0,c
  3099  0010C8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3100  0010CA                     
  3101                           ; BSR set to: 0
  3102                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                
      +                           --t;
  3103  0010CA  0770               	decf	efgtoa@t& (0+255),f,b
  3104  0010CC  A0D8               	btfss	status,0,c
  3105  0010CE  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  3106  0010D0                     l5028:
  3107                           
  3108                           ; BSR set to: 0
  3109                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             whi
      +                          le (t) {
  3110  0010D0  5170               	movf	efgtoa@t& (0+255),w,b
  3111  0010D2  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3112  0010D4  A4D8               	btfss	status,2,c
  3113  0010D6  EF6F  F008         	goto	u6771
  3114  0010DA  EF71  F008         	goto	u6770
  3115  0010DE                     u6771:
  3116  0010DE  EF58  F008         	goto	l5020
  3117  0010E2                     u6770:
  3118  0010E2                     
  3119                           ; BSR set to: 0
  3120                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbu
      +                          f[n++] = '0' + d;
  3121  0010E2  0E00               	movlw	low _dbuf
  3122  0010E4  2592               	addwf	efgtoa@n& (0+255),w,b
  3123  0010E6  6ED9               	movwf	fsr2l,c
  3124  0010E8  0E01               	movlw	high _dbuf
  3125  0010EA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3126  0010EC  6EDA               	movwf	fsr2h,c
  3127  0010EE  5178               	movf	efgtoa@d& (0+255),w,b
  3128  0010F0  0F30               	addlw	48
  3129  0010F2  6EDF               	movwf	indf2,c
  3130  0010F4                     
  3131                           ; BSR set to: 0
  3132  0010F4  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3133  0010F6  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3134  0010F8                     
  3135                           ; BSR set to: 0
  3136                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w
      +                          ;
  3137  0010F8  077F               	decf	efgtoa@w& (0+255),f,b
  3138  0010FA  A0D8               	btfss	status,0,c
  3139  0010FC  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3140  0010FE                     l5036:
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*
      +                          u;
  3144  0010FE  C082  F020         	movff	efgtoa@h,___flsub@b
  3145  001102  C083  F021         	movff	efgtoa@h+1,___flsub@b+1
  3146  001106  C084  F022         	movff	efgtoa@h+2,___flsub@b+2
  3147  00110A  C085  F023         	movff	efgtoa@h+3,___flsub@b+3
  3148  00110E  C094  F00B         	movff	efgtoa@u,___flmul@a
  3149  001112  C095  F00C         	movff	efgtoa@u+1,___flmul@a+1
  3150  001116  C096  F00D         	movff	efgtoa@u+2,___flmul@a+2
  3151  00111A  C097  F00E         	movff	efgtoa@u+3,___flmul@a+3
  3152  00111E  C086  F007         	movff	efgtoa@l,___flmul@b
  3153  001122  C087  F008         	movff	efgtoa@l+1,___flmul@b+1
  3154  001126  C088  F009         	movff	efgtoa@l+2,___flmul@b+2
  3155  00112A  C089  F00A         	movff	efgtoa@l+3,___flmul@b+3
  3156  00112E  EC7A  F00E         	call	___flmul	;wreg free
  3157  001132  C007  F024         	movff	?___flmul,___flsub@a
  3158  001136  C008  F025         	movff	?___flmul+1,___flsub@a+1
  3159  00113A  C009  F026         	movff	?___flmul+2,___flsub@a+2
  3160  00113E  C00A  F027         	movff	?___flmul+3,___flsub@a+3
  3161  001142  EC74  F01A         	call	___flsub	;wreg free
  3162  001146  C020  F082         	movff	?___flsub,efgtoa@h
  3163  00114A  C021  F083         	movff	?___flsub+1,efgtoa@h+1
  3164  00114E  C022  F084         	movff	?___flsub+2,efgtoa@h+2
  3165  001152  C023  F085         	movff	?___flsub+3,efgtoa@h+3
  3166  001156                     
  3167                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/1
      +                          0.0;
  3168  001156  C094  F007         	movff	efgtoa@u,___fldiv@b
  3169  00115A  C095  F008         	movff	efgtoa@u+1,___fldiv@b+1
  3170  00115E  C096  F009         	movff	efgtoa@u+2,___fldiv@b+2
  3171  001162  C097  F00A         	movff	efgtoa@u+3,___fldiv@b+3
  3172  001166  0E00               	movlw	0
  3173  001168  6E0B               	movwf	___fldiv@a^0,c
  3174  00116A  0E00               	movlw	0
  3175  00116C  6E0C               	movwf	(___fldiv@a+1)^0,c
  3176  00116E  0E20               	movlw	32
  3177  001170  6E0D               	movwf	(___fldiv@a+2)^0,c
  3178  001172  0E41               	movlw	65
  3179  001174  6E0E               	movwf	(___fldiv@a+3)^0,c
  3180  001176  EC8F  F010         	call	___fldiv	;wreg free
  3181  00117A  C007  F094         	movff	?___fldiv,efgtoa@u
  3182  00117E  C008  F095         	movff	?___fldiv+1,efgtoa@u+1
  3183  001182  C009  F096         	movff	?___fldiv+2,efgtoa@u+2
  3184  001186  C00A  F097         	movff	?___fldiv+3,efgtoa@u+3
  3185  00118A                     
  3186                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
  3187  00118A  0100               	movlb	0	; () banked
  3188  00118C  0776               	decf	efgtoa@ne& (0+255),f,b
  3189  00118E  A0D8               	btfss	status,0,c
  3190  001190  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  3191  001192                     
  3192                           ; BSR set to: 0
  3193                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
  3194  001192  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3195  001194  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3196  001196                     l5044:
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i <
      +                           m) && (n < (80 - 5))) {
  3200  001196  5174               	movf	efgtoa@m& (0+255),w,b
  3201  001198  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3202  00119A  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3203  00119C  0A80               	xorlw	128
  3204  00119E  6E3B               	movwf	??_efgtoa^0,c
  3205  0011A0  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3206  0011A2  0A80               	xorlw	128
  3207  0011A4  583B               	subwfb	??_efgtoa^0,w,c
  3208  0011A6  B0D8               	btfsc	status,0,c
  3209  0011A8  EFD8  F008         	goto	u6781
  3210  0011AC  EFDA  F008         	goto	u6780
  3211  0011B0                     u6781:
  3212  0011B0  EFE8  F008         	goto	l5048
  3213  0011B4                     u6780:
  3214  0011B4                     
  3215                           ; BSR set to: 0
  3216  0011B4  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3217  0011B6  EFE6  F008         	goto	u6791
  3218  0011BA  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3219  0011BC  E109               	bnz	u6790
  3220  0011BE  0E4B               	movlw	75
  3221  0011C0  5D92               	subwf	efgtoa@n& (0+255),w,b
  3222  0011C2  A0D8               	btfss	status,0,c
  3223  0011C4  EFE6  F008         	goto	u6791
  3224  0011C8  EFE8  F008         	goto	u6790
  3225  0011CC                     u6791:
  3226  0011CC  EFDD  F007         	goto	l4996
  3227  0011D0                     u6790:
  3228  0011D0                     l5048:
  3229                           
  3230                           ; BSR set to: 0
  3231                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && 
      +                          (flags & (1 << 4))) {
  3232  0011D0  5172               	movf	efgtoa@pp& (0+255),w,b
  3233  0011D2  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3234  0011D4  A4D8               	btfss	status,2,c
  3235  0011D6  EFEF  F008         	goto	u6801
  3236  0011DA  EFF1  F008         	goto	u6800
  3237  0011DE                     u6801:
  3238  0011DE  EF02  F009         	goto	l5056
  3239  0011E2                     u6800:
  3240  0011E2                     
  3241                           ; BSR set to: 0
  3242  0011E2  A850               	btfss	_flags^0,4,c
  3243  0011E4  EFF6  F008         	goto	u6811
  3244  0011E8  EFF8  F008         	goto	u6810
  3245  0011EC                     u6811:
  3246  0011EC  EF02  F009         	goto	l5056
  3247  0011F0                     u6810:
  3248  0011F0                     
  3249                           ; BSR set to: 0
  3250                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n+
      +                          +] = '.';
  3251  0011F0  0E00               	movlw	low _dbuf
  3252  0011F2  2592               	addwf	efgtoa@n& (0+255),w,b
  3253  0011F4  6ED9               	movwf	fsr2l,c
  3254  0011F6  0E01               	movlw	high _dbuf
  3255  0011F8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3256  0011FA  6EDA               	movwf	fsr2h,c
  3257  0011FC  0E2E               	movlw	46
  3258  0011FE  6EDF               	movwf	indf2,c
  3259  001200                     
  3260                           ; BSR set to: 0
  3261  001200  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3262  001202  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3263  001204                     l5056:
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '
      +                          \0';
  3267  001204  0E00               	movlw	low _dbuf
  3268  001206  2592               	addwf	efgtoa@n& (0+255),w,b
  3269  001208  6ED9               	movwf	fsr2l,c
  3270  00120A  0E01               	movlw	high _dbuf
  3271  00120C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3272  00120E  6EDA               	movwf	fsr2h,c
  3273  001210  0E00               	movlw	0
  3274  001212  6EDF               	movwf	indf2,c
  3275  001214                     
  3276                           ; BSR set to: 0
  3277                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode =
      +                          = 'e') {
  3278  001214  0E65               	movlw	101
  3279  001216  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3280  001218  A4D8               	btfss	status,2,c
  3281  00121A  EF11  F009         	goto	u6821
  3282  00121E  EF13  F009         	goto	u6820
  3283  001222                     u6821:
  3284  001222  EFC0  F004         	goto	l4868
  3285  001226                     u6820:
  3286  001226                     
  3287                           ; BSR set to: 0
  3288                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = siz
      +                          eof(dbuf) - 1;
  3289  001226  0E00               	movlw	0
  3290  001228  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3291  00122A  0E4F               	movlw	79
  3292  00122C  6F8A               	movwf	efgtoa@i& (0+255),b
  3293  00122E                     
  3294                           ; BSR set to: 0
  3295                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i]
      +                           = '\0';
  3296  00122E  0E00               	movlw	low _dbuf
  3297  001230  258A               	addwf	efgtoa@i& (0+255),w,b
  3298  001232  6ED9               	movwf	fsr2l,c
  3299  001234  0E01               	movlw	high _dbuf
  3300  001236  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3301  001238  6EDA               	movwf	fsr2h,c
  3302  00123A  0E00               	movlw	0
  3303  00123C  6EDF               	movwf	indf2,c
  3304  00123E                     
  3305                           ; BSR set to: 0
  3306                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 
      +                          0;
  3307  00123E  0E00               	movlw	0
  3308  001240  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3309  001242  0E00               	movlw	0
  3310  001244  6F7A               	movwf	efgtoa@sign& (0+255),b
  3311  001246                     
  3312                           ; BSR set to: 0
  3313                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e <
      +                           0) {
  3314  001246  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3315  001248  EF2A  F009         	goto	u6830
  3316  00124C  EF28  F009         	goto	u6831
  3317  001250                     u6831:
  3318  001250  EF32  F009         	goto	l5072
  3319  001254                     u6830:
  3320  001254                     
  3321                           ; BSR set to: 0
  3322                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sig
      +                          n = 1;
  3323  001254  0E00               	movlw	0
  3324  001256  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3325  001258  0E01               	movlw	1
  3326  00125A  6F7A               	movwf	efgtoa@sign& (0+255),b
  3327  00125C                     
  3328                           ; BSR set to: 0
  3329                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e =
      +                           -e;
  3330  00125C  6D90               	negf	efgtoa@e& (0+255),b
  3331  00125E  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3332  001260  B0D8               	btfsc	status,0,c
  3333  001262  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3334  001264                     l5072:
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
  3338  001264  0E00               	movlw	0
  3339  001266  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3340  001268  0E02               	movlw	2
  3341  00126A  6F7C               	movwf	efgtoa@p& (0+255),b
  3342                           
  3343                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (
      +                          e || (0 < p)) {
  3344  00126C  EF63  F009         	goto	l5084
  3345  001270                     l5074:
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i
      +                          ;
  3349  001270  078A               	decf	efgtoa@i& (0+255),f,b
  3350  001272  A0D8               	btfss	status,0,c
  3351  001274  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3352  001276                     
  3353                           ; BSR set to: 0
  3354                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbu
      +                          f[i] = '0' + (e % 10);
  3355  001276  0E00               	movlw	low _dbuf
  3356  001278  258A               	addwf	efgtoa@i& (0+255),w,b
  3357  00127A  6ED9               	movwf	fsr2l,c
  3358  00127C  0E01               	movlw	high _dbuf
  3359  00127E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3360  001280  6EDA               	movwf	fsr2h,c
  3361  001282  C090  F007         	movff	efgtoa@e,___awmod@dividend
  3362  001286  C091  F008         	movff	efgtoa@e+1,___awmod@dividend+1
  3363  00128A  0E00               	movlw	0
  3364  00128C  6E0A               	movwf	(___awmod@divisor+1)^0,c
  3365  00128E  0E0A               	movlw	10
  3366  001290  6E09               	movwf	___awmod@divisor^0,c
  3367  001292  EC1E  F018         	call	___awmod	;wreg free
  3368  001296  5007               	movf	?___awmod^0,w,c
  3369  001298  0F30               	addlw	48
  3370  00129A  6EDF               	movwf	indf2,c
  3371  00129C                     
  3372                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e =
      +                           e / 10;
  3373  00129C  C090  F007         	movff	efgtoa@e,___awdiv@dividend
  3374  0012A0  C091  F008         	movff	efgtoa@e+1,___awdiv@dividend+1
  3375  0012A4  0E00               	movlw	0
  3376  0012A6  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3377  0012A8  0E0A               	movlw	10
  3378  0012AA  6E09               	movwf	___awdiv@divisor^0,c
  3379  0012AC  EC5B  F017         	call	___awdiv	;wreg free
  3380  0012B0  C007  F090         	movff	?___awdiv,efgtoa@e
  3381  0012B4  C008  F091         	movff	?___awdiv+1,efgtoa@e+1
  3382  0012B8                     
  3383                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p
      +                          ;
  3384  0012B8  0100               	movlb	0	; () banked
  3385  0012BA  077C               	decf	efgtoa@p& (0+255),f,b
  3386  0012BC  A0D8               	btfss	status,0,c
  3387  0012BE  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3388  0012C0                     
  3389                           ; BSR set to: 0
  3390                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w
      +                          ;
  3391  0012C0  077F               	decf	efgtoa@w& (0+255),f,b
  3392  0012C2  A0D8               	btfss	status,0,c
  3393  0012C4  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3394  0012C6                     l5084:
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (
      +                          e || (0 < p)) {
  3398  0012C6  5190               	movf	efgtoa@e& (0+255),w,b
  3399  0012C8  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3400  0012CA  A4D8               	btfss	status,2,c
  3401  0012CC  EF6A  F009         	goto	u6841
  3402  0012D0  EF6C  F009         	goto	u6840
  3403  0012D4                     u6841:
  3404  0012D4  EF38  F009         	goto	l5074
  3405  0012D8                     u6840:
  3406  0012D8                     
  3407                           ; BSR set to: 0
  3408  0012D8  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3409  0012DA  EF79  F009         	goto	u6850
  3410  0012DE  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  3411  0012E0  E106               	bnz	u6851
  3412  0012E2  057C               	decf	efgtoa@p& (0+255),w,b
  3413  0012E4  B0D8               	btfsc	status,0,c
  3414  0012E6  EF77  F009         	goto	u6851
  3415  0012EA  EF79  F009         	goto	u6850
  3416  0012EE                     u6851:
  3417  0012EE  EF38  F009         	goto	l5074
  3418  0012F2                     u6850:
  3419  0012F2                     
  3420                           ; BSR set to: 0
  3421                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
  3422  0012F2  078A               	decf	efgtoa@i& (0+255),f,b
  3423  0012F4  A0D8               	btfss	status,0,c
  3424  0012F6  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3425  0012F8                     
  3426                           ; BSR set to: 0
  3427                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i]
      +                           = sign ? '-' : '+';
  3428  0012F8  517A               	movf	efgtoa@sign& (0+255),w,b
  3429  0012FA  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3430  0012FC  A4D8               	btfss	status,2,c
  3431  0012FE  EF83  F009         	goto	u6861
  3432  001302  EF85  F009         	goto	u6860
  3433  001306                     u6861:
  3434  001306  EF8B  F009         	goto	l5094
  3435  00130A                     u6860:
  3436  00130A                     
  3437                           ; BSR set to: 0
  3438  00130A  0E00               	movlw	0
  3439  00130C  6F6B               	movwf	(_efgtoa$454+1)& (0+255),b
  3440  00130E  0E2B               	movlw	43
  3441  001310  6F6A               	movwf	_efgtoa$454& (0+255),b
  3442  001312  EF8F  F009         	goto	l5096
  3443  001316                     l5094:
  3444                           
  3445                           ; BSR set to: 0
  3446  001316  0E00               	movlw	0
  3447  001318  6F6B               	movwf	(_efgtoa$454+1)& (0+255),b
  3448  00131A  0E2D               	movlw	45
  3449  00131C  6F6A               	movwf	_efgtoa$454& (0+255),b
  3450  00131E                     l5096:
  3451                           
  3452                           ; BSR set to: 0
  3453  00131E  0E00               	movlw	low _dbuf
  3454  001320  258A               	addwf	efgtoa@i& (0+255),w,b
  3455  001322  6ED9               	movwf	fsr2l,c
  3456  001324  0E01               	movlw	high _dbuf
  3457  001326  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3458  001328  6EDA               	movwf	fsr2h,c
  3459  00132A  C06A  FFDF         	movff	_efgtoa$454,indf2
  3460  00132E                     
  3461                           ; BSR set to: 0
  3462                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
  3463  00132E  077F               	decf	efgtoa@w& (0+255),f,b
  3464  001330  A0D8               	btfss	status,0,c
  3465  001332  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3466  001334                     
  3467                           ; BSR set to: 0
  3468                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i]
      +                           = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3469  001334  078A               	decf	efgtoa@i& (0+255),f,b
  3470  001336  A0D8               	btfss	status,0,c
  3471  001338  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3472  00133A                     
  3473                           ; BSR set to: 0
  3474  00133A  0EBF               	movlw	191
  3475  00133C  6E3B               	movwf	??_efgtoa^0,c
  3476  00133E  0EFF               	movlw	255
  3477  001340  6E3C               	movwf	(??_efgtoa+1)^0,c
  3478  001342  503A               	movf	efgtoa@c^0,w,c
  3479  001344  6E3D               	movwf	(??_efgtoa+2)^0,c
  3480  001346  6A3E               	clrf	(??_efgtoa+3)^0,c
  3481  001348  503B               	movf	??_efgtoa^0,w,c
  3482  00134A  263D               	addwf	(??_efgtoa+2)^0,f,c
  3483  00134C  503C               	movf	(??_efgtoa+1)^0,w,c
  3484  00134E  223E               	addwfc	(??_efgtoa+3)^0,f,c
  3485  001350  503E               	movf	(??_efgtoa+3)^0,w,c
  3486  001352  E10A               	bnz	u6870
  3487  001354  0E1A               	movlw	26
  3488  001356  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  3489  001358  A0D8               	btfss	status,0,c
  3490  00135A  EFB1  F009         	goto	u6871
  3491  00135E  EFB4  F009         	goto	u6870
  3492  001362                     u6871:
  3493  001362  0E01               	movlw	1
  3494  001364  EFB5  F009         	goto	u6880
  3495  001368                     u6870:
  3496  001368  0E00               	movlw	0
  3497  00136A                     u6880:
  3498  00136A  6F6E               	movwf	_efgtoa$456& (0+255),b
  3499  00136C  6B6F               	clrf	(_efgtoa$456+1)& (0+255),b
  3500  00136E                     
  3501                           ; BSR set to: 0
  3502  00136E  516E               	movf	_efgtoa$456& (0+255),w,b
  3503  001370  116F               	iorwf	(_efgtoa$456+1)& (0+255),w,b
  3504  001372  A4D8               	btfss	status,2,c
  3505  001374  EFBE  F009         	goto	u6891
  3506  001378  EFC0  F009         	goto	u6890
  3507  00137C                     u6891:
  3508  00137C  EFC6  F009         	goto	l5110
  3509  001380                     u6890:
  3510  001380                     
  3511                           ; BSR set to: 0
  3512  001380  0E00               	movlw	0
  3513  001382  6F6D               	movwf	(_efgtoa$455+1)& (0+255),b
  3514  001384  0E65               	movlw	101
  3515  001386  6F6C               	movwf	_efgtoa$455& (0+255),b
  3516  001388  EFCA  F009         	goto	l5112
  3517  00138C                     l5110:
  3518                           
  3519                           ; BSR set to: 0
  3520  00138C  0E00               	movlw	0
  3521  00138E  6F6D               	movwf	(_efgtoa$455+1)& (0+255),b
  3522  001390  0E45               	movlw	69
  3523  001392  6F6C               	movwf	_efgtoa$455& (0+255),b
  3524  001394                     l5112:
  3525                           
  3526                           ; BSR set to: 0
  3527  001394  0E00               	movlw	low _dbuf
  3528  001396  258A               	addwf	efgtoa@i& (0+255),w,b
  3529  001398  6ED9               	movwf	fsr2l,c
  3530  00139A  0E01               	movlw	high _dbuf
  3531  00139C  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3532  00139E  6EDA               	movwf	fsr2h,c
  3533  0013A0  C06C  FFDF         	movff	_efgtoa$455,indf2
  3534  0013A4                     
  3535                           ; BSR set to: 0
  3536                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
  3537  0013A4  077F               	decf	efgtoa@w& (0+255),f,b
  3538  0013A6  A0D8               	btfss	status,0,c
  3539  0013A8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3540  0013AA                     
  3541                           ; BSR set to: 0
  3542                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(
      +                          &dbuf[n], &dbuf[i]);
  3543  0013AA  0E00               	movlw	low _dbuf
  3544  0013AC  2592               	addwf	efgtoa@n& (0+255),w,b
  3545  0013AE  6E07               	movwf	strcpy@dest^0,c
  3546  0013B0  0E01               	movlw	high _dbuf
  3547  0013B2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3548  0013B4  6E08               	movwf	(strcpy@dest+1)^0,c
  3549  0013B6  0E00               	movlw	low _dbuf
  3550  0013B8  258A               	addwf	efgtoa@i& (0+255),w,b
  3551  0013BA  6E09               	movwf	strcpy@src^0,c
  3552  0013BC  0E01               	movlw	high _dbuf
  3553  0013BE  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3554  0013C0  6E0A               	movwf	(strcpy@src+1)^0,c
  3555  0013C2  ECA6  F019         	call	_strcpy	;wreg free
  3556  0013C6  EFC0  F004         	goto	l4868
  3557  0013CA                     l179:
  3558  0013CA  0012               	return		;funcret
  3559  0013CC                     __end_of_efgtoa:
  3560                           	opt callstack 0
  3561                           
  3562 ;; *************** function _tolower *****************
  3563 ;; Defined at:
  3564 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;  c               2   12[COMRAM] int 
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  2   12[COMRAM] int 
  3571 ;; Registers used:
  3572 ;;		wreg, status,2, status,0
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3578 ;;      Params:         2       0       0       0       0       0       0       0       0
  3579 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3580 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3581 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3582 ;;Total ram usage:        8 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; Hardware stack levels required when called:    3
  3585 ;; This function calls:
  3586 ;;		_isupper
  3587 ;; This function is called by:
  3588 ;;		_efgtoa
  3589 ;;		_vfpfcnvrt
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           	psect	text6
  3594  0032EC                     __ptext6:
  3595                           	opt callstack 0
  3596  0032EC                     _tolower:
  3597                           	opt callstack 24
  3598  0032EC  0EBF               	movlw	191
  3599  0032EE  6E0F               	movwf	??_tolower^0,c
  3600  0032F0  0EFF               	movlw	255
  3601  0032F2  6E10               	movwf	(??_tolower+1)^0,c
  3602  0032F4  C00D  F011         	movff	tolower@c,??_tolower+2
  3603  0032F8  C00E  F012         	movff	tolower@c+1,??_tolower+3
  3604  0032FC  500F               	movf	??_tolower^0,w,c
  3605  0032FE  2611               	addwf	(??_tolower+2)^0,f,c
  3606  003300  5010               	movf	(??_tolower+1)^0,w,c
  3607  003302  2212               	addwfc	(??_tolower+3)^0,f,c
  3608  003304  5012               	movf	(??_tolower+3)^0,w,c
  3609  003306  E10A               	bnz	u5510
  3610  003308  0E1A               	movlw	26
  3611  00330A  5C11               	subwf	(??_tolower+2)^0,w,c
  3612  00330C  A0D8               	btfss	status,0,c
  3613  00330E  EF8B  F019         	goto	u5511
  3614  003312  EF8E  F019         	goto	u5510
  3615  003316                     u5511:
  3616  003316  0E01               	movlw	1
  3617  003318  EF8F  F019         	goto	u5520
  3618  00331C                     u5510:
  3619  00331C  0E00               	movlw	0
  3620  00331E                     u5520:
  3621  00331E  6E13               	movwf	_tolower$1061^0,c
  3622  003320  6A14               	clrf	(_tolower$1061+1)^0,c
  3623  003322  5013               	movf	_tolower$1061^0,w,c
  3624  003324  1014               	iorwf	(_tolower$1061+1)^0,w,c
  3625  003326  B4D8               	btfsc	status,2,c
  3626  003328  EF98  F019         	goto	u5531
  3627  00332C  EF9A  F019         	goto	u5530
  3628  003330                     u5531:
  3629  003330  EFA1  F019         	goto	l1088
  3630  003334                     u5530:
  3631  003334  0E20               	movlw	32
  3632  003336  100D               	iorwf	tolower@c^0,w,c
  3633  003338  6E0D               	movwf	?_tolower^0,c
  3634  00333A  500E               	movf	(tolower@c+1)^0,w,c
  3635  00333C  6E0E               	movwf	(?_tolower+1)^0,c
  3636  00333E  EFA5  F019         	goto	l1093
  3637  003342                     l1088:
  3638  003342  C00D  F00D         	movff	tolower@c,?_tolower
  3639  003346  C00E  F00E         	movff	tolower@c+1,?_tolower+1
  3640  00334A                     l1093:
  3641  00334A  0012               	return		;funcret
  3642  00334C                     __end_of_tolower:
  3643                           	opt callstack 0
  3644                           
  3645 ;; *************** function _isupper *****************
  3646 ;; Defined at:
  3647 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  c               2    6[COMRAM] int 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;		None
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  2    6[COMRAM] int 
  3654 ;; Registers used:
  3655 ;;		wreg, status,2, status,0
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3661 ;;      Params:         2       0       0       0       0       0       0       0       0
  3662 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3663 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3664 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3665 ;;Total ram usage:        6 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; Hardware stack levels required when called:    2
  3668 ;; This function calls:
  3669 ;;		Nothing
  3670 ;; This function is called by:
  3671 ;;		_efgtoa
  3672 ;;		_vfpfcnvrt
  3673 ;;		_tolower
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           	psect	text7
  3678  0035B2                     __ptext7:
  3679                           	opt callstack 0
  3680  0035B2                     _isupper:
  3681                           	opt callstack 24
  3682  0035B2  0EBF               	movlw	191
  3683  0035B4  6E09               	movwf	??_isupper^0,c
  3684  0035B6  0EFF               	movlw	255
  3685  0035B8  6E0A               	movwf	(??_isupper+1)^0,c
  3686  0035BA  C007  F00B         	movff	isupper@c,??_isupper+2
  3687  0035BE  C008  F00C         	movff	isupper@c+1,??_isupper+3
  3688  0035C2  5009               	movf	??_isupper^0,w,c
  3689  0035C4  260B               	addwf	(??_isupper+2)^0,f,c
  3690  0035C6  500A               	movf	(??_isupper+1)^0,w,c
  3691  0035C8  220C               	addwfc	(??_isupper+3)^0,f,c
  3692  0035CA  500C               	movf	(??_isupper+3)^0,w,c
  3693  0035CC  E10A               	bnz	u4970
  3694  0035CE  0E1A               	movlw	26
  3695  0035D0  5C0B               	subwf	(??_isupper+2)^0,w,c
  3696  0035D2  A0D8               	btfss	status,0,c
  3697  0035D4  EFEE  F01A         	goto	u4971
  3698  0035D8  EFF1  F01A         	goto	u4970
  3699  0035DC                     u4971:
  3700  0035DC  0E01               	movlw	1
  3701  0035DE  EFF2  F01A         	goto	u4980
  3702  0035E2                     u4970:
  3703  0035E2  0E00               	movlw	0
  3704  0035E4                     u4980:
  3705  0035E4  6E07               	movwf	?_isupper^0,c
  3706  0035E6  6A08               	clrf	(?_isupper+1)^0,c
  3707  0035E8  0012               	return		;funcret
  3708  0035EA                     __end_of_isupper:
  3709                           	opt callstack 0
  3710                           
  3711 ;; *************** function _strcpy *****************
  3712 ;; Defined at:
  3713 ;;		line 3 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  dest            2    6[COMRAM] PTR unsigned char 
  3716 ;;		 -> dbuf(80), 
  3717 ;;  src             2    8[COMRAM] PTR const unsigned char 
  3718 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  3719 ;;		 -> dbuf(80), 
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;  d               2   14[COMRAM] PTR unsigned char 
  3722 ;;		 -> dbuf(80), 
  3723 ;;  s               2   12[COMRAM] PTR const unsigned char 
  3724 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  3725 ;;		 -> dbuf(80), 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  2    6[COMRAM] PTR unsigned char 
  3728 ;; Registers used:
  3729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3735 ;;      Params:         4       0       0       0       0       0       0       0       0
  3736 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3737 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3738 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3739 ;;Total ram usage:       10 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    2
  3742 ;; This function calls:
  3743 ;;		Nothing
  3744 ;; This function is called by:
  3745 ;;		_efgtoa
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text8
  3750  00334C                     __ptext8:
  3751                           	opt callstack 0
  3752  00334C                     _strcpy:
  3753                           	opt callstack 24
  3754  00334C  C009  F00D         	movff	strcpy@src,strcpy@s
  3755  003350  C00A  F00E         	movff	strcpy@src+1,strcpy@s+1
  3756  003354  C007  F00F         	movff	strcpy@dest,strcpy@d
  3757  003358  C008  F010         	movff	strcpy@dest+1,strcpy@d+1
  3758  00335C                     l4318:
  3759  00335C  500D               	movf	strcpy@s^0,w,c
  3760  00335E  6E0B               	movwf	??_strcpy^0,c
  3761  003360  500E               	movf	(strcpy@s+1)^0,w,c
  3762  003362  6E0C               	movwf	(??_strcpy+1)^0,c
  3763  003364  4A0D               	infsnz	strcpy@s^0,f,c
  3764  003366  2A0E               	incf	(strcpy@s+1)^0,f,c
  3765  003368  C00B  FFF6         	movff	??_strcpy,tblptrl
  3766  00336C  C00C  FFF7         	movff	??_strcpy+1,tblptrh
  3767  003370  6AF8               	clrf	tblptru,c
  3768  003372  C00F  FFD9         	movff	strcpy@d,fsr2l
  3769  003376  C010  FFDA         	movff	strcpy@d+1,fsr2h
  3770  00337A  4A0F               	infsnz	strcpy@d^0,f,c
  3771  00337C  2A10               	incf	(strcpy@d+1)^0,f,c
  3772  00337E  0E07               	movlw	(high __ramtop+-1)
  3773  003380  64F7               	cpfsgt	tblptrh,c
  3774  003382  D003               	bra	u5497
  3775  003384  0008               	tblrd		*
  3776  003386  50F5               	movf	tablat,w,c
  3777  003388  D005               	bra	u5490
  3778  00338A                     u5497:
  3779  00338A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3780  00338E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3781  003392  50E7               	movf	indf1,w,c
  3782  003394                     u5490:
  3783  003394  6EDF               	movwf	indf2,c
  3784  003396  50DF               	movf	indf2,w,c
  3785  003398  A4D8               	btfss	status,2,c
  3786  00339A  EFD1  F019         	goto	u5501
  3787  00339E  EFD3  F019         	goto	u5500
  3788  0033A2                     u5501:
  3789  0033A2  EFAE  F019         	goto	l4318
  3790  0033A6                     u5500:
  3791  0033A6  0012               	return		;funcret
  3792  0033A8                     __end_of_strcpy:
  3793                           	opt callstack 0
  3794                           
  3795 ;; *************** function _pad *****************
  3796 ;; Defined at:
  3797 ;;		line 72 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  3800 ;;		 -> sprintf@f(6), 
  3801 ;;  buf             2   24[COMRAM] PTR unsigned char 
  3802 ;;		 -> dbuf(80), 
  3803 ;;  p               2   26[COMRAM] int 
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;  w               2   31[COMRAM] int 
  3806 ;;  i               2   29[COMRAM] int 
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  2   22[COMRAM] int 
  3809 ;; Registers used:
  3810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3816 ;;      Params:         6       0       0       0       0       0       0       0       0
  3817 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3818 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3819 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3820 ;;Total ram usage:       11 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:    5
  3823 ;; This function calls:
  3824 ;;		_fputc
  3825 ;;		_fputs
  3826 ;;		_strlen
  3827 ;; This function is called by:
  3828 ;;		_efgtoa
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text9
  3833  002F7A                     __ptext9:
  3834                           	opt callstack 0
  3835  002F7A                     _pad:
  3836                           	opt callstack 21
  3837  002F7A                     
  3838                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.10/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
  3839  002F7A  A050               	btfss	_flags^0,0,c
  3840  002F7C  EFC2  F017         	goto	u5381
  3841  002F80  EFC4  F017         	goto	u5380
  3842  002F84                     u5381:
  3843  002F84  EFCE  F017         	goto	l4276
  3844  002F88                     u5380:
  3845  002F88                     
  3846                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
  3847  002F88  C019  F010         	movff	pad@buf,fputs@s
  3848  002F8C  C01A  F011         	movff	pad@buf+1,fputs@s+1
  3849  002F90  C017  F012         	movff	pad@fp,fputs@fp
  3850  002F94  C018  F013         	movff	pad@fp+1,fputs@fp+1
  3851  002F98  EC97  F01A         	call	_fputs	;wreg free
  3852  002F9C                     l4276:
  3853                           
  3854                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
  3855  002F9C  BE1C               	btfsc	(pad@p+1)^0,7,c
  3856  002F9E  EFD3  F017         	goto	u5391
  3857  002FA2  EFD5  F017         	goto	u5390
  3858  002FA6                     u5391:
  3859  002FA6  EFDB  F017         	goto	l4280
  3860  002FAA                     u5390:
  3861  002FAA  C01B  F020         	movff	pad@p,pad@w
  3862  002FAE  C01C  F021         	movff	pad@p+1,pad@w+1
  3863  002FB2  EFDF  F017         	goto	l156
  3864  002FB6                     l4280:
  3865  002FB6  0E00               	movlw	0
  3866  002FB8  6E21               	movwf	(pad@w+1)^0,c
  3867  002FBA  0E00               	movlw	0
  3868  002FBC  6E20               	movwf	pad@w^0,c
  3869  002FBE                     l156:
  3870                           
  3871                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  3872  002FBE  0E00               	movlw	0
  3873  002FC0  6E1F               	movwf	(pad@i+1)^0,c
  3874  002FC2  0E00               	movlw	0
  3875  002FC4  6E1E               	movwf	pad@i^0,c
  3876                           
  3877                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  3878  002FC6  EFF1  F017         	goto	l4286
  3879  002FCA                     l4282:
  3880                           
  3881                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
  3882  002FCA  0E00               	movlw	0
  3883  002FCC  6E08               	movwf	(fputc@c+1)^0,c
  3884  002FCE  0E20               	movlw	32
  3885  002FD0  6E07               	movwf	fputc@c^0,c
  3886  002FD2  C017  F009         	movff	pad@fp,fputc@fp
  3887  002FD6  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  3888  002FDA  ECF6  F016         	call	_fputc	;wreg free
  3889  002FDE                     
  3890                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
  3891  002FDE  4A1E               	infsnz	pad@i^0,f,c
  3892  002FE0  2A1F               	incf	(pad@i+1)^0,f,c
  3893  002FE2                     l4286:
  3894                           
  3895                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
  3896  002FE2  5020               	movf	pad@w^0,w,c
  3897  002FE4  5C1E               	subwf	pad@i^0,w,c
  3898  002FE6  501F               	movf	(pad@i+1)^0,w,c
  3899  002FE8  0A80               	xorlw	128
  3900  002FEA  6E1D               	movwf	??_pad^0,c
  3901  002FEC  5021               	movf	(pad@w+1)^0,w,c
  3902  002FEE  0A80               	xorlw	128
  3903  002FF0  581D               	subwfb	??_pad^0,w,c
  3904  002FF2  A0D8               	btfss	status,0,c
  3905  002FF4  EFFE  F017         	goto	u5401
  3906  002FF8  EF00  F018         	goto	u5400
  3907  002FFC                     u5401:
  3908  002FFC  EFE5  F017         	goto	l4282
  3909  003000                     u5400:
  3910  003000                     
  3911                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
  3912  003000  B050               	btfsc	_flags^0,0,c
  3913  003002  EF05  F018         	goto	u5411
  3914  003006  EF07  F018         	goto	u5410
  3915  00300A                     u5411:
  3916  00300A  EF11  F018         	goto	l4290
  3917  00300E                     u5410:
  3918  00300E                     
  3919                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
  3920  00300E  C019  F010         	movff	pad@buf,fputs@s
  3921  003012  C01A  F011         	movff	pad@buf+1,fputs@s+1
  3922  003016  C017  F012         	movff	pad@fp,fputs@fp
  3923  00301A  C018  F013         	movff	pad@fp+1,fputs@fp+1
  3924  00301E  EC97  F01A         	call	_fputs	;wreg free
  3925  003022                     l4290:
  3926                           
  3927                           ;/Applications/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
  3928  003022  C019  F007         	movff	pad@buf,strlen@s
  3929  003026  C01A  F008         	movff	pad@buf+1,strlen@s+1
  3930  00302A  EC2D  F01B         	call	_strlen	;wreg free
  3931  00302E  5020               	movf	pad@w^0,w,c
  3932  003030  2407               	addwf	?_strlen^0,w,c
  3933  003032  6E17               	movwf	?_pad^0,c
  3934  003034  5021               	movf	(pad@w+1)^0,w,c
  3935  003036  2008               	addwfc	(?_strlen+1)^0,w,c
  3936  003038  6E18               	movwf	(?_pad+1)^0,c
  3937  00303A  0012               	return		;funcret
  3938  00303C                     __end_of_pad:
  3939                           	opt callstack 0
  3940                           
  3941 ;; *************** function _strlen *****************
  3942 ;; Defined at:
  3943 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3946 ;;		 -> dbuf(80), 
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;  a               2    8[COMRAM] PTR const unsigned char 
  3949 ;;		 -> dbuf(80), 
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  2    6[COMRAM] unsigned int 
  3952 ;; Registers used:
  3953 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3959 ;;      Params:         2       0       0       0       0       0       0       0       0
  3960 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3962 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3963 ;;Total ram usage:        4 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; Hardware stack levels required when called:    2
  3966 ;; This function calls:
  3967 ;;		Nothing
  3968 ;; This function is called by:
  3969 ;;		_pad
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           	psect	text10
  3974  00365A                     __ptext10:
  3975                           	opt callstack 0
  3976  00365A                     _strlen:
  3977                           	opt callstack 23
  3978  00365A  C007  F009         	movff	strlen@s,strlen@a
  3979  00365E  C008  F00A         	movff	strlen@s+1,strlen@a+1
  3980  003662  EF35  F01B         	goto	l4060
  3981  003666                     l4058:
  3982  003666  4A07               	infsnz	strlen@s^0,f,c
  3983  003668  2A08               	incf	(strlen@s+1)^0,f,c
  3984  00366A                     l4060:
  3985  00366A  C007  FFD9         	movff	strlen@s,fsr2l
  3986  00366E  C008  FFDA         	movff	strlen@s+1,fsr2h
  3987  003672  50DF               	movf	indf2,w,c
  3988  003674  A4D8               	btfss	status,2,c
  3989  003676  EF3F  F01B         	goto	u4961
  3990  00367A  EF41  F01B         	goto	u4960
  3991  00367E                     u4961:
  3992  00367E  EF33  F01B         	goto	l4058
  3993  003682                     u4960:
  3994  003682  5009               	movf	strlen@a^0,w,c
  3995  003684  5C07               	subwf	strlen@s^0,w,c
  3996  003686  6E07               	movwf	?_strlen^0,c
  3997  003688  500A               	movf	(strlen@a+1)^0,w,c
  3998  00368A  5808               	subwfb	(strlen@s+1)^0,w,c
  3999  00368C  6E08               	movwf	(?_strlen+1)^0,c
  4000  00368E  0012               	return		;funcret
  4001  003690                     __end_of_strlen:
  4002                           	opt callstack 0
  4003                           
  4004 ;; *************** function _fputs *****************
  4005 ;; Defined at:
  4006 ;;		line 8 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4009 ;;		 -> dbuf(80), 
  4010 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4011 ;;		 -> sprintf@f(6), 
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;  i               2   20[COMRAM] int 
  4014 ;;  c               1   19[COMRAM] unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  2   15[COMRAM] int 
  4017 ;; Registers used:
  4018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4024 ;;      Params:         4       0       0       0       0       0       0       0       0
  4025 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4026 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4027 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4028 ;;Total ram usage:        7 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:    4
  4031 ;; This function calls:
  4032 ;;		_fputc
  4033 ;; This function is called by:
  4034 ;;		_pad
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text11
  4039  00352E                     __ptext11:
  4040                           	opt callstack 0
  4041  00352E                     _fputs:
  4042                           	opt callstack 21
  4043  00352E  0E00               	movlw	0
  4044  003530  6E16               	movwf	(fputs@i+1)^0,c
  4045  003532  0E00               	movlw	0
  4046  003534  6E15               	movwf	fputs@i^0,c
  4047  003536  EFA8  F01A         	goto	l4054
  4048  00353A                     l4050:
  4049  00353A  C014  F007         	movff	fputs@c,fputc@c
  4050  00353E  6A08               	clrf	(fputc@c+1)^0,c
  4051  003540  C012  F009         	movff	fputs@fp,fputc@fp
  4052  003544  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  4053  003548  ECF6  F016         	call	_fputc	;wreg free
  4054  00354C  4A15               	infsnz	fputs@i^0,f,c
  4055  00354E  2A16               	incf	(fputs@i+1)^0,f,c
  4056  003550                     l4054:
  4057  003550  5015               	movf	fputs@i^0,w,c
  4058  003552  2410               	addwf	fputs@s^0,w,c
  4059  003554  6ED9               	movwf	fsr2l,c
  4060  003556  5016               	movf	(fputs@i+1)^0,w,c
  4061  003558  2011               	addwfc	(fputs@s+1)^0,w,c
  4062  00355A  6EDA               	movwf	fsr2h,c
  4063  00355C  50DF               	movf	indf2,w,c
  4064  00355E  6E14               	movwf	fputs@c^0,c
  4065  003560  5014               	movf	fputs@c^0,w,c
  4066  003562  A4D8               	btfss	status,2,c
  4067  003564  EFB6  F01A         	goto	u4951
  4068  003568  EFB8  F01A         	goto	u4950
  4069  00356C                     u4951:
  4070  00356C  EF9D  F01A         	goto	l4050
  4071  003570                     u4950:
  4072  003570  0012               	return		;funcret
  4073  003572                     __end_of_fputs:
  4074                           	opt callstack 0
  4075                           
  4076 ;; *************** function _fputc *****************
  4077 ;; Defined at:
  4078 ;;		line 8 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;  c               2    6[COMRAM] int 
  4081 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  4082 ;;		 -> sprintf@f(6), 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;		None
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  2    6[COMRAM] int 
  4087 ;; Registers used:
  4088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4094 ;;      Params:         4       0       0       0       0       0       0       0       0
  4095 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4096 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4097 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4098 ;;Total ram usage:        9 bytes
  4099 ;; Hardware stack levels used:    1
  4100 ;; Hardware stack levels required when called:    3
  4101 ;; This function calls:
  4102 ;;		_putch
  4103 ;; This function is called by:
  4104 ;;		_pad
  4105 ;;		_vfpfcnvrt
  4106 ;;		_fputs
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text12
  4111  002DEC                     __ptext12:
  4112                           	opt callstack 0
  4113  002DEC                     _fputc:
  4114                           	opt callstack 24
  4115  002DEC  5009               	movf	fputc@fp^0,w,c
  4116  002DEE  100A               	iorwf	(fputc@fp+1)^0,w,c
  4117  002DF0  B4D8               	btfsc	status,2,c
  4118  002DF2  EFFD  F016         	goto	u4911
  4119  002DF6  EFFF  F016         	goto	u4910
  4120  002DFA                     u4911:
  4121  002DFA  EF08  F017         	goto	l4038
  4122  002DFE                     u4910:
  4123  002DFE  5009               	movf	fputc@fp^0,w,c
  4124  002E00  100A               	iorwf	(fputc@fp+1)^0,w,c
  4125  002E02  A4D8               	btfss	status,2,c
  4126  002E04  EF06  F017         	goto	u4921
  4127  002E08  EF08  F017         	goto	u4920
  4128  002E0C                     u4921:
  4129  002E0C  EF0D  F017         	goto	l4040
  4130  002E10                     u4920:
  4131  002E10                     l4038:
  4132  002E10  5007               	movf	fputc@c^0,w,c
  4133  002E12  ECEF  F01B         	call	_putch
  4134  002E16  EF5A  F017         	goto	l1044
  4135  002E1A                     l4040:
  4136  002E1A  EE20 F004          	lfsr	2,4
  4137  002E1E  5009               	movf	fputc@fp^0,w,c
  4138  002E20  26D9               	addwf	fsr2l,f,c
  4139  002E22  500A               	movf	(fputc@fp+1)^0,w,c
  4140  002E24  22DA               	addwfc	fsr2h,f,c
  4141  002E26  50DE               	movf	postinc2,w,c
  4142  002E28  10DE               	iorwf	postinc2,w,c
  4143  002E2A  B4D8               	btfsc	status,2,c
  4144  002E2C  EF1A  F017         	goto	u4931
  4145  002E30  EF1C  F017         	goto	u4930
  4146  002E34                     u4931:
  4147  002E34  EF37  F017         	goto	l4044
  4148  002E38                     u4930:
  4149  002E38  EE20 F004          	lfsr	2,4
  4150  002E3C  5009               	movf	fputc@fp^0,w,c
  4151  002E3E  26D9               	addwf	fsr2l,f,c
  4152  002E40  500A               	movf	(fputc@fp+1)^0,w,c
  4153  002E42  22DA               	addwfc	fsr2h,f,c
  4154  002E44  EE10 F002          	lfsr	1,2
  4155  002E48  5009               	movf	fputc@fp^0,w,c
  4156  002E4A  26E1               	addwf	fsr1l,f,c
  4157  002E4C  500A               	movf	(fputc@fp+1)^0,w,c
  4158  002E4E  22E2               	addwfc	fsr1h,f,c
  4159  002E50  50DE               	movf	postinc2,w,c
  4160  002E52  5CE6               	subwf	postinc1,w,c
  4161  002E54  50E6               	movf	postinc1,w,c
  4162  002E56  0A80               	xorlw	128
  4163  002E58  6E0F               	movwf	(??_fputc+4)^0,c
  4164  002E5A  50DE               	movf	postinc2,w,c
  4165  002E5C  0A80               	xorlw	128
  4166  002E5E  580F               	subwfb	(??_fputc+4)^0,w,c
  4167  002E60  B0D8               	btfsc	status,0,c
  4168  002E62  EF35  F017         	goto	u4941
  4169  002E66  EF37  F017         	goto	u4940
  4170  002E6A                     u4941:
  4171  002E6A  EF5A  F017         	goto	l1044
  4172  002E6E                     u4940:
  4173  002E6E                     l4044:
  4174  002E6E  EE20 F002          	lfsr	2,2
  4175  002E72  5009               	movf	fputc@fp^0,w,c
  4176  002E74  26D9               	addwf	fsr2l,f,c
  4177  002E76  500A               	movf	(fputc@fp+1)^0,w,c
  4178  002E78  22DA               	addwfc	fsr2h,f,c
  4179  002E7A  CFDE F00B          	movff	postinc2,??_fputc
  4180  002E7E  CFDD F00C          	movff	postdec2,??_fputc+1
  4181  002E82  C009  FFD9         	movff	fputc@fp,fsr2l
  4182  002E86  C00A  FFDA         	movff	fputc@fp+1,fsr2h
  4183  002E8A  CFDE F00D          	movff	postinc2,??_fputc+2
  4184  002E8E  CFDD F00E          	movff	postdec2,??_fputc+3
  4185  002E92  500B               	movf	??_fputc^0,w,c
  4186  002E94  240D               	addwf	(??_fputc+2)^0,w,c
  4187  002E96  6ED9               	movwf	fsr2l,c
  4188  002E98  500C               	movf	(??_fputc+1)^0,w,c
  4189  002E9A  200E               	addwfc	(??_fputc+3)^0,w,c
  4190  002E9C  6EDA               	movwf	fsr2h,c
  4191  002E9E  C007  FFDF         	movff	fputc@c,indf2
  4192  002EA2  EE20 F002          	lfsr	2,2
  4193  002EA6  5009               	movf	fputc@fp^0,w,c
  4194  002EA8  26D9               	addwf	fsr2l,f,c
  4195  002EAA  500A               	movf	(fputc@fp+1)^0,w,c
  4196  002EAC  22DA               	addwfc	fsr2h,f,c
  4197  002EAE  2ADE               	incf	postinc2,f,c
  4198  002EB0  0E00               	movlw	0
  4199  002EB2  22DD               	addwfc	postdec2,f,c
  4200  002EB4                     l1044:
  4201  002EB4  0012               	return		;funcret
  4202  002EB6                     __end_of_fputc:
  4203                           	opt callstack 0
  4204                           
  4205 ;; *************** function _putch *****************
  4206 ;; Defined at:
  4207 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/putch.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  c               1    wreg     unsigned char 
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;  c               1    0[COMRAM] unsigned char 
  4212 ;; Return value:  Size  Location     Type
  4213 ;;                  1    wreg      void 
  4214 ;; Registers used:
  4215 ;;		wreg
  4216 ;; Tracked objects:
  4217 ;;		On entry : 0/0
  4218 ;;		On exit  : 0/0
  4219 ;;		Unchanged: 0/0
  4220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4221 ;;      Params:         0       0       0       0       0       0       0       0       0
  4222 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4223 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4224 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4225 ;;Total ram usage:        0 bytes
  4226 ;; Hardware stack levels used:    1
  4227 ;; Hardware stack levels required when called:    2
  4228 ;; This function calls:
  4229 ;;		Nothing
  4230 ;; This function is called by:
  4231 ;;		_fputc
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text13
  4236  0037DE                     __ptext13:
  4237                           	opt callstack 0
  4238  0037DE                     _putch:
  4239                           	opt callstack 24
  4240  0037DE  0012               	return		;funcret
  4241  0037E0                     __end_of_putch:
  4242                           	opt callstack 0
  4243                           
  4244 ;; *************** function _floorf *****************
  4245 ;; Defined at:
  4246 ;;		line 3 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;  x               4   31[COMRAM] float 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  u               4   47[COMRAM] struct .
  4251 ;;  m               4   41[COMRAM] unsigned long 
  4252 ;;  e               2   45[COMRAM] int 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  4   31[COMRAM] float 
  4255 ;; Registers used:
  4256 ;;		wreg, status,2, status,0
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4262 ;;      Params:         4       0       0       0       0       0       0       0       0
  4263 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4264 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4265 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4266 ;;Total ram usage:       20 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    2
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_efgtoa
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text14
  4277  0024B8                     __ptext14:
  4278                           	opt callstack 0
  4279  0024B8                     _floorf:
  4280                           	opt callstack 24
  4281  0024B8  C0CA  F030         	movff	floorf@F524,floorf@u
  4282  0024BC  C0CB  F031         	movff	floorf@F524+1,floorf@u+1
  4283  0024C0  C0CC  F032         	movff	floorf@F524+2,floorf@u+2
  4284  0024C4  C0CD  F033         	movff	floorf@F524+3,floorf@u+3
  4285  0024C8  C020  F030         	movff	floorf@x,floorf@u
  4286  0024CC  C021  F031         	movff	floorf@x+1,floorf@u+1
  4287  0024D0  C022  F032         	movff	floorf@x+2,floorf@u+2
  4288  0024D4  C023  F033         	movff	floorf@x+3,floorf@u+3
  4289  0024D8  0E81               	movlw	129
  4290  0024DA  6E24               	movwf	??_floorf^0,c
  4291  0024DC  0EFF               	movlw	255
  4292  0024DE  6E25               	movwf	(??_floorf+1)^0,c
  4293  0024E0  C030  F026         	movff	floorf@u,??_floorf+2
  4294  0024E4  C031  F027         	movff	floorf@u+1,??_floorf+3
  4295  0024E8  C032  F028         	movff	floorf@u+2,??_floorf+4
  4296  0024EC  C033  F029         	movff	floorf@u+3,??_floorf+5
  4297  0024F0  0E18               	movlw	24
  4298  0024F2  EF80  F012         	goto	u5540
  4299  0024F6                     u5545:
  4300  0024F6  90D8               	bcf	status,0,c
  4301  0024F8  3229               	rrcf	(??_floorf+5)^0,f,c
  4302  0024FA  3228               	rrcf	(??_floorf+4)^0,f,c
  4303  0024FC  3227               	rrcf	(??_floorf+3)^0,f,c
  4304  0024FE  3226               	rrcf	(??_floorf+2)^0,f,c
  4305  002500                     u5540:
  4306  002500  2EE8               	decfsz	wreg,f,c
  4307  002502  EF7B  F012         	goto	u5545
  4308  002506  5026               	movf	(??_floorf+2)^0,w,c
  4309  002508  2424               	addwf	??_floorf^0,w,c
  4310  00250A  6E2E               	movwf	floorf@e^0,c
  4311  00250C  0E00               	movlw	0
  4312  00250E  2025               	addwfc	(??_floorf+1)^0,w,c
  4313  002510  6E2F               	movwf	(floorf@e+1)^0,c
  4314  002512  BE2F               	btfsc	(floorf@e+1)^0,7,c
  4315  002514  EF95  F012         	goto	u5551
  4316  002518  502F               	movf	(floorf@e+1)^0,w,c
  4317  00251A  E109               	bnz	u5550
  4318  00251C  0E17               	movlw	23
  4319  00251E  5C2E               	subwf	floorf@e^0,w,c
  4320  002520  A0D8               	btfss	status,0,c
  4321  002522  EF95  F012         	goto	u5551
  4322  002526  EF97  F012         	goto	u5550
  4323  00252A                     u5551:
  4324  00252A  EFA1  F012         	goto	l4336
  4325  00252E                     u5550:
  4326  00252E                     l4334:
  4327  00252E  C020  F020         	movff	floorf@x,?_floorf
  4328  002532  C021  F021         	movff	floorf@x+1,?_floorf+1
  4329  002536  C022  F022         	movff	floorf@x+2,?_floorf+2
  4330  00253A  C023  F023         	movff	floorf@x+3,?_floorf+3
  4331  00253E  EF64  F013         	goto	l1005
  4332  002542                     l4336:
  4333  002542  BE2F               	btfsc	(floorf@e+1)^0,7,c
  4334  002544  EFA6  F012         	goto	u5561
  4335  002548  EFA8  F012         	goto	u5560
  4336  00254C                     u5561:
  4337  00254C  EF18  F013         	goto	l4346
  4338  002550                     u5560:
  4339  002550  C02E  F024         	movff	floorf@e,??_floorf
  4340  002554  0EFF               	movlw	255
  4341  002556  6E25               	movwf	(??_floorf+1)^0,c
  4342  002558  0EFF               	movlw	255
  4343  00255A  6E26               	movwf	(??_floorf+2)^0,c
  4344  00255C  0E7F               	movlw	127
  4345  00255E  6E27               	movwf	(??_floorf+3)^0,c
  4346  002560  0E00               	movlw	0
  4347  002562  6E28               	movwf	(??_floorf+4)^0,c
  4348  002564                     u5575:
  4349  002564  6624               	tstfsz	??_floorf^0,c
  4350  002566  EFB7  F012         	goto	u5576
  4351  00256A  EFBF  F012         	goto	u5577
  4352  00256E                     u5576:
  4353  00256E  3428               	rlcf	(??_floorf+4)^0,w,c
  4354  002570  3228               	rrcf	(??_floorf+4)^0,f,c
  4355  002572  3227               	rrcf	(??_floorf+3)^0,f,c
  4356  002574  3226               	rrcf	(??_floorf+2)^0,f,c
  4357  002576  3225               	rrcf	(??_floorf+1)^0,f,c
  4358  002578  2E24               	decfsz	??_floorf^0,f,c
  4359  00257A  EFB2  F012         	goto	u5575
  4360  00257E                     u5577:
  4361  00257E  C025  F02A         	movff	??_floorf+1,floorf@m
  4362  002582  C026  F02B         	movff	??_floorf+2,floorf@m+1
  4363  002586  C027  F02C         	movff	??_floorf+3,floorf@m+2
  4364  00258A  C028  F02D         	movff	??_floorf+4,floorf@m+3
  4365  00258E  502A               	movf	floorf@m^0,w,c
  4366  002590  1430               	andwf	floorf@u^0,w,c
  4367  002592  6E24               	movwf	??_floorf^0,c
  4368  002594  502B               	movf	(floorf@m+1)^0,w,c
  4369  002596  1431               	andwf	(floorf@u+1)^0,w,c
  4370  002598  6E25               	movwf	(??_floorf+1)^0,c
  4371  00259A  502C               	movf	(floorf@m+2)^0,w,c
  4372  00259C  1432               	andwf	(floorf@u+2)^0,w,c
  4373  00259E  6E26               	movwf	(??_floorf+2)^0,c
  4374  0025A0  502D               	movf	(floorf@m+3)^0,w,c
  4375  0025A2  1433               	andwf	(floorf@u+3)^0,w,c
  4376  0025A4  6E27               	movwf	(??_floorf+3)^0,c
  4377  0025A6  5024               	movf	??_floorf^0,w,c
  4378  0025A8  1025               	iorwf	(??_floorf+1)^0,w,c
  4379  0025AA  1026               	iorwf	(??_floorf+2)^0,w,c
  4380  0025AC  1027               	iorwf	(??_floorf+3)^0,w,c
  4381  0025AE  A4D8               	btfss	status,2,c
  4382  0025B0  EFDC  F012         	goto	u5581
  4383  0025B4  EFDE  F012         	goto	u5580
  4384  0025B8                     u5581:
  4385  0025B8  EFE0  F012         	goto	l4342
  4386  0025BC                     u5580:
  4387  0025BC  EF97  F012         	goto	l4334
  4388  0025C0                     l4342:
  4389  0025C0  C030  F024         	movff	floorf@u,??_floorf
  4390  0025C4  C031  F025         	movff	floorf@u+1,??_floorf+1
  4391  0025C8  C032  F026         	movff	floorf@u+2,??_floorf+2
  4392  0025CC  C033  F027         	movff	floorf@u+3,??_floorf+3
  4393  0025D0  0E20               	movlw	32
  4394  0025D2  EFF0  F012         	goto	u5590
  4395  0025D6                     u5595:
  4396  0025D6  90D8               	bcf	status,0,c
  4397  0025D8  3227               	rrcf	(??_floorf+3)^0,f,c
  4398  0025DA  3226               	rrcf	(??_floorf+2)^0,f,c
  4399  0025DC  3225               	rrcf	(??_floorf+1)^0,f,c
  4400  0025DE  3224               	rrcf	??_floorf^0,f,c
  4401  0025E0                     u5590:
  4402  0025E0  2EE8               	decfsz	wreg,f,c
  4403  0025E2  EFEB  F012         	goto	u5595
  4404  0025E6  5024               	movf	??_floorf^0,w,c
  4405  0025E8  1025               	iorwf	(??_floorf+1)^0,w,c
  4406  0025EA  1026               	iorwf	(??_floorf+2)^0,w,c
  4407  0025EC  1027               	iorwf	(??_floorf+3)^0,w,c
  4408  0025EE  B4D8               	btfsc	status,2,c
  4409  0025F0  EFFC  F012         	goto	u5601
  4410  0025F4  EFFE  F012         	goto	u5600
  4411  0025F8                     u5601:
  4412  0025F8  EF06  F013         	goto	l1008
  4413  0025FC                     u5600:
  4414  0025FC  502A               	movf	floorf@m^0,w,c
  4415  0025FE  2630               	addwf	floorf@u^0,f,c
  4416  002600  502B               	movf	(floorf@m+1)^0,w,c
  4417  002602  2231               	addwfc	(floorf@u+1)^0,f,c
  4418  002604  502C               	movf	(floorf@m+2)^0,w,c
  4419  002606  2232               	addwfc	(floorf@u+2)^0,f,c
  4420  002608  502D               	movf	(floorf@m+3)^0,w,c
  4421  00260A  2233               	addwfc	(floorf@u+3)^0,f,c
  4422  00260C                     l1008:
  4423  00260C  1C2A               	comf	floorf@m^0,w,c
  4424  00260E  6E24               	movwf	??_floorf^0,c
  4425  002610  1C2B               	comf	(floorf@m+1)^0,w,c
  4426  002612  6E25               	movwf	(??_floorf+1)^0,c
  4427  002614  1C2C               	comf	(floorf@m+2)^0,w,c
  4428  002616  6E26               	movwf	(??_floorf+2)^0,c
  4429  002618  1C2D               	comf	(floorf@m+3)^0,w,c
  4430  00261A  6E27               	movwf	(??_floorf+3)^0,c
  4431  00261C  5024               	movf	??_floorf^0,w,c
  4432  00261E  1630               	andwf	floorf@u^0,f,c
  4433  002620  5025               	movf	(??_floorf+1)^0,w,c
  4434  002622  1631               	andwf	(floorf@u+1)^0,f,c
  4435  002624  5026               	movf	(??_floorf+2)^0,w,c
  4436  002626  1632               	andwf	(floorf@u+2)^0,f,c
  4437  002628  5027               	movf	(??_floorf+3)^0,w,c
  4438  00262A  1633               	andwf	(floorf@u+3)^0,f,c
  4439  00262C  EF5C  F013         	goto	l4354
  4440  002630                     l4346:
  4441  002630  C030  F024         	movff	floorf@u,??_floorf
  4442  002634  C031  F025         	movff	floorf@u+1,??_floorf+1
  4443  002638  C032  F026         	movff	floorf@u+2,??_floorf+2
  4444  00263C  C033  F027         	movff	floorf@u+3,??_floorf+3
  4445  002640  0E20               	movlw	32
  4446  002642  EF28  F013         	goto	u5610
  4447  002646                     u5615:
  4448  002646  90D8               	bcf	status,0,c
  4449  002648  3227               	rrcf	(??_floorf+3)^0,f,c
  4450  00264A  3226               	rrcf	(??_floorf+2)^0,f,c
  4451  00264C  3225               	rrcf	(??_floorf+1)^0,f,c
  4452  00264E  3224               	rrcf	??_floorf^0,f,c
  4453  002650                     u5610:
  4454  002650  2EE8               	decfsz	wreg,f,c
  4455  002652  EF23  F013         	goto	u5615
  4456  002656  5024               	movf	??_floorf^0,w,c
  4457  002658  1025               	iorwf	(??_floorf+1)^0,w,c
  4458  00265A  1026               	iorwf	(??_floorf+2)^0,w,c
  4459  00265C  1027               	iorwf	(??_floorf+3)^0,w,c
  4460  00265E  A4D8               	btfss	status,2,c
  4461  002660  EF34  F013         	goto	u5621
  4462  002664  EF36  F013         	goto	u5620
  4463  002668                     u5621:
  4464  002668  EF40  F013         	goto	l4350
  4465  00266C                     u5620:
  4466  00266C  0E00               	movlw	0
  4467  00266E  6E30               	movwf	floorf@u^0,c
  4468  002670  0E00               	movlw	0
  4469  002672  6E31               	movwf	(floorf@u+1)^0,c
  4470  002674  0E00               	movlw	0
  4471  002676  6E32               	movwf	(floorf@u+2)^0,c
  4472  002678  0E00               	movlw	0
  4473  00267A  6E33               	movwf	(floorf@u+3)^0,c
  4474  00267C  EF5C  F013         	goto	l4354
  4475  002680                     l4350:
  4476  002680  90D8               	bcf	status,0,c
  4477  002682  3430               	rlcf	floorf@u^0,w,c
  4478  002684  6E24               	movwf	??_floorf^0,c
  4479  002686  3431               	rlcf	(floorf@u+1)^0,w,c
  4480  002688  6E25               	movwf	(??_floorf+1)^0,c
  4481  00268A  3432               	rlcf	(floorf@u+2)^0,w,c
  4482  00268C  6E26               	movwf	(??_floorf+2)^0,c
  4483  00268E  3433               	rlcf	(floorf@u+3)^0,w,c
  4484  002690  6E27               	movwf	(??_floorf+3)^0,c
  4485  002692  5024               	movf	??_floorf^0,w,c
  4486  002694  1025               	iorwf	(??_floorf+1)^0,w,c
  4487  002696  1026               	iorwf	(??_floorf+2)^0,w,c
  4488  002698  1027               	iorwf	(??_floorf+3)^0,w,c
  4489  00269A  B4D8               	btfsc	status,2,c
  4490  00269C  EF52  F013         	goto	u5631
  4491  0026A0  EF54  F013         	goto	u5630
  4492  0026A4                     u5631:
  4493  0026A4  EF5C  F013         	goto	l4354
  4494  0026A8                     u5630:
  4495  0026A8  0E00               	movlw	0
  4496  0026AA  6E30               	movwf	floorf@u^0,c
  4497  0026AC  0E00               	movlw	0
  4498  0026AE  6E31               	movwf	(floorf@u+1)^0,c
  4499  0026B0  0E80               	movlw	128
  4500  0026B2  6E32               	movwf	(floorf@u+2)^0,c
  4501  0026B4  0EBF               	movlw	191
  4502  0026B6  6E33               	movwf	(floorf@u+3)^0,c
  4503  0026B8                     l4354:
  4504  0026B8  C030  F020         	movff	floorf@u,?_floorf
  4505  0026BC  C031  F021         	movff	floorf@u+1,?_floorf+1
  4506  0026C0  C032  F022         	movff	floorf@u+2,?_floorf+2
  4507  0026C4  C033  F023         	movff	floorf@u+3,?_floorf+3
  4508  0026C8                     l1005:
  4509  0026C8  0012               	return		;funcret
  4510  0026CA                     __end_of_floorf:
  4511                           	opt callstack 0
  4512                           
  4513 ;; *************** function ___fpclassifyf *****************
  4514 ;; Defined at:
  4515 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;  x               4    6[COMRAM] float 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  u               4   16[COMRAM] struct .
  4520 ;;  e               2   14[COMRAM] int 
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  2    6[COMRAM] int 
  4523 ;; Registers used:
  4524 ;;		wreg, status,2, status,0
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4530 ;;      Params:         4       0       0       0       0       0       0       0       0
  4531 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4532 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4533 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4534 ;;Total ram usage:       14 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    2
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_efgtoa
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text15
  4545  002C18                     __ptext15:
  4546                           	opt callstack 0
  4547  002C18                     ___fpclassifyf:
  4548                           	opt callstack 24
  4549  002C18  C0CE  F011         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4550  002C1C  C0CF  F012         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4551  002C20  C0D0  F013         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4552  002C24  C0D1  F014         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4553  002C28  C007  F011         	movff	___fpclassifyf@x,___fpclassifyf@u
  4554  002C2C  C008  F012         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4555  002C30  C009  F013         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4556  002C34  C00A  F014         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4557  002C38  C011  F00B         	movff	___fpclassifyf@u,??___fpclassifyf
  4558  002C3C  C012  F00C         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4559  002C40  C013  F00D         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4560  002C44  C014  F00E         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4561  002C48  0E18               	movlw	24
  4562  002C4A  EF2C  F016         	goto	u5420
  4563  002C4E                     u5425:
  4564  002C4E  90D8               	bcf	status,0,c
  4565  002C50  320E               	rrcf	(??___fpclassifyf+3)^0,f,c
  4566  002C52  320D               	rrcf	(??___fpclassifyf+2)^0,f,c
  4567  002C54  320C               	rrcf	(??___fpclassifyf+1)^0,f,c
  4568  002C56  320B               	rrcf	??___fpclassifyf^0,f,c
  4569  002C58                     u5420:
  4570  002C58  2EE8               	decfsz	wreg,f,c
  4571  002C5A  EF27  F016         	goto	u5425
  4572  002C5E  500B               	movf	??___fpclassifyf^0,w,c
  4573  002C60  6E0F               	movwf	___fpclassifyf@e^0,c
  4574  002C62  6A10               	clrf	(___fpclassifyf@e+1)^0,c
  4575  002C64  500F               	movf	___fpclassifyf@e^0,w,c
  4576  002C66  1010               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4577  002C68  A4D8               	btfss	status,2,c
  4578  002C6A  EF39  F016         	goto	u5431
  4579  002C6E  EF3B  F016         	goto	u5430
  4580  002C72                     u5431:
  4581  002C72  EF5B  F016         	goto	l4306
  4582  002C76                     u5430:
  4583  002C76  90D8               	bcf	status,0,c
  4584  002C78  3411               	rlcf	___fpclassifyf@u^0,w,c
  4585  002C7A  6E0B               	movwf	??___fpclassifyf^0,c
  4586  002C7C  3412               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4587  002C7E  6E0C               	movwf	(??___fpclassifyf+1)^0,c
  4588  002C80  3413               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4589  002C82  6E0D               	movwf	(??___fpclassifyf+2)^0,c
  4590  002C84  3414               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4591  002C86  6E0E               	movwf	(??___fpclassifyf+3)^0,c
  4592  002C88  500B               	movf	??___fpclassifyf^0,w,c
  4593  002C8A  100C               	iorwf	(??___fpclassifyf+1)^0,w,c
  4594  002C8C  100D               	iorwf	(??___fpclassifyf+2)^0,w,c
  4595  002C8E  100E               	iorwf	(??___fpclassifyf+3)^0,w,c
  4596  002C90  A4D8               	btfss	status,2,c
  4597  002C92  EF4D  F016         	goto	u5441
  4598  002C96  EF4F  F016         	goto	u5440
  4599  002C9A                     u5441:
  4600  002C9A  EF55  F016         	goto	l4302
  4601  002C9E                     u5440:
  4602  002C9E  0E00               	movlw	0
  4603  002CA0  6E08               	movwf	(?___fpclassifyf+1)^0,c
  4604  002CA2  0E02               	movlw	2
  4605  002CA4  6E07               	movwf	?___fpclassifyf^0,c
  4606  002CA6  EF8A  F016         	goto	l967
  4607  002CAA                     l4302:
  4608  002CAA  0E00               	movlw	0
  4609  002CAC  6E08               	movwf	(?___fpclassifyf+1)^0,c
  4610  002CAE  0E03               	movlw	3
  4611  002CB0  6E07               	movwf	?___fpclassifyf^0,c
  4612  002CB2  EF8A  F016         	goto	l967
  4613  002CB6                     l4306:
  4614  002CB6  280F               	incf	___fpclassifyf@e^0,w,c
  4615  002CB8  1010               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4616  002CBA  A4D8               	btfss	status,2,c
  4617  002CBC  EF62  F016         	goto	u5451
  4618  002CC0  EF64  F016         	goto	u5450
  4619  002CC4                     u5451:
  4620  002CC4  EF86  F016         	goto	l4312
  4621  002CC8                     u5450:
  4622  002CC8  C011  F00B         	movff	___fpclassifyf@u,??___fpclassifyf
  4623  002CCC  C012  F00C         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4624  002CD0  C013  F00D         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4625  002CD4  C014  F00E         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4626  002CD8  0E09               	movlw	9
  4627  002CDA                     u5465:
  4628  002CDA  90D8               	bcf	status,0,c
  4629  002CDC  360B               	rlcf	??___fpclassifyf^0,f,c
  4630  002CDE  360C               	rlcf	(??___fpclassifyf+1)^0,f,c
  4631  002CE0  360D               	rlcf	(??___fpclassifyf+2)^0,f,c
  4632  002CE2  360E               	rlcf	(??___fpclassifyf+3)^0,f,c
  4633  002CE4  2EE8               	decfsz	wreg,f,c
  4634  002CE6  EF6D  F016         	goto	u5465
  4635  002CEA  500B               	movf	??___fpclassifyf^0,w,c
  4636  002CEC  100C               	iorwf	(??___fpclassifyf+1)^0,w,c
  4637  002CEE  100D               	iorwf	(??___fpclassifyf+2)^0,w,c
  4638  002CF0  100E               	iorwf	(??___fpclassifyf+3)^0,w,c
  4639  002CF2  B4D8               	btfsc	status,2,c
  4640  002CF4  EF7E  F016         	goto	u5471
  4641  002CF8  EF81  F016         	goto	u5470
  4642  002CFC                     u5471:
  4643  002CFC  0E01               	movlw	1
  4644  002CFE  EF82  F016         	goto	u5480
  4645  002D02                     u5470:
  4646  002D02  0E00               	movlw	0
  4647  002D04                     u5480:
  4648  002D04  6E07               	movwf	?___fpclassifyf^0,c
  4649  002D06  6A08               	clrf	(?___fpclassifyf+1)^0,c
  4650  002D08  EF8A  F016         	goto	l967
  4651  002D0C                     l4312:
  4652  002D0C  0E00               	movlw	0
  4653  002D0E  6E08               	movwf	(?___fpclassifyf+1)^0,c
  4654  002D10  0E04               	movlw	4
  4655  002D12  6E07               	movwf	?___fpclassifyf^0,c
  4656  002D14                     l967:
  4657  002D14  0012               	return		;funcret
  4658  002D16                     __end_of___fpclassifyf:
  4659                           	opt callstack 0
  4660                           
  4661 ;; *************** function ___fltol *****************
  4662 ;; Defined at:
  4663 ;;		line 43 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;  f1              4    6[COMRAM] int 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;  exp1            1   15[COMRAM] unsigned char 
  4668 ;;  sign1           1   14[COMRAM] unsigned char 
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  4    6[COMRAM] long 
  4671 ;; Registers used:
  4672 ;;		wreg, status,2, status,0
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4678 ;;      Params:         4       0       0       0       0       0       0       0       0
  4679 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4680 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4681 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4682 ;;Total ram usage:       10 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; Hardware stack levels required when called:    2
  4685 ;; This function calls:
  4686 ;;		Nothing
  4687 ;; This function is called by:
  4688 ;;		_efgtoa
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text16
  4693  002A0E                     __ptext16:
  4694                           	opt callstack 0
  4695  002A0E                     ___fltol:
  4696                           	opt callstack 24
  4697  002A0E  3409               	rlcf	(___fltol@f1+2)^0,w,c
  4698  002A10  340A               	rlcf	(___fltol@f1+3)^0,w,c
  4699  002A12  6E10               	movwf	___fltol@exp1^0,c
  4700  002A14  5010               	movf	___fltol@exp1^0,w,c
  4701  002A16  A4D8               	btfss	status,2,c
  4702  002A18  EF10  F015         	goto	u6291
  4703  002A1C  EF12  F015         	goto	u6290
  4704  002A20                     u6291:
  4705  002A20  EF1C  F015         	goto	l4774
  4706  002A24                     u6290:
  4707  002A24                     l4770:
  4708  002A24  0E00               	movlw	0
  4709  002A26  6E07               	movwf	?___fltol^0,c
  4710  002A28  0E00               	movlw	0
  4711  002A2A  6E08               	movwf	(?___fltol+1)^0,c
  4712  002A2C  0E00               	movlw	0
  4713  002A2E  6E09               	movwf	(?___fltol+2)^0,c
  4714  002A30  0E00               	movlw	0
  4715  002A32  6E0A               	movwf	(?___fltol+3)^0,c
  4716  002A34  EF89  F015         	goto	l583
  4717  002A38                     l4774:
  4718  002A38  C007  F00B         	movff	___fltol@f1,??___fltol
  4719  002A3C  C008  F00C         	movff	___fltol@f1+1,??___fltol+1
  4720  002A40  C009  F00D         	movff	___fltol@f1+2,??___fltol+2
  4721  002A44  C00A  F00E         	movff	___fltol@f1+3,??___fltol+3
  4722  002A48  0E20               	movlw	32
  4723  002A4A  EF2C  F015         	goto	u6300
  4724  002A4E                     u6305:
  4725  002A4E  90D8               	bcf	status,0,c
  4726  002A50  320E               	rrcf	(??___fltol+3)^0,f,c
  4727  002A52  320D               	rrcf	(??___fltol+2)^0,f,c
  4728  002A54  320C               	rrcf	(??___fltol+1)^0,f,c
  4729  002A56  320B               	rrcf	??___fltol^0,f,c
  4730  002A58                     u6300:
  4731  002A58  2EE8               	decfsz	wreg,f,c
  4732  002A5A  EF27  F015         	goto	u6305
  4733  002A5E  500B               	movf	??___fltol^0,w,c
  4734  002A60  6E0F               	movwf	___fltol@sign1^0,c
  4735  002A62  8E09               	bsf	(___fltol@f1+2)^0,7,c
  4736  002A64  0EFF               	movlw	255
  4737  002A66  1607               	andwf	___fltol@f1^0,f,c
  4738  002A68  0EFF               	movlw	255
  4739  002A6A  1608               	andwf	(___fltol@f1+1)^0,f,c
  4740  002A6C  0EFF               	movlw	255
  4741  002A6E  1609               	andwf	(___fltol@f1+2)^0,f,c
  4742  002A70  0E00               	movlw	0
  4743  002A72  160A               	andwf	(___fltol@f1+3)^0,f,c
  4744  002A74  0E96               	movlw	150
  4745  002A76  5E10               	subwf	___fltol@exp1^0,f,c
  4746  002A78  BE10               	btfsc	___fltol@exp1^0,7,c
  4747  002A7A  EF43  F015         	goto	u6310
  4748  002A7E  EF41  F015         	goto	u6311
  4749  002A82                     u6311:
  4750  002A82  EF59  F015         	goto	l4794
  4751  002A86                     u6310:
  4752  002A86  5010               	movf	___fltol@exp1^0,w,c
  4753  002A88  0A80               	xorlw	128
  4754  002A8A  0F97               	addlw	151
  4755  002A8C  B0D8               	btfsc	status,0,c
  4756  002A8E  EF4B  F015         	goto	u6321
  4757  002A92  EF4D  F015         	goto	u6320
  4758  002A96                     u6321:
  4759  002A96  EF4F  F015         	goto	l4790
  4760  002A9A                     u6320:
  4761  002A9A  EF12  F015         	goto	l4770
  4762  002A9E                     l4790:
  4763  002A9E  90D8               	bcf	status,0,c
  4764  002AA0  320A               	rrcf	(___fltol@f1+3)^0,f,c
  4765  002AA2  3209               	rrcf	(___fltol@f1+2)^0,f,c
  4766  002AA4  3208               	rrcf	(___fltol@f1+1)^0,f,c
  4767  002AA6  3207               	rrcf	___fltol@f1^0,f,c
  4768  002AA8  3E10               	incfsz	___fltol@exp1^0,f,c
  4769  002AAA  EF4F  F015         	goto	l4790
  4770  002AAE  EF71  F015         	goto	l4804
  4771  002AB2                     l4794:
  4772  002AB2  0E1F               	movlw	31
  4773  002AB4  6410               	cpfsgt	___fltol@exp1^0,c
  4774  002AB6  EF5F  F015         	goto	u6331
  4775  002ABA  EF61  F015         	goto	u6330
  4776  002ABE                     u6331:
  4777  002ABE  EF69  F015         	goto	l4802
  4778  002AC2                     u6330:
  4779  002AC2  EF12  F015         	goto	l4770
  4780  002AC6                     l4800:
  4781  002AC6  90D8               	bcf	status,0,c
  4782  002AC8  3607               	rlcf	___fltol@f1^0,f,c
  4783  002ACA  3608               	rlcf	(___fltol@f1+1)^0,f,c
  4784  002ACC  3609               	rlcf	(___fltol@f1+2)^0,f,c
  4785  002ACE  360A               	rlcf	(___fltol@f1+3)^0,f,c
  4786  002AD0  0610               	decf	___fltol@exp1^0,f,c
  4787  002AD2                     l4802:
  4788  002AD2  5010               	movf	___fltol@exp1^0,w,c
  4789  002AD4  A4D8               	btfss	status,2,c
  4790  002AD6  EF6F  F015         	goto	u6341
  4791  002ADA  EF71  F015         	goto	u6340
  4792  002ADE                     u6341:
  4793  002ADE  EF63  F015         	goto	l4800
  4794  002AE2                     u6340:
  4795  002AE2                     l4804:
  4796  002AE2  500F               	movf	___fltol@sign1^0,w,c
  4797  002AE4  B4D8               	btfsc	status,2,c
  4798  002AE6  EF77  F015         	goto	u6351
  4799  002AEA  EF79  F015         	goto	u6350
  4800  002AEE                     u6351:
  4801  002AEE  EF81  F015         	goto	l4808
  4802  002AF2                     u6350:
  4803  002AF2  1E0A               	comf	(___fltol@f1+3)^0,f,c
  4804  002AF4  1E09               	comf	(___fltol@f1+2)^0,f,c
  4805  002AF6  1E08               	comf	(___fltol@f1+1)^0,f,c
  4806  002AF8  6C07               	negf	___fltol@f1^0,c
  4807  002AFA  0E00               	movlw	0
  4808  002AFC  2208               	addwfc	(___fltol@f1+1)^0,f,c
  4809  002AFE  2209               	addwfc	(___fltol@f1+2)^0,f,c
  4810  002B00  220A               	addwfc	(___fltol@f1+3)^0,f,c
  4811  002B02                     l4808:
  4812  002B02  C007  F007         	movff	___fltol@f1,?___fltol
  4813  002B06  C008  F008         	movff	___fltol@f1+1,?___fltol+1
  4814  002B0A  C009  F009         	movff	___fltol@f1+2,?___fltol+2
  4815  002B0E  C00A  F00A         	movff	___fltol@f1+3,?___fltol+3
  4816  002B12                     l583:
  4817  002B12  0012               	return		;funcret
  4818  002B14                     __end_of___fltol:
  4819                           	opt callstack 0
  4820                           
  4821 ;; *************** function ___flsub *****************
  4822 ;; Defined at:
  4823 ;;		line 245 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;  b               4   31[COMRAM] long 
  4826 ;;  a               4   35[COMRAM] long 
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;		None
  4829 ;; Return value:  Size  Location     Type
  4830 ;;                  4   31[COMRAM] long 
  4831 ;; Registers used:
  4832 ;;		wreg, status,2, status,0, cstack
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4838 ;;      Params:         8       0       0       0       0       0       0       0       0
  4839 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4840 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4841 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4842 ;;Total ram usage:        8 bytes
  4843 ;; Hardware stack levels used:    1
  4844 ;; Hardware stack levels required when called:    3
  4845 ;; This function calls:
  4846 ;;		___fladd
  4847 ;; This function is called by:
  4848 ;;		_efgtoa
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text17
  4853  0034E8                     __ptext17:
  4854                           	opt callstack 0
  4855  0034E8                     ___flsub:
  4856                           	opt callstack 23
  4857  0034E8  0E00               	movlw	0
  4858  0034EA  1A24               	xorwf	___flsub@a^0,f,c
  4859  0034EC  0E00               	movlw	0
  4860  0034EE  1A25               	xorwf	(___flsub@a+1)^0,f,c
  4861  0034F0  0E00               	movlw	0
  4862  0034F2  1A26               	xorwf	(___flsub@a+2)^0,f,c
  4863  0034F4  0E80               	movlw	128
  4864  0034F6  1A27               	xorwf	(___flsub@a+3)^0,f,c
  4865  0034F8  C020  F007         	movff	___flsub@b,___fladd@b
  4866  0034FC  C021  F008         	movff	___flsub@b+1,___fladd@b+1
  4867  003500  C022  F009         	movff	___flsub@b+2,___fladd@b+2
  4868  003504  C023  F00A         	movff	___flsub@b+3,___fladd@b+3
  4869  003508  C024  F00B         	movff	___flsub@a,___fladd@a
  4870  00350C  C025  F00C         	movff	___flsub@a+1,___fladd@a+1
  4871  003510  C026  F00D         	movff	___flsub@a+2,___fladd@a+2
  4872  003514  C027  F00E         	movff	___flsub@a+3,___fladd@a+3
  4873  003518  ECE6  F009         	call	___fladd	;wreg free
  4874  00351C  C007  F020         	movff	?___fladd,?___flsub
  4875  003520  C008  F021         	movff	?___fladd+1,?___flsub+1
  4876  003524  C009  F022         	movff	?___fladd+2,?___flsub+2
  4877  003528  C00A  F023         	movff	?___fladd+3,?___flsub+3
  4878  00352C  0012               	return		;funcret
  4879  00352E                     __end_of___flsub:
  4880                           	opt callstack 0
  4881                           
  4882 ;; *************** function ___fladd *****************
  4883 ;; Defined at:
  4884 ;;		line 10 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;  b               4    6[COMRAM] long 
  4887 ;;  a               4   10[COMRAM] long 
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;  grs             1   21[COMRAM] unsigned char 
  4890 ;;  bexp            1   20[COMRAM] unsigned char 
  4891 ;;  aexp            1   19[COMRAM] unsigned char 
  4892 ;;  signs           1   18[COMRAM] unsigned char 
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  4    6[COMRAM] unsigned char 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2, status,0
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4902 ;;      Params:         8       0       0       0       0       0       0       0       0
  4903 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4904 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4905 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4906 ;;Total ram usage:       16 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; Hardware stack levels required when called:    2
  4909 ;; This function calls:
  4910 ;;		Nothing
  4911 ;; This function is called by:
  4912 ;;		_efgtoa
  4913 ;;		___flsub
  4914 ;; This function uses a non-reentrant model
  4915 ;;
  4916                           
  4917                           	psect	text18
  4918  0013CC                     __ptext18:
  4919                           	opt callstack 0
  4920  0013CC                     ___fladd:
  4921                           	opt callstack 23
  4922  0013CC  500A               	movf	(___fladd@b+3)^0,w,c
  4923  0013CE  0B80               	andlw	128
  4924  0013D0  6E13               	movwf	___fladd@signs^0,c
  4925  0013D2  500A               	movf	(___fladd@b+3)^0,w,c
  4926  0013D4  240A               	addwf	(___fladd@b+3)^0,w,c
  4927  0013D6  6E15               	movwf	___fladd@bexp^0,c
  4928  0013D8  AE09               	btfss	(___fladd@b+2)^0,7,c
  4929  0013DA  EFF1  F009         	goto	u4991
  4930  0013DE  EFF3  F009         	goto	u4990
  4931  0013E2                     u4991:
  4932  0013E2  EFF4  F009         	goto	l4076
  4933  0013E6                     u4990:
  4934  0013E6  8015               	bsf	___fladd@bexp^0,0,c
  4935  0013E8                     l4076:
  4936  0013E8  5015               	movf	___fladd@bexp^0,w,c
  4937  0013EA  B4D8               	btfsc	status,2,c
  4938  0013EC  EFFA  F009         	goto	u5001
  4939  0013F0  EFFC  F009         	goto	u5000
  4940  0013F4                     u5001:
  4941  0013F4  EF11  F00A         	goto	l4086
  4942  0013F8                     u5000:
  4943  0013F8  2815               	incf	___fladd@bexp^0,w,c
  4944  0013FA  A4D8               	btfss	status,2,c
  4945  0013FC  EF02  F00A         	goto	u5011
  4946  001400  EF04  F00A         	goto	u5010
  4947  001404                     u5011:
  4948  001404  EF0C  F00A         	goto	l4082
  4949  001408                     u5010:
  4950  001408  0E00               	movlw	0
  4951  00140A  6E07               	movwf	___fladd@b^0,c
  4952  00140C  0E00               	movlw	0
  4953  00140E  6E08               	movwf	(___fladd@b+1)^0,c
  4954  001410  0E00               	movlw	0
  4955  001412  6E09               	movwf	(___fladd@b+2)^0,c
  4956  001414  0E00               	movlw	0
  4957  001416  6E0A               	movwf	(___fladd@b+3)^0,c
  4958  001418                     l4082:
  4959  001418  8E09               	bsf	(___fladd@b+2)^0,7,c
  4960  00141A  0E00               	movlw	0
  4961  00141C  6E0A               	movwf	(___fladd@b+3)^0,c
  4962  00141E  EF19  F00A         	goto	l4088
  4963  001422                     l4086:
  4964  001422  0E00               	movlw	0
  4965  001424  6E07               	movwf	___fladd@b^0,c
  4966  001426  0E00               	movlw	0
  4967  001428  6E08               	movwf	(___fladd@b+1)^0,c
  4968  00142A  0E00               	movlw	0
  4969  00142C  6E09               	movwf	(___fladd@b+2)^0,c
  4970  00142E  0E00               	movlw	0
  4971  001430  6E0A               	movwf	(___fladd@b+3)^0,c
  4972  001432                     l4088:
  4973  001432  500E               	movf	(___fladd@a+3)^0,w,c
  4974  001434  0B80               	andlw	128
  4975  001436  6E14               	movwf	___fladd@aexp^0,c
  4976  001438  5013               	movf	___fladd@signs^0,w,c
  4977  00143A  1814               	xorwf	___fladd@aexp^0,w,c
  4978  00143C  B4D8               	btfsc	status,2,c
  4979  00143E  EF23  F00A         	goto	u5021
  4980  001442  EF25  F00A         	goto	u5020
  4981  001446                     u5021:
  4982  001446  EF26  F00A         	goto	l4094
  4983  00144A                     u5020:
  4984  00144A  8C13               	bsf	___fladd@signs^0,6,c
  4985  00144C                     l4094:
  4986  00144C  500E               	movf	(___fladd@a+3)^0,w,c
  4987  00144E  240E               	addwf	(___fladd@a+3)^0,w,c
  4988  001450  6E14               	movwf	___fladd@aexp^0,c
  4989  001452  AE0D               	btfss	(___fladd@a+2)^0,7,c
  4990  001454  EF2E  F00A         	goto	u5031
  4991  001458  EF30  F00A         	goto	u5030
  4992  00145C                     u5031:
  4993  00145C  EF31  F00A         	goto	l4100
  4994  001460                     u5030:
  4995  001460  8014               	bsf	___fladd@aexp^0,0,c
  4996  001462                     l4100:
  4997  001462  5014               	movf	___fladd@aexp^0,w,c
  4998  001464  B4D8               	btfsc	status,2,c
  4999  001466  EF37  F00A         	goto	u5041
  5000  00146A  EF39  F00A         	goto	u5040
  5001  00146E                     u5041:
  5002  00146E  EF4E  F00A         	goto	l4110
  5003  001472                     u5040:
  5004  001472  2814               	incf	___fladd@aexp^0,w,c
  5005  001474  A4D8               	btfss	status,2,c
  5006  001476  EF3F  F00A         	goto	u5051
  5007  00147A  EF41  F00A         	goto	u5050
  5008  00147E                     u5051:
  5009  00147E  EF49  F00A         	goto	l4106
  5010  001482                     u5050:
  5011  001482  0E00               	movlw	0
  5012  001484  6E0B               	movwf	___fladd@a^0,c
  5013  001486  0E00               	movlw	0
  5014  001488  6E0C               	movwf	(___fladd@a+1)^0,c
  5015  00148A  0E00               	movlw	0
  5016  00148C  6E0D               	movwf	(___fladd@a+2)^0,c
  5017  00148E  0E00               	movlw	0
  5018  001490  6E0E               	movwf	(___fladd@a+3)^0,c
  5019  001492                     l4106:
  5020  001492  8E0D               	bsf	(___fladd@a+2)^0,7,c
  5021  001494  0E00               	movlw	0
  5022  001496  6E0E               	movwf	(___fladd@a+3)^0,c
  5023  001498  EF56  F00A         	goto	l4112
  5024  00149C                     l4110:
  5025  00149C  0E00               	movlw	0
  5026  00149E  6E0B               	movwf	___fladd@a^0,c
  5027  0014A0  0E00               	movlw	0
  5028  0014A2  6E0C               	movwf	(___fladd@a+1)^0,c
  5029  0014A4  0E00               	movlw	0
  5030  0014A6  6E0D               	movwf	(___fladd@a+2)^0,c
  5031  0014A8  0E00               	movlw	0
  5032  0014AA  6E0E               	movwf	(___fladd@a+3)^0,c
  5033  0014AC                     l4112:
  5034  0014AC  5015               	movf	___fladd@bexp^0,w,c
  5035  0014AE  5C14               	subwf	___fladd@aexp^0,w,c
  5036  0014B0  B0D8               	btfsc	status,0,c
  5037  0014B2  EF5D  F00A         	goto	u5061
  5038  0014B6  EF5F  F00A         	goto	u5060
  5039  0014BA                     u5061:
  5040  0014BA  EF86  F00A         	goto	l4148
  5041  0014BE                     u5060:
  5042  0014BE  AC13               	btfss	___fladd@signs^0,6,c
  5043  0014C0  EF64  F00A         	goto	u5071
  5044  0014C4  EF66  F00A         	goto	u5070
  5045  0014C8                     u5071:
  5046  0014C8  EF68  F00A         	goto	l4118
  5047  0014CC                     u5070:
  5048  0014CC  0E80               	movlw	128
  5049  0014CE  1A13               	xorwf	___fladd@signs^0,f,c
  5050  0014D0                     l4118:
  5051  0014D0  C015  F016         	movff	___fladd@bexp,___fladd@grs
  5052  0014D4  C014  F015         	movff	___fladd@aexp,___fladd@bexp
  5053  0014D8  C016  F014         	movff	___fladd@grs,___fladd@aexp
  5054  0014DC  C007  F016         	movff	___fladd@b,___fladd@grs
  5055  0014E0  C00B  F007         	movff	___fladd@a,___fladd@b
  5056  0014E4  C016  F00B         	movff	___fladd@grs,___fladd@a
  5057  0014E8  C008  F016         	movff	___fladd@b+1,___fladd@grs
  5058  0014EC  C00C  F008         	movff	___fladd@a+1,___fladd@b+1
  5059  0014F0  C016  F00C         	movff	___fladd@grs,___fladd@a+1
  5060  0014F4  C009  F016         	movff	___fladd@b+2,___fladd@grs
  5061  0014F8  C00D  F009         	movff	___fladd@a+2,___fladd@b+2
  5062  0014FC  C016  F00D         	movff	___fladd@grs,___fladd@a+2
  5063  001500  C00A  F016         	movff	___fladd@b+3,___fladd@grs
  5064  001504  C00E  F00A         	movff	___fladd@a+3,___fladd@b+3
  5065  001508  C016  F00E         	movff	___fladd@grs,___fladd@a+3
  5066  00150C                     l4148:
  5067  00150C  0E00               	movlw	0
  5068  00150E  6E16               	movwf	___fladd@grs^0,c
  5069  001510  5015               	movf	___fladd@bexp^0,w,c
  5070  001512  C014  F00F         	movff	___fladd@aexp,??___fladd
  5071  001516  6A10               	clrf	(??___fladd+1)^0,c
  5072  001518  5E0F               	subwf	??___fladd^0,f,c
  5073  00151A  0E00               	movlw	0
  5074  00151C  5A10               	subwfb	(??___fladd+1)^0,f,c
  5075  00151E  BE10               	btfsc	(??___fladd+1)^0,7,c
  5076  001520  EF9B  F00A         	goto	u5081
  5077  001524  5010               	movf	(??___fladd+1)^0,w,c
  5078  001526  E109               	bnz	u5080
  5079  001528  0E1A               	movlw	26
  5080  00152A  5C0F               	subwf	??___fladd^0,w,c
  5081  00152C  A0D8               	btfss	status,0,c
  5082  00152E  EF9B  F00A         	goto	u5081
  5083  001532  EF9D  F00A         	goto	u5080
  5084  001536                     u5081:
  5085  001536  EFD4  F00A         	goto	l815
  5086  00153A                     u5080:
  5087  00153A  5007               	movf	___fladd@b^0,w,c
  5088  00153C  1008               	iorwf	(___fladd@b+1)^0,w,c
  5089  00153E  1009               	iorwf	(___fladd@b+2)^0,w,c
  5090  001540  100A               	iorwf	(___fladd@b+3)^0,w,c
  5091  001542  A4D8               	btfss	status,2,c
  5092  001544  EFA6  F00A         	goto	u5091
  5093  001548  EFA9  F00A         	goto	u5090
  5094  00154C                     u5091:
  5095  00154C  0E01               	movlw	1
  5096  00154E  EFAA  F00A         	goto	u5100
  5097  001552                     u5090:
  5098  001552  0E00               	movlw	0
  5099  001554                     u5100:
  5100  001554  6E16               	movwf	___fladd@grs^0,c
  5101  001556  0E00               	movlw	0
  5102  001558  6E07               	movwf	___fladd@b^0,c
  5103  00155A  0E00               	movlw	0
  5104  00155C  6E08               	movwf	(___fladd@b+1)^0,c
  5105  00155E  0E00               	movlw	0
  5106  001560  6E09               	movwf	(___fladd@b+2)^0,c
  5107  001562  0E00               	movlw	0
  5108  001564  6E0A               	movwf	(___fladd@b+3)^0,c
  5109  001566  C014  F015         	movff	___fladd@aexp,___fladd@bexp
  5110  00156A  EFDD  F00A         	goto	l814
  5111  00156E                     l816:
  5112  00156E  A016               	btfss	___fladd@grs^0,0,c
  5113  001570  EFBC  F00A         	goto	u5111
  5114  001574  EFBE  F00A         	goto	u5110
  5115  001578                     u5111:
  5116  001578  EFC4  F00A         	goto	l4160
  5117  00157C                     u5110:
  5118  00157C  90D8               	bcf	status,0,c
  5119  00157E  3016               	rrcf	___fladd@grs^0,w,c
  5120  001580  0901               	iorlw	1
  5121  001582  6E16               	movwf	___fladd@grs^0,c
  5122  001584  EFC6  F00A         	goto	l4162
  5123  001588                     l4160:
  5124  001588  90D8               	bcf	status,0,c
  5125  00158A  3216               	rrcf	___fladd@grs^0,f,c
  5126  00158C                     l4162:
  5127  00158C  A007               	btfss	___fladd@b^0,0,c
  5128  00158E  EFCB  F00A         	goto	u5121
  5129  001592  EFCD  F00A         	goto	u5120
  5130  001596                     u5121:
  5131  001596  EFCE  F00A         	goto	l4166
  5132  00159A                     u5120:
  5133  00159A  8E16               	bsf	___fladd@grs^0,7,c
  5134  00159C                     l4166:
  5135  00159C  340A               	rlcf	(___fladd@b+3)^0,w,c
  5136  00159E  320A               	rrcf	(___fladd@b+3)^0,f,c
  5137  0015A0  3209               	rrcf	(___fladd@b+2)^0,f,c
  5138  0015A2  3208               	rrcf	(___fladd@b+1)^0,f,c
  5139  0015A4  3207               	rrcf	___fladd@b^0,f,c
  5140  0015A6  2A15               	incf	___fladd@bexp^0,f,c
  5141  0015A8                     l815:
  5142  0015A8  5014               	movf	___fladd@aexp^0,w,c
  5143  0015AA  5C15               	subwf	___fladd@bexp^0,w,c
  5144  0015AC  A0D8               	btfss	status,0,c
  5145  0015AE  EFDB  F00A         	goto	u5131
  5146  0015B2  EFDD  F00A         	goto	u5130
  5147  0015B6                     u5131:
  5148  0015B6  EFB7  F00A         	goto	l816
  5149  0015BA                     u5130:
  5150  0015BA                     l814:
  5151  0015BA  BC13               	btfsc	___fladd@signs^0,6,c
  5152  0015BC  EFE2  F00A         	goto	u5141
  5153  0015C0  EFE4  F00A         	goto	u5140
  5154  0015C4                     u5141:
  5155  0015C4  EF24  F00B         	goto	l4194
  5156  0015C8                     u5140:
  5157  0015C8  5015               	movf	___fladd@bexp^0,w,c
  5158  0015CA  A4D8               	btfss	status,2,c
  5159  0015CC  EFEA  F00A         	goto	u5151
  5160  0015D0  EFEC  F00A         	goto	u5150
  5161  0015D4                     u5151:
  5162  0015D4  EFF6  F00A         	goto	l4176
  5163  0015D8                     u5150:
  5164  0015D8  0E00               	movlw	0
  5165  0015DA  6E07               	movwf	?___fladd^0,c
  5166  0015DC  0E00               	movlw	0
  5167  0015DE  6E08               	movwf	(?___fladd+1)^0,c
  5168  0015E0  0E00               	movlw	0
  5169  0015E2  6E09               	movwf	(?___fladd+2)^0,c
  5170  0015E4  0E00               	movlw	0
  5171  0015E6  6E0A               	movwf	(?___fladd+3)^0,c
  5172  0015E8  EF45  F00C         	goto	l823
  5173  0015EC                     l4176:
  5174  0015EC  500B               	movf	___fladd@a^0,w,c
  5175  0015EE  2607               	addwf	___fladd@b^0,f,c
  5176  0015F0  500C               	movf	(___fladd@a+1)^0,w,c
  5177  0015F2  2208               	addwfc	(___fladd@b+1)^0,f,c
  5178  0015F4  500D               	movf	(___fladd@a+2)^0,w,c
  5179  0015F6  2209               	addwfc	(___fladd@b+2)^0,f,c
  5180  0015F8  500E               	movf	(___fladd@a+3)^0,w,c
  5181  0015FA  220A               	addwfc	(___fladd@b+3)^0,f,c
  5182  0015FC  A00A               	btfss	(___fladd@b+3)^0,0,c
  5183  0015FE  EF03  F00B         	goto	u5161
  5184  001602  EF05  F00B         	goto	u5160
  5185  001606                     u5161:
  5186  001606  EFB1  F00B         	goto	l4230
  5187  00160A                     u5160:
  5188  00160A  A016               	btfss	___fladd@grs^0,0,c
  5189  00160C  EF0A  F00B         	goto	u5171
  5190  001610  EF0C  F00B         	goto	u5170
  5191  001614                     u5171:
  5192  001614  EF12  F00B         	goto	l4184
  5193  001618                     u5170:
  5194  001618  90D8               	bcf	status,0,c
  5195  00161A  3016               	rrcf	___fladd@grs^0,w,c
  5196  00161C  0901               	iorlw	1
  5197  00161E  6E16               	movwf	___fladd@grs^0,c
  5198  001620  EF14  F00B         	goto	l4186
  5199  001624                     l4184:
  5200  001624  90D8               	bcf	status,0,c
  5201  001626  3216               	rrcf	___fladd@grs^0,f,c
  5202  001628                     l4186:
  5203  001628  A007               	btfss	___fladd@b^0,0,c
  5204  00162A  EF19  F00B         	goto	u5181
  5205  00162E  EF1B  F00B         	goto	u5180
  5206  001632                     u5181:
  5207  001632  EF1C  F00B         	goto	l4190
  5208  001636                     u5180:
  5209  001636  8E16               	bsf	___fladd@grs^0,7,c
  5210  001638                     l4190:
  5211  001638  340A               	rlcf	(___fladd@b+3)^0,w,c
  5212  00163A  320A               	rrcf	(___fladd@b+3)^0,f,c
  5213  00163C  3209               	rrcf	(___fladd@b+2)^0,f,c
  5214  00163E  3208               	rrcf	(___fladd@b+1)^0,f,c
  5215  001640  3207               	rrcf	___fladd@b^0,f,c
  5216  001642  2A15               	incf	___fladd@bexp^0,f,c
  5217  001644  EFB1  F00B         	goto	l4230
  5218  001648                     l4194:
  5219  001648  500B               	movf	___fladd@a^0,w,c
  5220  00164A  5C07               	subwf	___fladd@b^0,w,c
  5221  00164C  500C               	movf	(___fladd@a+1)^0,w,c
  5222  00164E  5808               	subwfb	(___fladd@b+1)^0,w,c
  5223  001650  500D               	movf	(___fladd@a+2)^0,w,c
  5224  001652  5809               	subwfb	(___fladd@b+2)^0,w,c
  5225  001654  500A               	movf	(___fladd@b+3)^0,w,c
  5226  001656  0A80               	xorlw	128
  5227  001658  6E0F               	movwf	??___fladd^0,c
  5228  00165A  500E               	movf	(___fladd@a+3)^0,w,c
  5229  00165C  0A80               	xorlw	128
  5230  00165E  580F               	subwfb	??___fladd^0,w,c
  5231  001660  B0D8               	btfsc	status,0,c
  5232  001662  EF35  F00B         	goto	u5191
  5233  001666  EF37  F00B         	goto	u5190
  5234  00166A                     u5191:
  5235  00166A  EF62  F00B         	goto	l4204
  5236  00166E                     u5190:
  5237  00166E  5007               	movf	___fladd@b^0,w,c
  5238  001670  5C0B               	subwf	___fladd@a^0,w,c
  5239  001672  6E0F               	movwf	??___fladd^0,c
  5240  001674  5008               	movf	(___fladd@b+1)^0,w,c
  5241  001676  580C               	subwfb	(___fladd@a+1)^0,w,c
  5242  001678  6E10               	movwf	(??___fladd+1)^0,c
  5243  00167A  5009               	movf	(___fladd@b+2)^0,w,c
  5244  00167C  580D               	subwfb	(___fladd@a+2)^0,w,c
  5245  00167E  6E11               	movwf	(??___fladd+2)^0,c
  5246  001680  500A               	movf	(___fladd@b+3)^0,w,c
  5247  001682  580E               	subwfb	(___fladd@a+3)^0,w,c
  5248  001684  6E12               	movwf	(??___fladd+3)^0,c
  5249  001686  0EFF               	movlw	255
  5250  001688  240F               	addwf	??___fladd^0,w,c
  5251  00168A  6E07               	movwf	___fladd@b^0,c
  5252  00168C  0EFF               	movlw	255
  5253  00168E  2010               	addwfc	(??___fladd+1)^0,w,c
  5254  001690  6E08               	movwf	(___fladd@b+1)^0,c
  5255  001692  0EFF               	movlw	255
  5256  001694  2011               	addwfc	(??___fladd+2)^0,w,c
  5257  001696  6E09               	movwf	(___fladd@b+2)^0,c
  5258  001698  0EFF               	movlw	255
  5259  00169A  2012               	addwfc	(??___fladd+3)^0,w,c
  5260  00169C  6E0A               	movwf	(___fladd@b+3)^0,c
  5261  00169E  0E80               	movlw	128
  5262  0016A0  1A13               	xorwf	___fladd@signs^0,f,c
  5263  0016A2  6C16               	negf	___fladd@grs^0,c
  5264  0016A4  5016               	movf	___fladd@grs^0,w,c
  5265  0016A6  A4D8               	btfss	status,2,c
  5266  0016A8  EF58  F00B         	goto	u5201
  5267  0016AC  EF5A  F00B         	goto	u5200
  5268  0016B0                     u5201:
  5269  0016B0  EF6A  F00B         	goto	l831
  5270  0016B4                     u5200:
  5271  0016B4  0E01               	movlw	1
  5272  0016B6  2607               	addwf	___fladd@b^0,f,c
  5273  0016B8  0E00               	movlw	0
  5274  0016BA  2208               	addwfc	(___fladd@b+1)^0,f,c
  5275  0016BC  2209               	addwfc	(___fladd@b+2)^0,f,c
  5276  0016BE  220A               	addwfc	(___fladd@b+3)^0,f,c
  5277  0016C0  EF6A  F00B         	goto	l831
  5278  0016C4                     l4204:
  5279  0016C4  500B               	movf	___fladd@a^0,w,c
  5280  0016C6  5E07               	subwf	___fladd@b^0,f,c
  5281  0016C8  500C               	movf	(___fladd@a+1)^0,w,c
  5282  0016CA  5A08               	subwfb	(___fladd@b+1)^0,f,c
  5283  0016CC  500D               	movf	(___fladd@a+2)^0,w,c
  5284  0016CE  5A09               	subwfb	(___fladd@b+2)^0,f,c
  5285  0016D0  500E               	movf	(___fladd@a+3)^0,w,c
  5286  0016D2  5A0A               	subwfb	(___fladd@b+3)^0,f,c
  5287  0016D4                     l831:
  5288  0016D4  5007               	movf	___fladd@b^0,w,c
  5289  0016D6  1008               	iorwf	(___fladd@b+1)^0,w,c
  5290  0016D8  1009               	iorwf	(___fladd@b+2)^0,w,c
  5291  0016DA  100A               	iorwf	(___fladd@b+3)^0,w,c
  5292  0016DC  A4D8               	btfss	status,2,c
  5293  0016DE  EF73  F00B         	goto	u5211
  5294  0016E2  EF75  F00B         	goto	u5210
  5295  0016E6                     u5211:
  5296  0016E6  EFAA  F00B         	goto	l4228
  5297  0016EA                     u5210:
  5298  0016EA  5016               	movf	___fladd@grs^0,w,c
  5299  0016EC  A4D8               	btfss	status,2,c
  5300  0016EE  EF7B  F00B         	goto	u5221
  5301  0016F2  EF7D  F00B         	goto	u5220
  5302  0016F6                     u5221:
  5303  0016F6  EFAA  F00B         	goto	l4228
  5304  0016FA                     u5220:
  5305  0016FA  0E00               	movlw	0
  5306  0016FC  6E07               	movwf	?___fladd^0,c
  5307  0016FE  0E00               	movlw	0
  5308  001700  6E08               	movwf	(?___fladd+1)^0,c
  5309  001702  0E00               	movlw	0
  5310  001704  6E09               	movwf	(?___fladd+2)^0,c
  5311  001706  0E00               	movlw	0
  5312  001708  6E0A               	movwf	(?___fladd+3)^0,c
  5313  00170A  EF45  F00C         	goto	l823
  5314  00170E                     l4212:
  5315  00170E  90D8               	bcf	status,0,c
  5316  001710  3607               	rlcf	___fladd@b^0,f,c
  5317  001712  3608               	rlcf	(___fladd@b+1)^0,f,c
  5318  001714  3609               	rlcf	(___fladd@b+2)^0,f,c
  5319  001716  360A               	rlcf	(___fladd@b+3)^0,f,c
  5320  001718  AE16               	btfss	___fladd@grs^0,7,c
  5321  00171A  EF91  F00B         	goto	u5231
  5322  00171E  EF93  F00B         	goto	u5230
  5323  001722                     u5231:
  5324  001722  EF94  F00B         	goto	l4218
  5325  001726                     u5230:
  5326  001726  8007               	bsf	___fladd@b^0,0,c
  5327  001728                     l4218:
  5328  001728  A016               	btfss	___fladd@grs^0,0,c
  5329  00172A  EF99  F00B         	goto	u5241
  5330  00172E  EF9B  F00B         	goto	u5240
  5331  001732                     u5241:
  5332  001732  EF9F  F00B         	goto	l4222
  5333  001736                     u5240:
  5334  001736  80D8               	bsf	status,0,c
  5335  001738  3616               	rlcf	___fladd@grs^0,f,c
  5336  00173A  EFA1  F00B         	goto	l4224
  5337  00173E                     l4222:
  5338  00173E  90D8               	bcf	status,0,c
  5339  001740  3616               	rlcf	___fladd@grs^0,f,c
  5340  001742                     l4224:
  5341  001742  5015               	movf	___fladd@bexp^0,w,c
  5342  001744  B4D8               	btfsc	status,2,c
  5343  001746  EFA7  F00B         	goto	u5251
  5344  00174A  EFA9  F00B         	goto	u5250
  5345  00174E                     u5251:
  5346  00174E  EFAA  F00B         	goto	l4228
  5347  001752                     u5250:
  5348  001752  0615               	decf	___fladd@bexp^0,f,c
  5349  001754                     l4228:
  5350  001754  AE09               	btfss	(___fladd@b+2)^0,7,c
  5351  001756  EFAF  F00B         	goto	u5261
  5352  00175A  EFB1  F00B         	goto	u5260
  5353  00175E                     u5261:
  5354  00175E  EF87  F00B         	goto	l4212
  5355  001762                     u5260:
  5356  001762                     l4230:
  5357  001762  0E00               	movlw	0
  5358  001764  6E14               	movwf	___fladd@aexp^0,c
  5359  001766  AE16               	btfss	___fladd@grs^0,7,c
  5360  001768  EFB8  F00B         	goto	u5271
  5361  00176C  EFBA  F00B         	goto	u5270
  5362  001770                     u5271:
  5363  001770  EFD2  F00B         	goto	l840
  5364  001774                     u5270:
  5365  001774  C016  F00F         	movff	___fladd@grs,??___fladd
  5366  001778  0E7F               	movlw	127
  5367  00177A  160F               	andwf	??___fladd^0,f,c
  5368  00177C  B4D8               	btfsc	status,2,c
  5369  00177E  EFC3  F00B         	goto	u5281
  5370  001782  EFC5  F00B         	goto	u5280
  5371  001786                     u5281:
  5372  001786  EFC9  F00B         	goto	l841
  5373  00178A                     u5280:
  5374  00178A                     l4236:
  5375  00178A  0E01               	movlw	1
  5376  00178C  6E14               	movwf	___fladd@aexp^0,c
  5377  00178E  EFD2  F00B         	goto	l840
  5378  001792                     l841:
  5379  001792  A007               	btfss	___fladd@b^0,0,c
  5380  001794  EFCE  F00B         	goto	u5291
  5381  001798  EFD0  F00B         	goto	u5290
  5382  00179C                     u5291:
  5383  00179C  EFD2  F00B         	goto	l840
  5384  0017A0                     u5290:
  5385  0017A0  EFC5  F00B         	goto	l4236
  5386  0017A4                     l840:
  5387  0017A4  5014               	movf	___fladd@aexp^0,w,c
  5388  0017A6  B4D8               	btfsc	status,2,c
  5389  0017A8  EFD8  F00B         	goto	u5301
  5390  0017AC  EFDA  F00B         	goto	u5300
  5391  0017B0                     u5301:
  5392  0017B0  EF05  F00C         	goto	l4248
  5393  0017B4                     u5300:
  5394  0017B4  0E01               	movlw	1
  5395  0017B6  2607               	addwf	___fladd@b^0,f,c
  5396  0017B8  0E00               	movlw	0
  5397  0017BA  2208               	addwfc	(___fladd@b+1)^0,f,c
  5398  0017BC  2209               	addwfc	(___fladd@b+2)^0,f,c
  5399  0017BE  220A               	addwfc	(___fladd@b+3)^0,f,c
  5400  0017C0  A00A               	btfss	(___fladd@b+3)^0,0,c
  5401  0017C2  EFE5  F00B         	goto	u5311
  5402  0017C6  EFE7  F00B         	goto	u5310
  5403  0017CA                     u5311:
  5404  0017CA  EF05  F00C         	goto	l4248
  5405  0017CE                     u5310:
  5406  0017CE  C007  F00F         	movff	___fladd@b,??___fladd
  5407  0017D2  C008  F010         	movff	___fladd@b+1,??___fladd+1
  5408  0017D6  C009  F011         	movff	___fladd@b+2,??___fladd+2
  5409  0017DA  C00A  F012         	movff	___fladd@b+3,??___fladd+3
  5410  0017DE  3412               	rlcf	(??___fladd+3)^0,w,c
  5411  0017E0  3212               	rrcf	(??___fladd+3)^0,f,c
  5412  0017E2  3211               	rrcf	(??___fladd+2)^0,f,c
  5413  0017E4  3210               	rrcf	(??___fladd+1)^0,f,c
  5414  0017E6  320F               	rrcf	??___fladd^0,f,c
  5415  0017E8  C00F  F007         	movff	??___fladd,___fladd@b
  5416  0017EC  C010  F008         	movff	??___fladd+1,___fladd@b+1
  5417  0017F0  C011  F009         	movff	??___fladd+2,___fladd@b+2
  5418  0017F4  C012  F00A         	movff	??___fladd+3,___fladd@b+3
  5419  0017F8  2815               	incf	___fladd@bexp^0,w,c
  5420  0017FA  B4D8               	btfsc	status,2,c
  5421  0017FC  EF02  F00C         	goto	u5321
  5422  001800  EF04  F00C         	goto	u5320
  5423  001804                     u5321:
  5424  001804  EF05  F00C         	goto	l4248
  5425  001808                     u5320:
  5426  001808  2A15               	incf	___fladd@bexp^0,f,c
  5427  00180A                     l4248:
  5428  00180A  2815               	incf	___fladd@bexp^0,w,c
  5429  00180C  B4D8               	btfsc	status,2,c
  5430  00180E  EF0B  F00C         	goto	u5331
  5431  001812  EF0D  F00C         	goto	u5330
  5432  001816                     u5331:
  5433  001816  EF15  F00C         	goto	l4252
  5434  00181A                     u5330:
  5435  00181A  5015               	movf	___fladd@bexp^0,w,c
  5436  00181C  A4D8               	btfss	status,2,c
  5437  00181E  EF13  F00C         	goto	u5341
  5438  001822  EF15  F00C         	goto	u5340
  5439  001826                     u5341:
  5440  001826  EF27  F00C         	goto	l4256
  5441  00182A                     u5340:
  5442  00182A                     l4252:
  5443  00182A  0E00               	movlw	0
  5444  00182C  6E07               	movwf	___fladd@b^0,c
  5445  00182E  0E00               	movlw	0
  5446  001830  6E08               	movwf	(___fladd@b+1)^0,c
  5447  001832  0E00               	movlw	0
  5448  001834  6E09               	movwf	(___fladd@b+2)^0,c
  5449  001836  0E00               	movlw	0
  5450  001838  6E0A               	movwf	(___fladd@b+3)^0,c
  5451  00183A  5015               	movf	___fladd@bexp^0,w,c
  5452  00183C  A4D8               	btfss	status,2,c
  5453  00183E  EF23  F00C         	goto	u5351
  5454  001842  EF25  F00C         	goto	u5350
  5455  001846                     u5351:
  5456  001846  EF27  F00C         	goto	l4256
  5457  00184A                     u5350:
  5458  00184A  0E00               	movlw	0
  5459  00184C  6E13               	movwf	___fladd@signs^0,c
  5460  00184E                     l4256:
  5461  00184E  A015               	btfss	___fladd@bexp^0,0,c
  5462  001850  EF2C  F00C         	goto	u5361
  5463  001854  EF2E  F00C         	goto	u5360
  5464  001858                     u5361:
  5465  001858  EF31  F00C         	goto	l4260
  5466  00185C                     u5360:
  5467  00185C  8E09               	bsf	(___fladd@b+2)^0,7,c
  5468  00185E  EF32  F00C         	goto	l4262
  5469  001862                     l4260:
  5470  001862  9E09               	bcf	(___fladd@b+2)^0,7,c
  5471  001864                     l4262:
  5472  001864  90D8               	bcf	status,0,c
  5473  001866  3015               	rrcf	___fladd@bexp^0,w,c
  5474  001868  6E0A               	movwf	(___fladd@b+3)^0,c
  5475  00186A  AE13               	btfss	___fladd@signs^0,7,c
  5476  00186C  EF3A  F00C         	goto	u5371
  5477  001870  EF3C  F00C         	goto	u5370
  5478  001874                     u5371:
  5479  001874  EF3D  F00C         	goto	l4268
  5480  001878                     u5370:
  5481  001878  8E0A               	bsf	(___fladd@b+3)^0,7,c
  5482  00187A                     l4268:
  5483  00187A  C007  F007         	movff	___fladd@b,?___fladd
  5484  00187E  C008  F008         	movff	___fladd@b+1,?___fladd+1
  5485  001882  C009  F009         	movff	___fladd@b+2,?___fladd+2
  5486  001886  C00A  F00A         	movff	___fladd@b+3,?___fladd+3
  5487  00188A                     l823:
  5488  00188A  0012               	return		;funcret
  5489  00188C                     __end_of___fladd:
  5490                           	opt callstack 0
  5491                           
  5492 ;; *************** function ___flneg *****************
  5493 ;; Defined at:
  5494 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;  f1              4    6[COMRAM] unsigned char 
  5497 ;; Auto vars:     Size  Location     Type
  5498 ;;		None
  5499 ;; Return value:  Size  Location     Type
  5500 ;;                  4    6[COMRAM] unsigned char 
  5501 ;; Registers used:
  5502 ;;		wreg, status,2, status,0
  5503 ;; Tracked objects:
  5504 ;;		On entry : 0/0
  5505 ;;		On exit  : 0/0
  5506 ;;		Unchanged: 0/0
  5507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5508 ;;      Params:         4       0       0       0       0       0       0       0       0
  5509 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5510 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5511 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5512 ;;Total ram usage:        4 bytes
  5513 ;; Hardware stack levels used:    1
  5514 ;; Hardware stack levels required when called:    2
  5515 ;; This function calls:
  5516 ;;		Nothing
  5517 ;; This function is called by:
  5518 ;;		_efgtoa
  5519 ;; This function uses a non-reentrant model
  5520 ;;
  5521                           
  5522                           	psect	text19
  5523  0035EA                     __ptext19:
  5524                           	opt callstack 0
  5525  0035EA                     ___flneg:
  5526                           	opt callstack 24
  5527  0035EA  5007               	movf	___flneg@f1^0,w,c
  5528  0035EC  1008               	iorwf	(___flneg@f1+1)^0,w,c
  5529  0035EE  1009               	iorwf	(___flneg@f1+2)^0,w,c
  5530  0035F0  100A               	iorwf	(___flneg@f1+3)^0,w,c
  5531  0035F2  B4D8               	btfsc	status,2,c
  5532  0035F4  EFFE  F01A         	goto	u6281
  5533  0035F8  EF00  F01B         	goto	u6280
  5534  0035FC                     u6281:
  5535  0035FC  EF08  F01B         	goto	l4764
  5536  003600                     u6280:
  5537  003600  0E00               	movlw	0
  5538  003602  1A07               	xorwf	___flneg@f1^0,f,c
  5539  003604  0E00               	movlw	0
  5540  003606  1A08               	xorwf	(___flneg@f1+1)^0,f,c
  5541  003608  0E00               	movlw	0
  5542  00360A  1A09               	xorwf	(___flneg@f1+2)^0,f,c
  5543  00360C  0E80               	movlw	128
  5544  00360E  1A0A               	xorwf	(___flneg@f1+3)^0,f,c
  5545  003610                     l4764:
  5546  003610  C007  F007         	movff	___flneg@f1,?___flneg
  5547  003614  C008  F008         	movff	___flneg@f1+1,?___flneg+1
  5548  003618  C009  F009         	movff	___flneg@f1+2,?___flneg+2
  5549  00361C  C00A  F00A         	movff	___flneg@f1+3,?___flneg+3
  5550  003620  0012               	return		;funcret
  5551  003622                     __end_of___flneg:
  5552                           	opt callstack 0
  5553                           
  5554 ;; *************** function ___flmul *****************
  5555 ;; Defined at:
  5556 ;;		line 8 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;  b               4    6[COMRAM] unsigned char 
  5559 ;;  a               4   10[COMRAM] unsigned char 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;  prod            4   25[COMRAM] struct .
  5562 ;;  grs             4   20[COMRAM] unsigned long 
  5563 ;;  temp            2   29[COMRAM] struct .
  5564 ;;  bexp            1   24[COMRAM] unsigned char 
  5565 ;;  aexp            1   19[COMRAM] unsigned char 
  5566 ;;  sign            1   18[COMRAM] unsigned char 
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  4    6[COMRAM] unsigned char 
  5569 ;; Registers used:
  5570 ;;		wreg, status,2, status,0, prodl, prodh
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5576 ;;      Params:         8       0       0       0       0       0       0       0       0
  5577 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5578 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5579 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5580 ;;Total ram usage:       25 bytes
  5581 ;; Hardware stack levels used:    1
  5582 ;; Hardware stack levels required when called:    2
  5583 ;; This function calls:
  5584 ;;		Nothing
  5585 ;; This function is called by:
  5586 ;;		_efgtoa
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text20
  5591  001CF4                     __ptext20:
  5592                           	opt callstack 0
  5593  001CF4                     ___flmul:
  5594                           	opt callstack 24
  5595  001CF4  500A               	movf	(___flmul@b+3)^0,w,c
  5596  001CF6  0B80               	andlw	128
  5597  001CF8  6E13               	movwf	___flmul@sign^0,c
  5598  001CFA  500A               	movf	(___flmul@b+3)^0,w,c
  5599  001CFC  240A               	addwf	(___flmul@b+3)^0,w,c
  5600  001CFE  6E19               	movwf	___flmul@bexp^0,c
  5601  001D00  AE09               	btfss	(___flmul@b+2)^0,7,c
  5602  001D02  EF85  F00E         	goto	u5891
  5603  001D06  EF87  F00E         	goto	u5890
  5604  001D0A                     u5891:
  5605  001D0A  EF88  F00E         	goto	l4512
  5606  001D0E                     u5890:
  5607  001D0E  8019               	bsf	___flmul@bexp^0,0,c
  5608  001D10                     l4512:
  5609  001D10  5019               	movf	___flmul@bexp^0,w,c
  5610  001D12  B4D8               	btfsc	status,2,c
  5611  001D14  EF8E  F00E         	goto	u5901
  5612  001D18  EF90  F00E         	goto	u5900
  5613  001D1C                     u5901:
  5614  001D1C  EFA3  F00E         	goto	l4520
  5615  001D20                     u5900:
  5616  001D20  2819               	incf	___flmul@bexp^0,w,c
  5617  001D22  A4D8               	btfss	status,2,c
  5618  001D24  EF96  F00E         	goto	u5911
  5619  001D28  EF98  F00E         	goto	u5910
  5620  001D2C                     u5911:
  5621  001D2C  EFA0  F00E         	goto	l4518
  5622  001D30                     u5910:
  5623  001D30  0E00               	movlw	0
  5624  001D32  6E07               	movwf	___flmul@b^0,c
  5625  001D34  0E00               	movlw	0
  5626  001D36  6E08               	movwf	(___flmul@b+1)^0,c
  5627  001D38  0E00               	movlw	0
  5628  001D3A  6E09               	movwf	(___flmul@b+2)^0,c
  5629  001D3C  0E00               	movlw	0
  5630  001D3E  6E0A               	movwf	(___flmul@b+3)^0,c
  5631  001D40                     l4518:
  5632  001D40  8E09               	bsf	(___flmul@b+2)^0,7,c
  5633  001D42  EFAB  F00E         	goto	l4522
  5634  001D46                     l4520:
  5635  001D46  0E00               	movlw	0
  5636  001D48  6E07               	movwf	___flmul@b^0,c
  5637  001D4A  0E00               	movlw	0
  5638  001D4C  6E08               	movwf	(___flmul@b+1)^0,c
  5639  001D4E  0E00               	movlw	0
  5640  001D50  6E09               	movwf	(___flmul@b+2)^0,c
  5641  001D52  0E00               	movlw	0
  5642  001D54  6E0A               	movwf	(___flmul@b+3)^0,c
  5643  001D56                     l4522:
  5644  001D56  500E               	movf	(___flmul@a+3)^0,w,c
  5645  001D58  0B80               	andlw	128
  5646  001D5A  1A13               	xorwf	___flmul@sign^0,f,c
  5647  001D5C  500E               	movf	(___flmul@a+3)^0,w,c
  5648  001D5E  240E               	addwf	(___flmul@a+3)^0,w,c
  5649  001D60  6E14               	movwf	___flmul@aexp^0,c
  5650  001D62  AE0D               	btfss	(___flmul@a+2)^0,7,c
  5651  001D64  EFB6  F00E         	goto	u5921
  5652  001D68  EFB8  F00E         	goto	u5920
  5653  001D6C                     u5921:
  5654  001D6C  EFB9  F00E         	goto	l4530
  5655  001D70                     u5920:
  5656  001D70  8014               	bsf	___flmul@aexp^0,0,c
  5657  001D72                     l4530:
  5658  001D72  5014               	movf	___flmul@aexp^0,w,c
  5659  001D74  B4D8               	btfsc	status,2,c
  5660  001D76  EFBF  F00E         	goto	u5931
  5661  001D7A  EFC1  F00E         	goto	u5930
  5662  001D7E                     u5931:
  5663  001D7E  EFD4  F00E         	goto	l4538
  5664  001D82                     u5930:
  5665  001D82  2814               	incf	___flmul@aexp^0,w,c
  5666  001D84  A4D8               	btfss	status,2,c
  5667  001D86  EFC7  F00E         	goto	u5941
  5668  001D8A  EFC9  F00E         	goto	u5940
  5669  001D8E                     u5941:
  5670  001D8E  EFD1  F00E         	goto	l4536
  5671  001D92                     u5940:
  5672  001D92  0E00               	movlw	0
  5673  001D94  6E0B               	movwf	___flmul@a^0,c
  5674  001D96  0E00               	movlw	0
  5675  001D98  6E0C               	movwf	(___flmul@a+1)^0,c
  5676  001D9A  0E00               	movlw	0
  5677  001D9C  6E0D               	movwf	(___flmul@a+2)^0,c
  5678  001D9E  0E00               	movlw	0
  5679  001DA0  6E0E               	movwf	(___flmul@a+3)^0,c
  5680  001DA2                     l4536:
  5681  001DA2  8E0D               	bsf	(___flmul@a+2)^0,7,c
  5682  001DA4  EFDC  F00E         	goto	l900
  5683  001DA8                     l4538:
  5684  001DA8  0E00               	movlw	0
  5685  001DAA  6E0B               	movwf	___flmul@a^0,c
  5686  001DAC  0E00               	movlw	0
  5687  001DAE  6E0C               	movwf	(___flmul@a+1)^0,c
  5688  001DB0  0E00               	movlw	0
  5689  001DB2  6E0D               	movwf	(___flmul@a+2)^0,c
  5690  001DB4  0E00               	movlw	0
  5691  001DB6  6E0E               	movwf	(___flmul@a+3)^0,c
  5692  001DB8                     l900:
  5693  001DB8  5014               	movf	___flmul@aexp^0,w,c
  5694  001DBA  B4D8               	btfsc	status,2,c
  5695  001DBC  EFE2  F00E         	goto	u5951
  5696  001DC0  EFE4  F00E         	goto	u5950
  5697  001DC4                     u5951:
  5698  001DC4  EFEC  F00E         	goto	l4542
  5699  001DC8                     u5950:
  5700  001DC8  5019               	movf	___flmul@bexp^0,w,c
  5701  001DCA  A4D8               	btfss	status,2,c
  5702  001DCC  EFEA  F00E         	goto	u5961
  5703  001DD0  EFEC  F00E         	goto	u5960
  5704  001DD4                     u5961:
  5705  001DD4  EFF6  F00E         	goto	l4546
  5706  001DD8                     u5960:
  5707  001DD8                     l4542:
  5708  001DD8  0E00               	movlw	0
  5709  001DDA  6E07               	movwf	?___flmul^0,c
  5710  001DDC  0E00               	movlw	0
  5711  001DDE  6E08               	movwf	(?___flmul+1)^0,c
  5712  001DE0  0E00               	movlw	0
  5713  001DE2  6E09               	movwf	(?___flmul+2)^0,c
  5714  001DE4  0E00               	movlw	0
  5715  001DE6  6E0A               	movwf	(?___flmul+3)^0,c
  5716  001DE8  EF8E  F010         	goto	l904
  5717  001DEC                     l4546:
  5718  001DEC  500D               	movf	(___flmul@a+2)^0,w,c
  5719  001DEE  0207               	mulwf	___flmul@b^0,c
  5720  001DF0  CFF3 F01E          	movff	prodl,___flmul@temp
  5721  001DF4  CFF4 F01F          	movff	prodh,___flmul@temp+1
  5722  001DF8  501E               	movf	___flmul@temp^0,w,c
  5723  001DFA  6E15               	movwf	___flmul@grs^0,c
  5724  001DFC  6A16               	clrf	(___flmul@grs+1)^0,c
  5725  001DFE  6A17               	clrf	(___flmul@grs+2)^0,c
  5726  001E00  6A18               	clrf	(___flmul@grs+3)^0,c
  5727  001E02  501F               	movf	(___flmul@temp+1)^0,w,c
  5728  001E04  6E1A               	movwf	___flmul@prod^0,c
  5729  001E06  6A1B               	clrf	(___flmul@prod+1)^0,c
  5730  001E08  6A1C               	clrf	(___flmul@prod+2)^0,c
  5731  001E0A  6A1D               	clrf	(___flmul@prod+3)^0,c
  5732  001E0C  500C               	movf	(___flmul@a+1)^0,w,c
  5733  001E0E  0208               	mulwf	(___flmul@b+1)^0,c
  5734  001E10  CFF3 F01E          	movff	prodl,___flmul@temp
  5735  001E14  CFF4 F01F          	movff	prodh,___flmul@temp+1
  5736  001E18  501E               	movf	___flmul@temp^0,w,c
  5737  001E1A  2615               	addwf	___flmul@grs^0,f,c
  5738  001E1C  0E00               	movlw	0
  5739  001E1E  2216               	addwfc	(___flmul@grs+1)^0,f,c
  5740  001E20  2217               	addwfc	(___flmul@grs+2)^0,f,c
  5741  001E22  2218               	addwfc	(___flmul@grs+3)^0,f,c
  5742  001E24  501F               	movf	(___flmul@temp+1)^0,w,c
  5743  001E26  261A               	addwf	___flmul@prod^0,f,c
  5744  001E28  0E00               	movlw	0
  5745  001E2A  221B               	addwfc	(___flmul@prod+1)^0,f,c
  5746  001E2C  221C               	addwfc	(___flmul@prod+2)^0,f,c
  5747  001E2E  221D               	addwfc	(___flmul@prod+3)^0,f,c
  5748  001E30  500B               	movf	___flmul@a^0,w,c
  5749  001E32  0209               	mulwf	(___flmul@b+2)^0,c
  5750  001E34  CFF3 F01E          	movff	prodl,___flmul@temp
  5751  001E38  CFF4 F01F          	movff	prodh,___flmul@temp+1
  5752  001E3C  501E               	movf	___flmul@temp^0,w,c
  5753  001E3E  2615               	addwf	___flmul@grs^0,f,c
  5754  001E40  0E00               	movlw	0
  5755  001E42  2216               	addwfc	(___flmul@grs+1)^0,f,c
  5756  001E44  2217               	addwfc	(___flmul@grs+2)^0,f,c
  5757  001E46  2218               	addwfc	(___flmul@grs+3)^0,f,c
  5758  001E48  501F               	movf	(___flmul@temp+1)^0,w,c
  5759  001E4A  261A               	addwf	___flmul@prod^0,f,c
  5760  001E4C  0E00               	movlw	0
  5761  001E4E  221B               	addwfc	(___flmul@prod+1)^0,f,c
  5762  001E50  221C               	addwfc	(___flmul@prod+2)^0,f,c
  5763  001E52  221D               	addwfc	(___flmul@prod+3)^0,f,c
  5764  001E54  C017  F018         	movff	___flmul@grs+2,___flmul@grs+3
  5765  001E58  C016  F017         	movff	___flmul@grs+1,___flmul@grs+2
  5766  001E5C  C015  F016         	movff	___flmul@grs,___flmul@grs+1
  5767  001E60  6A15               	clrf	___flmul@grs^0,c
  5768  001E62  500B               	movf	___flmul@a^0,w,c
  5769  001E64  0208               	mulwf	(___flmul@b+1)^0,c
  5770  001E66  CFF3 F01E          	movff	prodl,___flmul@temp
  5771  001E6A  CFF4 F01F          	movff	prodh,___flmul@temp+1
  5772  001E6E  501E               	movf	___flmul@temp^0,w,c
  5773  001E70  2615               	addwf	___flmul@grs^0,f,c
  5774  001E72  501F               	movf	(___flmul@temp+1)^0,w,c
  5775  001E74  2216               	addwfc	(___flmul@grs+1)^0,f,c
  5776  001E76  0E00               	movlw	0
  5777  001E78  2217               	addwfc	(___flmul@grs+2)^0,f,c
  5778  001E7A  0E00               	movlw	0
  5779  001E7C  2218               	addwfc	(___flmul@grs+3)^0,f,c
  5780  001E7E  500C               	movf	(___flmul@a+1)^0,w,c
  5781  001E80  0207               	mulwf	___flmul@b^0,c
  5782  001E82  CFF3 F01E          	movff	prodl,___flmul@temp
  5783  001E86  CFF4 F01F          	movff	prodh,___flmul@temp+1
  5784  001E8A  501E               	movf	___flmul@temp^0,w,c
  5785  001E8C  2615               	addwf	___flmul@grs^0,f,c
  5786  001E8E  501F               	movf	(___flmul@temp+1)^0,w,c
  5787  001E90  2216               	addwfc	(___flmul@grs+1)^0,f,c
  5788  001E92  0E00               	movlw	0
  5789  001E94  2217               	addwfc	(___flmul@grs+2)^0,f,c
  5790  001E96  0E00               	movlw	0
  5791  001E98  2218               	addwfc	(___flmul@grs+3)^0,f,c
  5792  001E9A  C017  F018         	movff	___flmul@grs+2,___flmul@grs+3
  5793  001E9E  C016  F017         	movff	___flmul@grs+1,___flmul@grs+2
  5794  001EA2  C015  F016         	movff	___flmul@grs,___flmul@grs+1
  5795  001EA6  6A15               	clrf	___flmul@grs^0,c
  5796  001EA8  500B               	movf	___flmul@a^0,w,c
  5797  001EAA  0207               	mulwf	___flmul@b^0,c
  5798  001EAC  CFF3 F01E          	movff	prodl,___flmul@temp
  5799  001EB0  CFF4 F01F          	movff	prodh,___flmul@temp+1
  5800  001EB4  501E               	movf	___flmul@temp^0,w,c
  5801  001EB6  2615               	addwf	___flmul@grs^0,f,c
  5802  001EB8  501F               	movf	(___flmul@temp+1)^0,w,c
  5803  001EBA  2216               	addwfc	(___flmul@grs+1)^0,f,c
  5804  001EBC  0E00               	movlw	0
  5805  001EBE  2217               	addwfc	(___flmul@grs+2)^0,f,c
  5806  001EC0  0E00               	movlw	0
  5807  001EC2  2218               	addwfc	(___flmul@grs+3)^0,f,c
  5808  001EC4  500D               	movf	(___flmul@a+2)^0,w,c
  5809  001EC6  0208               	mulwf	(___flmul@b+1)^0,c
  5810  001EC8  CFF3 F01E          	movff	prodl,___flmul@temp
  5811  001ECC  CFF4 F01F          	movff	prodh,___flmul@temp+1
  5812  001ED0  501E               	movf	___flmul@temp^0,w,c
  5813  001ED2  261A               	addwf	___flmul@prod^0,f,c
  5814  001ED4  501F               	movf	(___flmul@temp+1)^0,w,c
  5815  001ED6  221B               	addwfc	(___flmul@prod+1)^0,f,c
  5816  001ED8  0E00               	movlw	0
  5817  001EDA  221C               	addwfc	(___flmul@prod+2)^0,f,c
  5818  001EDC  0E00               	movlw	0
  5819  001EDE  221D               	addwfc	(___flmul@prod+3)^0,f,c
  5820  001EE0  500C               	movf	(___flmul@a+1)^0,w,c
  5821  001EE2  0209               	mulwf	(___flmul@b+2)^0,c
  5822  001EE4  CFF3 F01E          	movff	prodl,___flmul@temp
  5823  001EE8  CFF4 F01F          	movff	prodh,___flmul@temp+1
  5824  001EEC  501E               	movf	___flmul@temp^0,w,c
  5825  001EEE  261A               	addwf	___flmul@prod^0,f,c
  5826  001EF0  501F               	movf	(___flmul@temp+1)^0,w,c
  5827  001EF2  221B               	addwfc	(___flmul@prod+1)^0,f,c
  5828  001EF4  0E00               	movlw	0
  5829  001EF6  221C               	addwfc	(___flmul@prod+2)^0,f,c
  5830  001EF8  0E00               	movlw	0
  5831  001EFA  221D               	addwfc	(___flmul@prod+3)^0,f,c
  5832  001EFC  500D               	movf	(___flmul@a+2)^0,w,c
  5833  001EFE  0209               	mulwf	(___flmul@b+2)^0,c
  5834  001F00  CFF3 F01E          	movff	prodl,___flmul@temp
  5835  001F04  CFF4 F01F          	movff	prodh,___flmul@temp+1
  5836  001F08  501E               	movf	___flmul@temp^0,w,c
  5837  001F0A  6E0F               	movwf	??___flmul^0,c
  5838  001F0C  501F               	movf	(___flmul@temp+1)^0,w,c
  5839  001F0E  6E10               	movwf	(??___flmul+1)^0,c
  5840  001F10  6A11               	clrf	(??___flmul+2)^0,c
  5841  001F12  6A12               	clrf	(??___flmul+3)^0,c
  5842  001F14  C011  F012         	movff	??___flmul+2,??___flmul+3
  5843  001F18  C010  F011         	movff	??___flmul+1,??___flmul+2
  5844  001F1C  C00F  F010         	movff	??___flmul,??___flmul+1
  5845  001F20  6A0F               	clrf	??___flmul^0,c
  5846  001F22  500F               	movf	??___flmul^0,w,c
  5847  001F24  261A               	addwf	___flmul@prod^0,f,c
  5848  001F26  5010               	movf	(??___flmul+1)^0,w,c
  5849  001F28  221B               	addwfc	(___flmul@prod+1)^0,f,c
  5850  001F2A  5011               	movf	(??___flmul+2)^0,w,c
  5851  001F2C  221C               	addwfc	(___flmul@prod+2)^0,f,c
  5852  001F2E  5012               	movf	(??___flmul+3)^0,w,c
  5853  001F30  221D               	addwfc	(___flmul@prod+3)^0,f,c
  5854  001F32  C015  F00F         	movff	___flmul@grs,??___flmul
  5855  001F36  C016  F010         	movff	___flmul@grs+1,??___flmul+1
  5856  001F3A  C017  F011         	movff	___flmul@grs+2,??___flmul+2
  5857  001F3E  C018  F012         	movff	___flmul@grs+3,??___flmul+3
  5858  001F42  0E19               	movlw	25
  5859  001F44  EFA9  F00F         	goto	u5970
  5860  001F48                     u5975:
  5861  001F48  90D8               	bcf	status,0,c
  5862  001F4A  3212               	rrcf	(??___flmul+3)^0,f,c
  5863  001F4C  3211               	rrcf	(??___flmul+2)^0,f,c
  5864  001F4E  3210               	rrcf	(??___flmul+1)^0,f,c
  5865  001F50  320F               	rrcf	??___flmul^0,f,c
  5866  001F52                     u5970:
  5867  001F52  2EE8               	decfsz	wreg,f,c
  5868  001F54  EFA4  F00F         	goto	u5975
  5869  001F58  500F               	movf	??___flmul^0,w,c
  5870  001F5A  261A               	addwf	___flmul@prod^0,f,c
  5871  001F5C  5010               	movf	(??___flmul+1)^0,w,c
  5872  001F5E  221B               	addwfc	(___flmul@prod+1)^0,f,c
  5873  001F60  5011               	movf	(??___flmul+2)^0,w,c
  5874  001F62  221C               	addwfc	(___flmul@prod+2)^0,f,c
  5875  001F64  5012               	movf	(??___flmul+3)^0,w,c
  5876  001F66  221D               	addwfc	(___flmul@prod+3)^0,f,c
  5877  001F68  C017  F018         	movff	___flmul@grs+2,___flmul@grs+3
  5878  001F6C  C016  F017         	movff	___flmul@grs+1,___flmul@grs+2
  5879  001F70  C015  F016         	movff	___flmul@grs,___flmul@grs+1
  5880  001F74  6A15               	clrf	___flmul@grs^0,c
  5881  001F76  5014               	movf	___flmul@aexp^0,w,c
  5882  001F78  C019  F00F         	movff	___flmul@bexp,??___flmul
  5883  001F7C  6A10               	clrf	(??___flmul+1)^0,c
  5884  001F7E  260F               	addwf	??___flmul^0,f,c
  5885  001F80  0E00               	movlw	0
  5886  001F82  2210               	addwfc	(??___flmul+1)^0,f,c
  5887  001F84  0E82               	movlw	130
  5888  001F86  240F               	addwf	??___flmul^0,w,c
  5889  001F88  6E1E               	movwf	___flmul@temp^0,c
  5890  001F8A  0EFF               	movlw	255
  5891  001F8C  2010               	addwfc	(??___flmul+1)^0,w,c
  5892  001F8E  6E1F               	movwf	(___flmul@temp+1)^0,c
  5893  001F90  EFDF  F00F         	goto	l4594
  5894  001F94                     l4588:
  5895  001F94  90D8               	bcf	status,0,c
  5896  001F96  361A               	rlcf	___flmul@prod^0,f,c
  5897  001F98  361B               	rlcf	(___flmul@prod+1)^0,f,c
  5898  001F9A  361C               	rlcf	(___flmul@prod+2)^0,f,c
  5899  001F9C  361D               	rlcf	(___flmul@prod+3)^0,f,c
  5900  001F9E  AE18               	btfss	(___flmul@grs+3)^0,7,c
  5901  001FA0  EFD4  F00F         	goto	u5981
  5902  001FA4  EFD6  F00F         	goto	u5980
  5903  001FA8                     u5981:
  5904  001FA8  EFD7  F00F         	goto	l907
  5905  001FAC                     u5980:
  5906  001FAC  801A               	bsf	___flmul@prod^0,0,c
  5907  001FAE                     l907:
  5908  001FAE  90D8               	bcf	status,0,c
  5909  001FB0  3615               	rlcf	___flmul@grs^0,f,c
  5910  001FB2  3616               	rlcf	(___flmul@grs+1)^0,f,c
  5911  001FB4  3617               	rlcf	(___flmul@grs+2)^0,f,c
  5912  001FB6  3618               	rlcf	(___flmul@grs+3)^0,f,c
  5913  001FB8  061E               	decf	___flmul@temp^0,f,c
  5914  001FBA  A0D8               	btfss	status,0,c
  5915  001FBC  061F               	decf	(___flmul@temp+1)^0,f,c
  5916  001FBE                     l4594:
  5917  001FBE  AE1C               	btfss	(___flmul@prod+2)^0,7,c
  5918  001FC0  EFE4  F00F         	goto	u5991
  5919  001FC4  EFE6  F00F         	goto	u5990
  5920  001FC8                     u5991:
  5921  001FC8  EFCA  F00F         	goto	l4588
  5922  001FCC                     u5990:
  5923  001FCC  0E00               	movlw	0
  5924  001FCE  6E14               	movwf	___flmul@aexp^0,c
  5925  001FD0  AE18               	btfss	(___flmul@grs+3)^0,7,c
  5926  001FD2  EFED  F00F         	goto	u6001
  5927  001FD6  EFEF  F00F         	goto	u6000
  5928  001FDA                     u6001:
  5929  001FDA  EF13  F010         	goto	l909
  5930  001FDE                     u6000:
  5931  001FDE  0EFF               	movlw	255
  5932  001FE0  1415               	andwf	___flmul@grs^0,w,c
  5933  001FE2  6E0F               	movwf	??___flmul^0,c
  5934  001FE4  0EFF               	movlw	255
  5935  001FE6  1416               	andwf	(___flmul@grs+1)^0,w,c
  5936  001FE8  6E10               	movwf	(??___flmul+1)^0,c
  5937  001FEA  0EFF               	movlw	255
  5938  001FEC  1417               	andwf	(___flmul@grs+2)^0,w,c
  5939  001FEE  6E11               	movwf	(??___flmul+2)^0,c
  5940  001FF0  0E7F               	movlw	127
  5941  001FF2  1418               	andwf	(___flmul@grs+3)^0,w,c
  5942  001FF4  6E12               	movwf	(??___flmul+3)^0,c
  5943  001FF6  500F               	movf	??___flmul^0,w,c
  5944  001FF8  1010               	iorwf	(??___flmul+1)^0,w,c
  5945  001FFA  1011               	iorwf	(??___flmul+2)^0,w,c
  5946  001FFC  1012               	iorwf	(??___flmul+3)^0,w,c
  5947  001FFE  B4D8               	btfsc	status,2,c
  5948  002000  EF04  F010         	goto	u6011
  5949  002004  EF06  F010         	goto	u6010
  5950  002008                     u6011:
  5951  002008  EF0A  F010         	goto	l910
  5952  00200C                     u6010:
  5953  00200C                     l4602:
  5954  00200C  0E01               	movlw	1
  5955  00200E  6E14               	movwf	___flmul@aexp^0,c
  5956  002010  EF13  F010         	goto	l909
  5957  002014                     l910:
  5958  002014  A01A               	btfss	___flmul@prod^0,0,c
  5959  002016  EF0F  F010         	goto	u6021
  5960  00201A  EF11  F010         	goto	u6020
  5961  00201E                     u6021:
  5962  00201E  EF13  F010         	goto	l909
  5963  002022                     u6020:
  5964  002022  EF06  F010         	goto	l4602
  5965  002026                     l909:
  5966  002026  5014               	movf	___flmul@aexp^0,w,c
  5967  002028  B4D8               	btfsc	status,2,c
  5968  00202A  EF19  F010         	goto	u6031
  5969  00202E  EF1B  F010         	goto	u6030
  5970  002032                     u6031:
  5971  002032  EF3F  F010         	goto	l4614
  5972  002036                     u6030:
  5973  002036  0E01               	movlw	1
  5974  002038  261A               	addwf	___flmul@prod^0,f,c
  5975  00203A  0E00               	movlw	0
  5976  00203C  221B               	addwfc	(___flmul@prod+1)^0,f,c
  5977  00203E  221C               	addwfc	(___flmul@prod+2)^0,f,c
  5978  002040  221D               	addwfc	(___flmul@prod+3)^0,f,c
  5979  002042  A01D               	btfss	(___flmul@prod+3)^0,0,c
  5980  002044  EF26  F010         	goto	u6041
  5981  002048  EF28  F010         	goto	u6040
  5982  00204C                     u6041:
  5983  00204C  EF3F  F010         	goto	l4614
  5984  002050                     u6040:
  5985  002050  C01A  F00F         	movff	___flmul@prod,??___flmul
  5986  002054  C01B  F010         	movff	___flmul@prod+1,??___flmul+1
  5987  002058  C01C  F011         	movff	___flmul@prod+2,??___flmul+2
  5988  00205C  C01D  F012         	movff	___flmul@prod+3,??___flmul+3
  5989  002060  3412               	rlcf	(??___flmul+3)^0,w,c
  5990  002062  3212               	rrcf	(??___flmul+3)^0,f,c
  5991  002064  3211               	rrcf	(??___flmul+2)^0,f,c
  5992  002066  3210               	rrcf	(??___flmul+1)^0,f,c
  5993  002068  320F               	rrcf	??___flmul^0,f,c
  5994  00206A  C00F  F01A         	movff	??___flmul,___flmul@prod
  5995  00206E  C010  F01B         	movff	??___flmul+1,___flmul@prod+1
  5996  002072  C011  F01C         	movff	??___flmul+2,___flmul@prod+2
  5997  002076  C012  F01D         	movff	??___flmul+3,___flmul@prod+3
  5998  00207A  4A1E               	infsnz	___flmul@temp^0,f,c
  5999  00207C  2A1F               	incf	(___flmul@temp+1)^0,f,c
  6000  00207E                     l4614:
  6001  00207E  BE1F               	btfsc	(___flmul@temp+1)^0,7,c
  6002  002080  EF4A  F010         	goto	u6051
  6003  002084  501F               	movf	(___flmul@temp+1)^0,w,c
  6004  002086  E108               	bnz	u6050
  6005  002088  281E               	incf	___flmul@temp^0,w,c
  6006  00208A  A0D8               	btfss	status,0,c
  6007  00208C  EF4A  F010         	goto	u6051
  6008  002090  EF4C  F010         	goto	u6050
  6009  002094                     u6051:
  6010  002094  EF56  F010         	goto	l4618
  6011  002098                     u6050:
  6012  002098  0E00               	movlw	0
  6013  00209A  6E1A               	movwf	___flmul@prod^0,c
  6014  00209C  0E00               	movlw	0
  6015  00209E  6E1B               	movwf	(___flmul@prod+1)^0,c
  6016  0020A0  0E80               	movlw	128
  6017  0020A2  6E1C               	movwf	(___flmul@prod+2)^0,c
  6018  0020A4  0E7F               	movlw	127
  6019  0020A6  6E1D               	movwf	(___flmul@prod+3)^0,c
  6020  0020A8  EF84  F010         	goto	l4630
  6021  0020AC                     l4618:
  6022  0020AC  BE1F               	btfsc	(___flmul@temp+1)^0,7,c
  6023  0020AE  EF63  F010         	goto	u6060
  6024  0020B2  501F               	movf	(___flmul@temp+1)^0,w,c
  6025  0020B4  E106               	bnz	u6061
  6026  0020B6  041E               	decf	___flmul@temp^0,w,c
  6027  0020B8  B0D8               	btfsc	status,0,c
  6028  0020BA  EF61  F010         	goto	u6061
  6029  0020BE  EF63  F010         	goto	u6060
  6030  0020C2                     u6061:
  6031  0020C2  EF6F  F010         	goto	l917
  6032  0020C6                     u6060:
  6033  0020C6  0E00               	movlw	0
  6034  0020C8  6E1A               	movwf	___flmul@prod^0,c
  6035  0020CA  0E00               	movlw	0
  6036  0020CC  6E1B               	movwf	(___flmul@prod+1)^0,c
  6037  0020CE  0E00               	movlw	0
  6038  0020D0  6E1C               	movwf	(___flmul@prod+2)^0,c
  6039  0020D2  0E00               	movlw	0
  6040  0020D4  6E1D               	movwf	(___flmul@prod+3)^0,c
  6041  0020D6  0E00               	movlw	0
  6042  0020D8  6E13               	movwf	___flmul@sign^0,c
  6043  0020DA  EF84  F010         	goto	l4630
  6044  0020DE                     l917:
  6045  0020DE  C01E  F019         	movff	___flmul@temp,___flmul@bexp
  6046  0020E2  0EFF               	movlw	255
  6047  0020E4  161A               	andwf	___flmul@prod^0,f,c
  6048  0020E6  0EFF               	movlw	255
  6049  0020E8  161B               	andwf	(___flmul@prod+1)^0,f,c
  6050  0020EA  0E7F               	movlw	127
  6051  0020EC  161C               	andwf	(___flmul@prod+2)^0,f,c
  6052  0020EE  0E00               	movlw	0
  6053  0020F0  161D               	andwf	(___flmul@prod+3)^0,f,c
  6054  0020F2  A019               	btfss	___flmul@bexp^0,0,c
  6055  0020F4  EF7E  F010         	goto	u6071
  6056  0020F8  EF80  F010         	goto	u6070
  6057  0020FC                     u6071:
  6058  0020FC  EF81  F010         	goto	l4628
  6059  002100                     u6070:
  6060  002100  8E1C               	bsf	(___flmul@prod+2)^0,7,c
  6061  002102                     l4628:
  6062  002102  90D8               	bcf	status,0,c
  6063  002104  3019               	rrcf	___flmul@bexp^0,w,c
  6064  002106  6E1D               	movwf	(___flmul@prod+3)^0,c
  6065  002108                     l4630:
  6066  002108  5013               	movf	___flmul@sign^0,w,c
  6067  00210A  121D               	iorwf	(___flmul@prod+3)^0,f,c
  6068  00210C  C01A  F007         	movff	___flmul@prod,?___flmul
  6069  002110  C01B  F008         	movff	___flmul@prod+1,?___flmul+1
  6070  002114  C01C  F009         	movff	___flmul@prod+2,?___flmul+2
  6071  002118  C01D  F00A         	movff	___flmul@prod+3,?___flmul+3
  6072  00211C                     l904:
  6073  00211C  0012               	return		;funcret
  6074  00211E                     __end_of___flmul:
  6075                           	opt callstack 0
  6076                           
  6077 ;; *************** function ___flge *****************
  6078 ;; Defined at:
  6079 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;  ff1             4   31[COMRAM] unsigned char 
  6082 ;;  ff2             4   35[COMRAM] unsigned char 
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;		None
  6085 ;; Return value:  Size  Location     Type
  6086 ;;		None               void
  6087 ;; Registers used:
  6088 ;;		wreg, status,2, status,0
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6094 ;;      Params:         8       0       0       0       0       0       0       0       0
  6095 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6096 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6097 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6098 ;;Total ram usage:       12 bytes
  6099 ;; Hardware stack levels used:    1
  6100 ;; Hardware stack levels required when called:    2
  6101 ;; This function calls:
  6102 ;;		Nothing
  6103 ;; This function is called by:
  6104 ;;		_efgtoa
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text21
  6109  002B14                     __ptext21:
  6110                           	opt callstack 0
  6111  002B14                     ___flge:
  6112                           	opt callstack 24
  6113  002B14  0E00               	movlw	0
  6114  002B16  1420               	andwf	___flge@ff1^0,w,c
  6115  002B18  6E28               	movwf	??___flge^0,c
  6116  002B1A  0E00               	movlw	0
  6117  002B1C  1421               	andwf	(___flge@ff1+1)^0,w,c
  6118  002B1E  6E29               	movwf	(??___flge+1)^0,c
  6119  002B20  0E80               	movlw	128
  6120  002B22  1422               	andwf	(___flge@ff1+2)^0,w,c
  6121  002B24  6E2A               	movwf	(??___flge+2)^0,c
  6122  002B26  0E7F               	movlw	127
  6123  002B28  1423               	andwf	(___flge@ff1+3)^0,w,c
  6124  002B2A  6E2B               	movwf	(??___flge+3)^0,c
  6125  002B2C  5028               	movf	??___flge^0,w,c
  6126  002B2E  1029               	iorwf	(??___flge+1)^0,w,c
  6127  002B30  102A               	iorwf	(??___flge+2)^0,w,c
  6128  002B32  102B               	iorwf	(??___flge+3)^0,w,c
  6129  002B34  A4D8               	btfss	status,2,c
  6130  002B36  EF9F  F015         	goto	u6231
  6131  002B3A  EFA1  F015         	goto	u6230
  6132  002B3E                     u6231:
  6133  002B3E  EFA9  F015         	goto	l4742
  6134  002B42                     u6230:
  6135  002B42  0E00               	movlw	0
  6136  002B44  6E20               	movwf	___flge@ff1^0,c
  6137  002B46  0E00               	movlw	0
  6138  002B48  6E21               	movwf	(___flge@ff1+1)^0,c
  6139  002B4A  0E00               	movlw	0
  6140  002B4C  6E22               	movwf	(___flge@ff1+2)^0,c
  6141  002B4E  0E00               	movlw	0
  6142  002B50  6E23               	movwf	(___flge@ff1+3)^0,c
  6143  002B52                     l4742:
  6144  002B52  0E00               	movlw	0
  6145  002B54  1424               	andwf	___flge@ff2^0,w,c
  6146  002B56  6E28               	movwf	??___flge^0,c
  6147  002B58  0E00               	movlw	0
  6148  002B5A  1425               	andwf	(___flge@ff2+1)^0,w,c
  6149  002B5C  6E29               	movwf	(??___flge+1)^0,c
  6150  002B5E  0E80               	movlw	128
  6151  002B60  1426               	andwf	(___flge@ff2+2)^0,w,c
  6152  002B62  6E2A               	movwf	(??___flge+2)^0,c
  6153  002B64  0E7F               	movlw	127
  6154  002B66  1427               	andwf	(___flge@ff2+3)^0,w,c
  6155  002B68  6E2B               	movwf	(??___flge+3)^0,c
  6156  002B6A  5028               	movf	??___flge^0,w,c
  6157  002B6C  1029               	iorwf	(??___flge+1)^0,w,c
  6158  002B6E  102A               	iorwf	(??___flge+2)^0,w,c
  6159  002B70  102B               	iorwf	(??___flge+3)^0,w,c
  6160  002B72  A4D8               	btfss	status,2,c
  6161  002B74  EFBE  F015         	goto	u6241
  6162  002B78  EFC0  F015         	goto	u6240
  6163  002B7C                     u6241:
  6164  002B7C  EFC8  F015         	goto	l4746
  6165  002B80                     u6240:
  6166  002B80  0E00               	movlw	0
  6167  002B82  6E24               	movwf	___flge@ff2^0,c
  6168  002B84  0E00               	movlw	0
  6169  002B86  6E25               	movwf	(___flge@ff2+1)^0,c
  6170  002B88  0E00               	movlw	0
  6171  002B8A  6E26               	movwf	(___flge@ff2+2)^0,c
  6172  002B8C  0E00               	movlw	0
  6173  002B8E  6E27               	movwf	(___flge@ff2+3)^0,c
  6174  002B90                     l4746:
  6175  002B90  AE23               	btfss	(___flge@ff1+3)^0,7,c
  6176  002B92  EFCD  F015         	goto	u6251
  6177  002B96  EFCF  F015         	goto	u6250
  6178  002B9A                     u6251:
  6179  002B9A  EFD8  F015         	goto	l4750
  6180  002B9E                     u6250:
  6181  002B9E  6C20               	negf	___flge@ff1^0,c
  6182  002BA0  1E21               	comf	(___flge@ff1+1)^0,f,c
  6183  002BA2  B0D8               	btfsc	status,0,c
  6184  002BA4  2A21               	incf	(___flge@ff1+1)^0,f,c
  6185  002BA6  1E22               	comf	(___flge@ff1+2)^0,f,c
  6186  002BA8  B0D8               	btfsc	status,0,c
  6187  002BAA  2A22               	incf	(___flge@ff1+2)^0,f,c
  6188  002BAC  0E80               	movlw	128
  6189  002BAE  5623               	subfwb	(___flge@ff1+3)^0,f,c
  6190  002BB0                     l4750:
  6191  002BB0  AE27               	btfss	(___flge@ff2+3)^0,7,c
  6192  002BB2  EFDD  F015         	goto	u6261
  6193  002BB6  EFDF  F015         	goto	u6260
  6194  002BBA                     u6261:
  6195  002BBA  EFE8  F015         	goto	l551
  6196  002BBE                     u6260:
  6197  002BBE  6C24               	negf	___flge@ff2^0,c
  6198  002BC0  1E25               	comf	(___flge@ff2+1)^0,f,c
  6199  002BC2  B0D8               	btfsc	status,0,c
  6200  002BC4  2A25               	incf	(___flge@ff2+1)^0,f,c
  6201  002BC6  1E26               	comf	(___flge@ff2+2)^0,f,c
  6202  002BC8  B0D8               	btfsc	status,0,c
  6203  002BCA  2A26               	incf	(___flge@ff2+2)^0,f,c
  6204  002BCC  0E80               	movlw	128
  6205  002BCE  5627               	subfwb	(___flge@ff2+3)^0,f,c
  6206  002BD0                     l551:
  6207  002BD0  0E00               	movlw	0
  6208  002BD2  1A20               	xorwf	___flge@ff1^0,f,c
  6209  002BD4  0E00               	movlw	0
  6210  002BD6  1A21               	xorwf	(___flge@ff1+1)^0,f,c
  6211  002BD8  0E00               	movlw	0
  6212  002BDA  1A22               	xorwf	(___flge@ff1+2)^0,f,c
  6213  002BDC  0E80               	movlw	128
  6214  002BDE  1A23               	xorwf	(___flge@ff1+3)^0,f,c
  6215  002BE0  0E00               	movlw	0
  6216  002BE2  1A24               	xorwf	___flge@ff2^0,f,c
  6217  002BE4  0E00               	movlw	0
  6218  002BE6  1A25               	xorwf	(___flge@ff2+1)^0,f,c
  6219  002BE8  0E00               	movlw	0
  6220  002BEA  1A26               	xorwf	(___flge@ff2+2)^0,f,c
  6221  002BEC  0E80               	movlw	128
  6222  002BEE  1A27               	xorwf	(___flge@ff2+3)^0,f,c
  6223  002BF0  5024               	movf	___flge@ff2^0,w,c
  6224  002BF2  5C20               	subwf	___flge@ff1^0,w,c
  6225  002BF4  5025               	movf	(___flge@ff2+1)^0,w,c
  6226  002BF6  5821               	subwfb	(___flge@ff1+1)^0,w,c
  6227  002BF8  5026               	movf	(___flge@ff2+2)^0,w,c
  6228  002BFA  5822               	subwfb	(___flge@ff1+2)^0,w,c
  6229  002BFC  5027               	movf	(___flge@ff2+3)^0,w,c
  6230  002BFE  5823               	subwfb	(___flge@ff1+3)^0,w,c
  6231  002C00  B0D8               	btfsc	status,0,c
  6232  002C02  EF05  F016         	goto	u6271
  6233  002C06  EF07  F016         	goto	u6270
  6234  002C0A                     u6271:
  6235  002C0A  EF0A  F016         	goto	l4756
  6236  002C0E                     u6270:
  6237  002C0E  90D8               	bcf	status,0,c
  6238  002C10  EF0B  F016         	goto	l556
  6239  002C14                     l4756:
  6240  002C14  80D8               	bsf	status,0,c
  6241  002C16                     l556:
  6242  002C16  0012               	return		;funcret
  6243  002C18                     __end_of___flge:
  6244                           	opt callstack 0
  6245                           
  6246 ;; *************** function ___fleq *****************
  6247 ;; Defined at:
  6248 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;  ff1             4    6[COMRAM] unsigned char 
  6251 ;;  ff2             4   10[COMRAM] unsigned char 
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;		None
  6254 ;; Return value:  Size  Location     Type
  6255 ;;		None               void
  6256 ;; Registers used:
  6257 ;;		wreg, status,2, status,0
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6263 ;;      Params:         8       0       0       0       0       0       0       0       0
  6264 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6265 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6266 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6267 ;;Total ram usage:       12 bytes
  6268 ;; Hardware stack levels used:    1
  6269 ;; Hardware stack levels required when called:    2
  6270 ;; This function calls:
  6271 ;;		Nothing
  6272 ;; This function is called by:
  6273 ;;		_efgtoa
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           	psect	text22
  6278  0030EC                     __ptext22:
  6279                           	opt callstack 0
  6280  0030EC                     ___fleq:
  6281                           	opt callstack 24
  6282  0030EC  0E00               	movlw	0
  6283  0030EE  1407               	andwf	___fleq@ff1^0,w,c
  6284  0030F0  6E0F               	movwf	??___fleq^0,c
  6285  0030F2  0E00               	movlw	0
  6286  0030F4  1408               	andwf	(___fleq@ff1+1)^0,w,c
  6287  0030F6  6E10               	movwf	(??___fleq+1)^0,c
  6288  0030F8  0E80               	movlw	128
  6289  0030FA  1409               	andwf	(___fleq@ff1+2)^0,w,c
  6290  0030FC  6E11               	movwf	(??___fleq+2)^0,c
  6291  0030FE  0E7F               	movlw	127
  6292  003100  140A               	andwf	(___fleq@ff1+3)^0,w,c
  6293  003102  6E12               	movwf	(??___fleq+3)^0,c
  6294  003104  500F               	movf	??___fleq^0,w,c
  6295  003106  1010               	iorwf	(??___fleq+1)^0,w,c
  6296  003108  1011               	iorwf	(??___fleq+2)^0,w,c
  6297  00310A  1012               	iorwf	(??___fleq+3)^0,w,c
  6298  00310C  A4D8               	btfss	status,2,c
  6299  00310E  EF8B  F018         	goto	u6201
  6300  003112  EF8D  F018         	goto	u6200
  6301  003116                     u6201:
  6302  003116  EF95  F018         	goto	l4726
  6303  00311A                     u6200:
  6304  00311A  0E00               	movlw	0
  6305  00311C  6E07               	movwf	___fleq@ff1^0,c
  6306  00311E  0E00               	movlw	0
  6307  003120  6E08               	movwf	(___fleq@ff1+1)^0,c
  6308  003122  0E00               	movlw	0
  6309  003124  6E09               	movwf	(___fleq@ff1+2)^0,c
  6310  003126  0E00               	movlw	0
  6311  003128  6E0A               	movwf	(___fleq@ff1+3)^0,c
  6312  00312A                     l4726:
  6313  00312A  0E00               	movlw	0
  6314  00312C  140B               	andwf	___fleq@ff2^0,w,c
  6315  00312E  6E0F               	movwf	??___fleq^0,c
  6316  003130  0E00               	movlw	0
  6317  003132  140C               	andwf	(___fleq@ff2+1)^0,w,c
  6318  003134  6E10               	movwf	(??___fleq+1)^0,c
  6319  003136  0E80               	movlw	128
  6320  003138  140D               	andwf	(___fleq@ff2+2)^0,w,c
  6321  00313A  6E11               	movwf	(??___fleq+2)^0,c
  6322  00313C  0E7F               	movlw	127
  6323  00313E  140E               	andwf	(___fleq@ff2+3)^0,w,c
  6324  003140  6E12               	movwf	(??___fleq+3)^0,c
  6325  003142  500F               	movf	??___fleq^0,w,c
  6326  003144  1010               	iorwf	(??___fleq+1)^0,w,c
  6327  003146  1011               	iorwf	(??___fleq+2)^0,w,c
  6328  003148  1012               	iorwf	(??___fleq+3)^0,w,c
  6329  00314A  A4D8               	btfss	status,2,c
  6330  00314C  EFAA  F018         	goto	u6211
  6331  003150  EFAC  F018         	goto	u6210
  6332  003154                     u6211:
  6333  003154  EFB4  F018         	goto	l4730
  6334  003158                     u6210:
  6335  003158  0E00               	movlw	0
  6336  00315A  6E0B               	movwf	___fleq@ff2^0,c
  6337  00315C  0E00               	movlw	0
  6338  00315E  6E0C               	movwf	(___fleq@ff2+1)^0,c
  6339  003160  0E00               	movlw	0
  6340  003162  6E0D               	movwf	(___fleq@ff2+2)^0,c
  6341  003164  0E00               	movlw	0
  6342  003166  6E0E               	movwf	(___fleq@ff2+3)^0,c
  6343  003168                     l4730:
  6344  003168  500B               	movf	___fleq@ff2^0,w,c
  6345  00316A  1807               	xorwf	___fleq@ff1^0,w,c
  6346  00316C  E10F               	bnz	u6220
  6347  00316E  500C               	movf	(___fleq@ff2+1)^0,w,c
  6348  003170  1808               	xorwf	(___fleq@ff1+1)^0,w,c
  6349  003172  E10C               	bnz	u6220
  6350  003174  500D               	movf	(___fleq@ff2+2)^0,w,c
  6351  003176  1809               	xorwf	(___fleq@ff1+2)^0,w,c
  6352  003178  E109               	bnz	u6220
  6353  00317A  500E               	movf	(___fleq@ff2+3)^0,w,c
  6354  00317C  180A               	xorwf	(___fleq@ff1+3)^0,w,c
  6355  00317E  B4D8               	btfsc	status,2,c
  6356  003180  EFC4  F018         	goto	u6221
  6357  003184  EFC6  F018         	goto	u6220
  6358  003188                     u6221:
  6359  003188  EFC9  F018         	goto	l4734
  6360  00318C                     u6220:
  6361  00318C  90D8               	bcf	status,0,c
  6362  00318E  EFCA  F018         	goto	l545
  6363  003192                     l4734:
  6364  003192  80D8               	bsf	status,0,c
  6365  003194                     l545:
  6366  003194  0012               	return		;funcret
  6367  003196                     __end_of___fleq:
  6368                           	opt callstack 0
  6369                           
  6370 ;; *************** function ___fldiv *****************
  6371 ;; Defined at:
  6372 ;;		line 11 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;  b               4    6[COMRAM] unsigned char 
  6375 ;;  a               4   10[COMRAM] unsigned char 
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;  grs             4   25[COMRAM] unsigned long 
  6378 ;;  rem             4   18[COMRAM] unsigned long 
  6379 ;;  new_exp         2   23[COMRAM] short 
  6380 ;;  aexp            1   30[COMRAM] unsigned char 
  6381 ;;  bexp            1   29[COMRAM] unsigned char 
  6382 ;;  sign            1   22[COMRAM] unsigned char 
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  4    6[COMRAM] unsigned char 
  6385 ;; Registers used:
  6386 ;;		wreg, status,2, status,0
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6392 ;;      Params:         8       0       0       0       0       0       0       0       0
  6393 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6394 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6395 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6396 ;;Total ram usage:       25 bytes
  6397 ;; Hardware stack levels used:    1
  6398 ;; Hardware stack levels required when called:    2
  6399 ;; This function calls:
  6400 ;;		Nothing
  6401 ;; This function is called by:
  6402 ;;		_efgtoa
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           
  6406                           	psect	text23
  6407  00211E                     __ptext23:
  6408                           	opt callstack 0
  6409  00211E                     ___fldiv:
  6410                           	opt callstack 24
  6411  00211E  500A               	movf	(___fldiv@b+3)^0,w,c
  6412  002120  0B80               	andlw	128
  6413  002122  6E17               	movwf	___fldiv@sign^0,c
  6414  002124  500A               	movf	(___fldiv@b+3)^0,w,c
  6415  002126  240A               	addwf	(___fldiv@b+3)^0,w,c
  6416  002128  6E1E               	movwf	___fldiv@bexp^0,c
  6417  00212A  AE09               	btfss	(___fldiv@b+2)^0,7,c
  6418  00212C  EF9A  F010         	goto	u5661
  6419  002130  EF9C  F010         	goto	u5660
  6420  002134                     u5661:
  6421  002134  EF9D  F010         	goto	l4374
  6422  002138                     u5660:
  6423  002138  801E               	bsf	___fldiv@bexp^0,0,c
  6424  00213A                     l4374:
  6425  00213A  501E               	movf	___fldiv@bexp^0,w,c
  6426  00213C  B4D8               	btfsc	status,2,c
  6427  00213E  EFA3  F010         	goto	u5671
  6428  002142  EFA5  F010         	goto	u5670
  6429  002146                     u5671:
  6430  002146  EFBA  F010         	goto	l4384
  6431  00214A                     u5670:
  6432  00214A  281E               	incf	___fldiv@bexp^0,w,c
  6433  00214C  A4D8               	btfss	status,2,c
  6434  00214E  EFAB  F010         	goto	u5681
  6435  002152  EFAD  F010         	goto	u5680
  6436  002156                     u5681:
  6437  002156  EFB5  F010         	goto	l4380
  6438  00215A                     u5680:
  6439  00215A  0E00               	movlw	0
  6440  00215C  6E07               	movwf	___fldiv@b^0,c
  6441  00215E  0E00               	movlw	0
  6442  002160  6E08               	movwf	(___fldiv@b+1)^0,c
  6443  002162  0E00               	movlw	0
  6444  002164  6E09               	movwf	(___fldiv@b+2)^0,c
  6445  002166  0E00               	movlw	0
  6446  002168  6E0A               	movwf	(___fldiv@b+3)^0,c
  6447  00216A                     l4380:
  6448  00216A  8E09               	bsf	(___fldiv@b+2)^0,7,c
  6449  00216C  0E00               	movlw	0
  6450  00216E  6E0A               	movwf	(___fldiv@b+3)^0,c
  6451  002170  EFC2  F010         	goto	l4386
  6452  002174                     l4384:
  6453  002174  0E00               	movlw	0
  6454  002176  6E07               	movwf	___fldiv@b^0,c
  6455  002178  0E00               	movlw	0
  6456  00217A  6E08               	movwf	(___fldiv@b+1)^0,c
  6457  00217C  0E00               	movlw	0
  6458  00217E  6E09               	movwf	(___fldiv@b+2)^0,c
  6459  002180  0E00               	movlw	0
  6460  002182  6E0A               	movwf	(___fldiv@b+3)^0,c
  6461  002184                     l4386:
  6462  002184  500E               	movf	(___fldiv@a+3)^0,w,c
  6463  002186  0B80               	andlw	128
  6464  002188  1A17               	xorwf	___fldiv@sign^0,f,c
  6465  00218A  500E               	movf	(___fldiv@a+3)^0,w,c
  6466  00218C  240E               	addwf	(___fldiv@a+3)^0,w,c
  6467  00218E  6E1F               	movwf	___fldiv@aexp^0,c
  6468  002190  AE0D               	btfss	(___fldiv@a+2)^0,7,c
  6469  002192  EFCD  F010         	goto	u5691
  6470  002196  EFCF  F010         	goto	u5690
  6471  00219A                     u5691:
  6472  00219A  EFD0  F010         	goto	l4394
  6473  00219E                     u5690:
  6474  00219E  801F               	bsf	___fldiv@aexp^0,0,c
  6475  0021A0                     l4394:
  6476  0021A0  501F               	movf	___fldiv@aexp^0,w,c
  6477  0021A2  B4D8               	btfsc	status,2,c
  6478  0021A4  EFD6  F010         	goto	u5701
  6479  0021A8  EFD8  F010         	goto	u5700
  6480  0021AC                     u5701:
  6481  0021AC  EFED  F010         	goto	l4404
  6482  0021B0                     u5700:
  6483  0021B0  281F               	incf	___fldiv@aexp^0,w,c
  6484  0021B2  A4D8               	btfss	status,2,c
  6485  0021B4  EFDE  F010         	goto	u5711
  6486  0021B8  EFE0  F010         	goto	u5710
  6487  0021BC                     u5711:
  6488  0021BC  EFE8  F010         	goto	l4400
  6489  0021C0                     u5710:
  6490  0021C0  0E00               	movlw	0
  6491  0021C2  6E0B               	movwf	___fldiv@a^0,c
  6492  0021C4  0E00               	movlw	0
  6493  0021C6  6E0C               	movwf	(___fldiv@a+1)^0,c
  6494  0021C8  0E00               	movlw	0
  6495  0021CA  6E0D               	movwf	(___fldiv@a+2)^0,c
  6496  0021CC  0E00               	movlw	0
  6497  0021CE  6E0E               	movwf	(___fldiv@a+3)^0,c
  6498  0021D0                     l4400:
  6499  0021D0  8E0D               	bsf	(___fldiv@a+2)^0,7,c
  6500  0021D2  0E00               	movlw	0
  6501  0021D4  6E0E               	movwf	(___fldiv@a+3)^0,c
  6502  0021D6  EFF5  F010         	goto	l4406
  6503  0021DA                     l4404:
  6504  0021DA  0E00               	movlw	0
  6505  0021DC  6E0B               	movwf	___fldiv@a^0,c
  6506  0021DE  0E00               	movlw	0
  6507  0021E0  6E0C               	movwf	(___fldiv@a+1)^0,c
  6508  0021E2  0E00               	movlw	0
  6509  0021E4  6E0D               	movwf	(___fldiv@a+2)^0,c
  6510  0021E6  0E00               	movlw	0
  6511  0021E8  6E0E               	movwf	(___fldiv@a+3)^0,c
  6512  0021EA                     l4406:
  6513  0021EA  500B               	movf	___fldiv@a^0,w,c
  6514  0021EC  100C               	iorwf	(___fldiv@a+1)^0,w,c
  6515  0021EE  100D               	iorwf	(___fldiv@a+2)^0,w,c
  6516  0021F0  100E               	iorwf	(___fldiv@a+3)^0,w,c
  6517  0021F2  A4D8               	btfss	status,2,c
  6518  0021F4  EFFE  F010         	goto	u5721
  6519  0021F8  EF00  F011         	goto	u5720
  6520  0021FC                     u5721:
  6521  0021FC  EF18  F011         	goto	l4418
  6522  002200                     u5720:
  6523  002200  0E00               	movlw	0
  6524  002202  6E07               	movwf	___fldiv@b^0,c
  6525  002204  0E00               	movlw	0
  6526  002206  6E08               	movwf	(___fldiv@b+1)^0,c
  6527  002208  0E00               	movlw	0
  6528  00220A  6E09               	movwf	(___fldiv@b+2)^0,c
  6529  00220C  0E00               	movlw	0
  6530  00220E  6E0A               	movwf	(___fldiv@b+3)^0,c
  6531  002210  0E80               	movlw	128
  6532  002212  1209               	iorwf	(___fldiv@b+2)^0,f,c
  6533  002214  0E7F               	movlw	127
  6534  002216  120A               	iorwf	(___fldiv@b+3)^0,f,c
  6535  002218                     l4412:
  6536  002218  5017               	movf	___fldiv@sign^0,w,c
  6537  00221A  120A               	iorwf	(___fldiv@b+3)^0,f,c
  6538  00221C  C007  F007         	movff	___fldiv@b,?___fldiv
  6539  002220  C008  F008         	movff	___fldiv@b+1,?___fldiv+1
  6540  002224  C009  F009         	movff	___fldiv@b+2,?___fldiv+2
  6541  002228  C00A  F00A         	movff	___fldiv@b+3,?___fldiv+3
  6542  00222C  EF5B  F012         	goto	l868
  6543  002230                     l4418:
  6544  002230  501E               	movf	___fldiv@bexp^0,w,c
  6545  002232  A4D8               	btfss	status,2,c
  6546  002234  EF1E  F011         	goto	u5731
  6547  002238  EF20  F011         	goto	u5730
  6548  00223C                     u5731:
  6549  00223C  EF2A  F011         	goto	l4426
  6550  002240                     u5730:
  6551  002240  0E00               	movlw	0
  6552  002242  6E07               	movwf	?___fldiv^0,c
  6553  002244  0E00               	movlw	0
  6554  002246  6E08               	movwf	(?___fldiv+1)^0,c
  6555  002248  0E00               	movlw	0
  6556  00224A  6E09               	movwf	(?___fldiv+2)^0,c
  6557  00224C  0E00               	movlw	0
  6558  00224E  6E0A               	movwf	(?___fldiv+3)^0,c
  6559  002250  EF5B  F012         	goto	l868
  6560  002254                     l4426:
  6561  002254  501F               	movf	___fldiv@aexp^0,w,c
  6562  002256  C01E  F00F         	movff	___fldiv@bexp,??___fldiv
  6563  00225A  6A10               	clrf	(??___fldiv+1)^0,c
  6564  00225C  5E0F               	subwf	??___fldiv^0,f,c
  6565  00225E  0E00               	movlw	0
  6566  002260  5A10               	subwfb	(??___fldiv+1)^0,f,c
  6567  002262  0E7F               	movlw	127
  6568  002264  240F               	addwf	??___fldiv^0,w,c
  6569  002266  6E18               	movwf	___fldiv@new_exp^0,c
  6570  002268  0E00               	movlw	0
  6571  00226A  2010               	addwfc	(??___fldiv+1)^0,w,c
  6572  00226C  6E19               	movwf	(___fldiv@new_exp+1)^0,c
  6573  00226E  C007  F013         	movff	___fldiv@b,___fldiv@rem
  6574  002272  C008  F014         	movff	___fldiv@b+1,___fldiv@rem+1
  6575  002276  C009  F015         	movff	___fldiv@b+2,___fldiv@rem+2
  6576  00227A  C00A  F016         	movff	___fldiv@b+3,___fldiv@rem+3
  6577  00227E  0E00               	movlw	0
  6578  002280  6E07               	movwf	___fldiv@b^0,c
  6579  002282  0E00               	movlw	0
  6580  002284  6E08               	movwf	(___fldiv@b+1)^0,c
  6581  002286  0E00               	movlw	0
  6582  002288  6E09               	movwf	(___fldiv@b+2)^0,c
  6583  00228A  0E00               	movlw	0
  6584  00228C  6E0A               	movwf	(___fldiv@b+3)^0,c
  6585  00228E  0E00               	movlw	0
  6586  002290  6E1A               	movwf	___fldiv@grs^0,c
  6587  002292  0E00               	movlw	0
  6588  002294  6E1B               	movwf	(___fldiv@grs+1)^0,c
  6589  002296  0E00               	movlw	0
  6590  002298  6E1C               	movwf	(___fldiv@grs+2)^0,c
  6591  00229A  0E00               	movlw	0
  6592  00229C  6E1D               	movwf	(___fldiv@grs+3)^0,c
  6593  00229E  0E00               	movlw	0
  6594  0022A0  6E1F               	movwf	___fldiv@aexp^0,c
  6595  0022A2  EF8B  F011         	goto	l870
  6596  0022A6                     l4436:
  6597  0022A6  501F               	movf	___fldiv@aexp^0,w,c
  6598  0022A8  B4D8               	btfsc	status,2,c
  6599  0022AA  EF59  F011         	goto	u5741
  6600  0022AE  EF5B  F011         	goto	u5740
  6601  0022B2                     u5741:
  6602  0022B2  EF72  F011         	goto	l4444
  6603  0022B6                     u5740:
  6604  0022B6  90D8               	bcf	status,0,c
  6605  0022B8  3613               	rlcf	___fldiv@rem^0,f,c
  6606  0022BA  3614               	rlcf	(___fldiv@rem+1)^0,f,c
  6607  0022BC  3615               	rlcf	(___fldiv@rem+2)^0,f,c
  6608  0022BE  3616               	rlcf	(___fldiv@rem+3)^0,f,c
  6609  0022C0  90D8               	bcf	status,0,c
  6610  0022C2  3607               	rlcf	___fldiv@b^0,f,c
  6611  0022C4  3608               	rlcf	(___fldiv@b+1)^0,f,c
  6612  0022C6  3609               	rlcf	(___fldiv@b+2)^0,f,c
  6613  0022C8  360A               	rlcf	(___fldiv@b+3)^0,f,c
  6614  0022CA  AE1D               	btfss	(___fldiv@grs+3)^0,7,c
  6615  0022CC  EF6A  F011         	goto	u5751
  6616  0022D0  EF6C  F011         	goto	u5750
  6617  0022D4                     u5751:
  6618  0022D4  EF6D  F011         	goto	l873
  6619  0022D8                     u5750:
  6620  0022D8  8007               	bsf	___fldiv@b^0,0,c
  6621  0022DA                     l873:
  6622  0022DA  90D8               	bcf	status,0,c
  6623  0022DC  361A               	rlcf	___fldiv@grs^0,f,c
  6624  0022DE  361B               	rlcf	(___fldiv@grs+1)^0,f,c
  6625  0022E0  361C               	rlcf	(___fldiv@grs+2)^0,f,c
  6626  0022E2  361D               	rlcf	(___fldiv@grs+3)^0,f,c
  6627  0022E4                     l4444:
  6628  0022E4  500B               	movf	___fldiv@a^0,w,c
  6629  0022E6  5C13               	subwf	___fldiv@rem^0,w,c
  6630  0022E8  500C               	movf	(___fldiv@a+1)^0,w,c
  6631  0022EA  5814               	subwfb	(___fldiv@rem+1)^0,w,c
  6632  0022EC  500D               	movf	(___fldiv@a+2)^0,w,c
  6633  0022EE  5815               	subwfb	(___fldiv@rem+2)^0,w,c
  6634  0022F0  500E               	movf	(___fldiv@a+3)^0,w,c
  6635  0022F2  5816               	subwfb	(___fldiv@rem+3)^0,w,c
  6636  0022F4  A0D8               	btfss	status,0,c
  6637  0022F6  EF7F  F011         	goto	u5761
  6638  0022FA  EF81  F011         	goto	u5760
  6639  0022FE                     u5761:
  6640  0022FE  EF8A  F011         	goto	l4450
  6641  002302                     u5760:
  6642  002302  8C1D               	bsf	(___fldiv@grs+3)^0,6,c
  6643  002304  500B               	movf	___fldiv@a^0,w,c
  6644  002306  5E13               	subwf	___fldiv@rem^0,f,c
  6645  002308  500C               	movf	(___fldiv@a+1)^0,w,c
  6646  00230A  5A14               	subwfb	(___fldiv@rem+1)^0,f,c
  6647  00230C  500D               	movf	(___fldiv@a+2)^0,w,c
  6648  00230E  5A15               	subwfb	(___fldiv@rem+2)^0,f,c
  6649  002310  500E               	movf	(___fldiv@a+3)^0,w,c
  6650  002312  5A16               	subwfb	(___fldiv@rem+3)^0,f,c
  6651  002314                     l4450:
  6652  002314  2A1F               	incf	___fldiv@aexp^0,f,c
  6653  002316                     l870:
  6654  002316  0E19               	movlw	25
  6655  002318  641F               	cpfsgt	___fldiv@aexp^0,c
  6656  00231A  EF91  F011         	goto	u5771
  6657  00231E  EF93  F011         	goto	u5770
  6658  002322                     u5771:
  6659  002322  EF53  F011         	goto	l4436
  6660  002326                     u5770:
  6661  002326  5013               	movf	___fldiv@rem^0,w,c
  6662  002328  1014               	iorwf	(___fldiv@rem+1)^0,w,c
  6663  00232A  1015               	iorwf	(___fldiv@rem+2)^0,w,c
  6664  00232C  1016               	iorwf	(___fldiv@rem+3)^0,w,c
  6665  00232E  B4D8               	btfsc	status,2,c
  6666  002330  EF9C  F011         	goto	u5781
  6667  002334  EF9E  F011         	goto	u5780
  6668  002338                     u5781:
  6669  002338  EFB6  F011         	goto	l4462
  6670  00233C                     u5780:
  6671  00233C  801A               	bsf	___fldiv@grs^0,0,c
  6672  00233E  EFB6  F011         	goto	l4462
  6673  002342                     l4456:
  6674  002342  90D8               	bcf	status,0,c
  6675  002344  3607               	rlcf	___fldiv@b^0,f,c
  6676  002346  3608               	rlcf	(___fldiv@b+1)^0,f,c
  6677  002348  3609               	rlcf	(___fldiv@b+2)^0,f,c
  6678  00234A  360A               	rlcf	(___fldiv@b+3)^0,f,c
  6679  00234C  AE1D               	btfss	(___fldiv@grs+3)^0,7,c
  6680  00234E  EFAB  F011         	goto	u5791
  6681  002352  EFAD  F011         	goto	u5790
  6682  002356                     u5791:
  6683  002356  EFAE  F011         	goto	l879
  6684  00235A                     u5790:
  6685  00235A  8007               	bsf	___fldiv@b^0,0,c
  6686  00235C                     l879:
  6687  00235C  90D8               	bcf	status,0,c
  6688  00235E  361A               	rlcf	___fldiv@grs^0,f,c
  6689  002360  361B               	rlcf	(___fldiv@grs+1)^0,f,c
  6690  002362  361C               	rlcf	(___fldiv@grs+2)^0,f,c
  6691  002364  361D               	rlcf	(___fldiv@grs+3)^0,f,c
  6692  002366  0618               	decf	___fldiv@new_exp^0,f,c
  6693  002368  A0D8               	btfss	status,0,c
  6694  00236A  0619               	decf	(___fldiv@new_exp+1)^0,f,c
  6695  00236C                     l4462:
  6696  00236C  AE09               	btfss	(___fldiv@b+2)^0,7,c
  6697  00236E  EFBB  F011         	goto	u5801
  6698  002372  EFBD  F011         	goto	u5800
  6699  002376                     u5801:
  6700  002376  EFA1  F011         	goto	l4456
  6701  00237A                     u5800:
  6702  00237A  0E00               	movlw	0
  6703  00237C  6E1F               	movwf	___fldiv@aexp^0,c
  6704  00237E  AE1D               	btfss	(___fldiv@grs+3)^0,7,c
  6705  002380  EFC4  F011         	goto	u5811
  6706  002384  EFC6  F011         	goto	u5810
  6707  002388                     u5811:
  6708  002388  EFEA  F011         	goto	l881
  6709  00238C                     u5810:
  6710  00238C  0EFF               	movlw	255
  6711  00238E  141A               	andwf	___fldiv@grs^0,w,c
  6712  002390  6E0F               	movwf	??___fldiv^0,c
  6713  002392  0EFF               	movlw	255
  6714  002394  141B               	andwf	(___fldiv@grs+1)^0,w,c
  6715  002396  6E10               	movwf	(??___fldiv+1)^0,c
  6716  002398  0EFF               	movlw	255
  6717  00239A  141C               	andwf	(___fldiv@grs+2)^0,w,c
  6718  00239C  6E11               	movwf	(??___fldiv+2)^0,c
  6719  00239E  0E7F               	movlw	127
  6720  0023A0  141D               	andwf	(___fldiv@grs+3)^0,w,c
  6721  0023A2  6E12               	movwf	(??___fldiv+3)^0,c
  6722  0023A4  500F               	movf	??___fldiv^0,w,c
  6723  0023A6  1010               	iorwf	(??___fldiv+1)^0,w,c
  6724  0023A8  1011               	iorwf	(??___fldiv+2)^0,w,c
  6725  0023AA  1012               	iorwf	(??___fldiv+3)^0,w,c
  6726  0023AC  B4D8               	btfsc	status,2,c
  6727  0023AE  EFDB  F011         	goto	u5821
  6728  0023B2  EFDD  F011         	goto	u5820
  6729  0023B6                     u5821:
  6730  0023B6  EFE1  F011         	goto	l882
  6731  0023BA                     u5820:
  6732  0023BA                     l4470:
  6733  0023BA  0E01               	movlw	1
  6734  0023BC  6E1F               	movwf	___fldiv@aexp^0,c
  6735  0023BE  EFEA  F011         	goto	l881
  6736  0023C2                     l882:
  6737  0023C2  A007               	btfss	___fldiv@b^0,0,c
  6738  0023C4  EFE6  F011         	goto	u5831
  6739  0023C8  EFE8  F011         	goto	u5830
  6740  0023CC                     u5831:
  6741  0023CC  EFEA  F011         	goto	l881
  6742  0023D0                     u5830:
  6743  0023D0  EFDD  F011         	goto	l4470
  6744  0023D4                     l881:
  6745  0023D4  501F               	movf	___fldiv@aexp^0,w,c
  6746  0023D6  B4D8               	btfsc	status,2,c
  6747  0023D8  EFF0  F011         	goto	u5841
  6748  0023DC  EFF2  F011         	goto	u5840
  6749  0023E0                     u5841:
  6750  0023E0  EF16  F012         	goto	l4482
  6751  0023E4                     u5840:
  6752  0023E4  0E01               	movlw	1
  6753  0023E6  2607               	addwf	___fldiv@b^0,f,c
  6754  0023E8  0E00               	movlw	0
  6755  0023EA  2208               	addwfc	(___fldiv@b+1)^0,f,c
  6756  0023EC  2209               	addwfc	(___fldiv@b+2)^0,f,c
  6757  0023EE  220A               	addwfc	(___fldiv@b+3)^0,f,c
  6758  0023F0  A00A               	btfss	(___fldiv@b+3)^0,0,c
  6759  0023F2  EFFD  F011         	goto	u5851
  6760  0023F6  EFFF  F011         	goto	u5850
  6761  0023FA                     u5851:
  6762  0023FA  EF16  F012         	goto	l4482
  6763  0023FE                     u5850:
  6764  0023FE  C007  F00F         	movff	___fldiv@b,??___fldiv
  6765  002402  C008  F010         	movff	___fldiv@b+1,??___fldiv+1
  6766  002406  C009  F011         	movff	___fldiv@b+2,??___fldiv+2
  6767  00240A  C00A  F012         	movff	___fldiv@b+3,??___fldiv+3
  6768  00240E  3412               	rlcf	(??___fldiv+3)^0,w,c
  6769  002410  3212               	rrcf	(??___fldiv+3)^0,f,c
  6770  002412  3211               	rrcf	(??___fldiv+2)^0,f,c
  6771  002414  3210               	rrcf	(??___fldiv+1)^0,f,c
  6772  002416  320F               	rrcf	??___fldiv^0,f,c
  6773  002418  C00F  F007         	movff	??___fldiv,___fldiv@b
  6774  00241C  C010  F008         	movff	??___fldiv+1,___fldiv@b+1
  6775  002420  C011  F009         	movff	??___fldiv+2,___fldiv@b+2
  6776  002424  C012  F00A         	movff	??___fldiv+3,___fldiv@b+3
  6777  002428  4A18               	infsnz	___fldiv@new_exp^0,f,c
  6778  00242A  2A19               	incf	(___fldiv@new_exp+1)^0,f,c
  6779  00242C                     l4482:
  6780  00242C  BE19               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6781  00242E  EF21  F012         	goto	u5861
  6782  002432  5019               	movf	(___fldiv@new_exp+1)^0,w,c
  6783  002434  E108               	bnz	u5860
  6784  002436  2818               	incf	___fldiv@new_exp^0,w,c
  6785  002438  A0D8               	btfss	status,0,c
  6786  00243A  EF21  F012         	goto	u5861
  6787  00243E  EF23  F012         	goto	u5860
  6788  002442                     u5861:
  6789  002442  EF2E  F012         	goto	l4486
  6790  002446                     u5860:
  6791  002446  0E00               	movlw	0
  6792  002448  6E19               	movwf	(___fldiv@new_exp+1)^0,c
  6793  00244A  6818               	setf	___fldiv@new_exp^0,c
  6794  00244C  0E00               	movlw	0
  6795  00244E  6E07               	movwf	___fldiv@b^0,c
  6796  002450  0E00               	movlw	0
  6797  002452  6E08               	movwf	(___fldiv@b+1)^0,c
  6798  002454  0E00               	movlw	0
  6799  002456  6E09               	movwf	(___fldiv@b+2)^0,c
  6800  002458  0E00               	movlw	0
  6801  00245A  6E0A               	movwf	(___fldiv@b+3)^0,c
  6802  00245C                     l4486:
  6803  00245C  BE19               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6804  00245E  EF3B  F012         	goto	u5870
  6805  002462  5019               	movf	(___fldiv@new_exp+1)^0,w,c
  6806  002464  E106               	bnz	u5871
  6807  002466  0418               	decf	___fldiv@new_exp^0,w,c
  6808  002468  B0D8               	btfsc	status,0,c
  6809  00246A  EF39  F012         	goto	u5871
  6810  00246E  EF3B  F012         	goto	u5870
  6811  002472                     u5871:
  6812  002472  EF49  F012         	goto	l4490
  6813  002476                     u5870:
  6814  002476  0E00               	movlw	0
  6815  002478  6E19               	movwf	(___fldiv@new_exp+1)^0,c
  6816  00247A  0E00               	movlw	0
  6817  00247C  6E18               	movwf	___fldiv@new_exp^0,c
  6818  00247E  0E00               	movlw	0
  6819  002480  6E07               	movwf	___fldiv@b^0,c
  6820  002482  0E00               	movlw	0
  6821  002484  6E08               	movwf	(___fldiv@b+1)^0,c
  6822  002486  0E00               	movlw	0
  6823  002488  6E09               	movwf	(___fldiv@b+2)^0,c
  6824  00248A  0E00               	movlw	0
  6825  00248C  6E0A               	movwf	(___fldiv@b+3)^0,c
  6826  00248E  0E00               	movlw	0
  6827  002490  6E17               	movwf	___fldiv@sign^0,c
  6828  002492                     l4490:
  6829  002492  C018  F01E         	movff	___fldiv@new_exp,___fldiv@bexp
  6830  002496  A01E               	btfss	___fldiv@bexp^0,0,c
  6831  002498  EF50  F012         	goto	u5881
  6832  00249C  EF52  F012         	goto	u5880
  6833  0024A0                     u5881:
  6834  0024A0  EF55  F012         	goto	l4496
  6835  0024A4                     u5880:
  6836  0024A4  8E09               	bsf	(___fldiv@b+2)^0,7,c
  6837  0024A6  EF56  F012         	goto	l4498
  6838  0024AA                     l4496:
  6839  0024AA  9E09               	bcf	(___fldiv@b+2)^0,7,c
  6840  0024AC                     l4498:
  6841  0024AC  90D8               	bcf	status,0,c
  6842  0024AE  301E               	rrcf	___fldiv@bexp^0,w,c
  6843  0024B0  6E0A               	movwf	(___fldiv@b+3)^0,c
  6844  0024B2  EF0C  F011         	goto	l4412
  6845  0024B6                     l868:
  6846  0024B6  0012               	return		;funcret
  6847  0024B8                     __end_of___fldiv:
  6848                           	opt callstack 0
  6849                           
  6850 ;; *************** function ___awmod *****************
  6851 ;; Defined at:
  6852 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;  dividend        2    6[COMRAM] int 
  6855 ;;  divisor         2    8[COMRAM] int 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  sign            1   11[COMRAM] unsigned char 
  6858 ;;  counter         1   10[COMRAM] unsigned char 
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  2    6[COMRAM] int 
  6861 ;; Registers used:
  6862 ;;		wreg, status,2, status,0
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6868 ;;      Params:         4       0       0       0       0       0       0       0       0
  6869 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6870 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6871 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6872 ;;Total ram usage:        6 bytes
  6873 ;; Hardware stack levels used:    1
  6874 ;; Hardware stack levels required when called:    2
  6875 ;; This function calls:
  6876 ;;		Nothing
  6877 ;; This function is called by:
  6878 ;;		_efgtoa
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text24
  6883  00303C                     __ptext24:
  6884                           	opt callstack 0
  6885  00303C                     ___awmod:
  6886                           	opt callstack 24
  6887  00303C  0E00               	movlw	0
  6888  00303E  6E0C               	movwf	___awmod@sign^0,c
  6889  003040  BE08               	btfsc	(___awmod@dividend+1)^0,7,c
  6890  003042  EF27  F018         	goto	u6140
  6891  003046  EF25  F018         	goto	u6141
  6892  00304A                     u6141:
  6893  00304A  EF2D  F018         	goto	l4694
  6894  00304E                     u6140:
  6895  00304E  6C07               	negf	___awmod@dividend^0,c
  6896  003050  1E08               	comf	(___awmod@dividend+1)^0,f,c
  6897  003052  B0D8               	btfsc	status,0,c
  6898  003054  2A08               	incf	(___awmod@dividend+1)^0,f,c
  6899  003056  0E01               	movlw	1
  6900  003058  6E0C               	movwf	___awmod@sign^0,c
  6901  00305A                     l4694:
  6902  00305A  BE0A               	btfsc	(___awmod@divisor+1)^0,7,c
  6903  00305C  EF34  F018         	goto	u6150
  6904  003060  EF32  F018         	goto	u6151
  6905  003064                     u6151:
  6906  003064  EF38  F018         	goto	l4698
  6907  003068                     u6150:
  6908  003068  6C09               	negf	___awmod@divisor^0,c
  6909  00306A  1E0A               	comf	(___awmod@divisor+1)^0,f,c
  6910  00306C  B0D8               	btfsc	status,0,c
  6911  00306E  2A0A               	incf	(___awmod@divisor+1)^0,f,c
  6912  003070                     l4698:
  6913  003070  5009               	movf	___awmod@divisor^0,w,c
  6914  003072  100A               	iorwf	(___awmod@divisor+1)^0,w,c
  6915  003074  B4D8               	btfsc	status,2,c
  6916  003076  EF3F  F018         	goto	u6161
  6917  00307A  EF41  F018         	goto	u6160
  6918  00307E                     u6161:
  6919  00307E  EF65  F018         	goto	l4714
  6920  003082                     u6160:
  6921  003082  0E01               	movlw	1
  6922  003084  6E0B               	movwf	___awmod@counter^0,c
  6923  003086  EF49  F018         	goto	l4704
  6924  00308A                     l4702:
  6925  00308A  90D8               	bcf	status,0,c
  6926  00308C  3609               	rlcf	___awmod@divisor^0,f,c
  6927  00308E  360A               	rlcf	(___awmod@divisor+1)^0,f,c
  6928  003090  2A0B               	incf	___awmod@counter^0,f,c
  6929  003092                     l4704:
  6930  003092  AE0A               	btfss	(___awmod@divisor+1)^0,7,c
  6931  003094  EF4E  F018         	goto	u6171
  6932  003098  EF50  F018         	goto	u6170
  6933  00309C                     u6171:
  6934  00309C  EF45  F018         	goto	l4702
  6935  0030A0                     u6170:
  6936  0030A0                     l4706:
  6937  0030A0  5009               	movf	___awmod@divisor^0,w,c
  6938  0030A2  5C07               	subwf	___awmod@dividend^0,w,c
  6939  0030A4  500A               	movf	(___awmod@divisor+1)^0,w,c
  6940  0030A6  5808               	subwfb	(___awmod@dividend+1)^0,w,c
  6941  0030A8  A0D8               	btfss	status,0,c
  6942  0030AA  EF59  F018         	goto	u6181
  6943  0030AE  EF5B  F018         	goto	u6180
  6944  0030B2                     u6181:
  6945  0030B2  EF5F  F018         	goto	l4710
  6946  0030B6                     u6180:
  6947  0030B6  5009               	movf	___awmod@divisor^0,w,c
  6948  0030B8  5E07               	subwf	___awmod@dividend^0,f,c
  6949  0030BA  500A               	movf	(___awmod@divisor+1)^0,w,c
  6950  0030BC  5A08               	subwfb	(___awmod@dividend+1)^0,f,c
  6951  0030BE                     l4710:
  6952  0030BE  90D8               	bcf	status,0,c
  6953  0030C0  320A               	rrcf	(___awmod@divisor+1)^0,f,c
  6954  0030C2  3209               	rrcf	___awmod@divisor^0,f,c
  6955  0030C4  2E0B               	decfsz	___awmod@counter^0,f,c
  6956  0030C6  EF50  F018         	goto	l4706
  6957  0030CA                     l4714:
  6958  0030CA  500C               	movf	___awmod@sign^0,w,c
  6959  0030CC  B4D8               	btfsc	status,2,c
  6960  0030CE  EF6B  F018         	goto	u6191
  6961  0030D2  EF6D  F018         	goto	u6190
  6962  0030D6                     u6191:
  6963  0030D6  EF71  F018         	goto	l4718
  6964  0030DA                     u6190:
  6965  0030DA  6C07               	negf	___awmod@dividend^0,c
  6966  0030DC  1E08               	comf	(___awmod@dividend+1)^0,f,c
  6967  0030DE  B0D8               	btfsc	status,0,c
  6968  0030E0  2A08               	incf	(___awmod@dividend+1)^0,f,c
  6969  0030E2                     l4718:
  6970  0030E2  C007  F007         	movff	___awmod@dividend,?___awmod
  6971  0030E6  C008  F008         	movff	___awmod@dividend+1,?___awmod+1
  6972  0030EA  0012               	return		;funcret
  6973  0030EC                     __end_of___awmod:
  6974                           	opt callstack 0
  6975                           
  6976 ;; *************** function ___awdiv *****************
  6977 ;; Defined at:
  6978 ;;		line 7 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;  dividend        2    6[COMRAM] int 
  6981 ;;  divisor         2    8[COMRAM] int 
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;  quotient        2   12[COMRAM] int 
  6984 ;;  sign            1   11[COMRAM] unsigned char 
  6985 ;;  counter         1   10[COMRAM] unsigned char 
  6986 ;; Return value:  Size  Location     Type
  6987 ;;                  2    6[COMRAM] int 
  6988 ;; Registers used:
  6989 ;;		wreg, status,2, status,0
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6995 ;;      Params:         4       0       0       0       0       0       0       0       0
  6996 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6997 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6998 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6999 ;;Total ram usage:        8 bytes
  7000 ;; Hardware stack levels used:    1
  7001 ;; Hardware stack levels required when called:    2
  7002 ;; This function calls:
  7003 ;;		Nothing
  7004 ;; This function is called by:
  7005 ;;		_efgtoa
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           	psect	text25
  7010  002EB6                     __ptext25:
  7011                           	opt callstack 0
  7012  002EB6                     ___awdiv:
  7013                           	opt callstack 24
  7014  002EB6  0E00               	movlw	0
  7015  002EB8  6E0C               	movwf	___awdiv@sign^0,c
  7016  002EBA  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  7017  002EBC  EF64  F017         	goto	u6080
  7018  002EC0  EF62  F017         	goto	u6081
  7019  002EC4                     u6081:
  7020  002EC4  EF6A  F017         	goto	l4650
  7021  002EC8                     u6080:
  7022  002EC8  6C09               	negf	___awdiv@divisor^0,c
  7023  002ECA  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  7024  002ECC  B0D8               	btfsc	status,0,c
  7025  002ECE  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  7026  002ED0  0E01               	movlw	1
  7027  002ED2  6E0C               	movwf	___awdiv@sign^0,c
  7028  002ED4                     l4650:
  7029  002ED4  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  7030  002ED6  EF71  F017         	goto	u6090
  7031  002EDA  EF6F  F017         	goto	u6091
  7032  002EDE                     u6091:
  7033  002EDE  EF77  F017         	goto	l4656
  7034  002EE2                     u6090:
  7035  002EE2  6C07               	negf	___awdiv@dividend^0,c
  7036  002EE4  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  7037  002EE6  B0D8               	btfsc	status,0,c
  7038  002EE8  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  7039  002EEA  0E01               	movlw	1
  7040  002EEC  1A0C               	xorwf	___awdiv@sign^0,f,c
  7041  002EEE                     l4656:
  7042  002EEE  0E00               	movlw	0
  7043  002EF0  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  7044  002EF2  0E00               	movlw	0
  7045  002EF4  6E0D               	movwf	___awdiv@quotient^0,c
  7046  002EF6  5009               	movf	___awdiv@divisor^0,w,c
  7047  002EF8  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  7048  002EFA  B4D8               	btfsc	status,2,c
  7049  002EFC  EF82  F017         	goto	u6101
  7050  002F00  EF84  F017         	goto	u6100
  7051  002F04                     u6101:
  7052  002F04  EFAC  F017         	goto	l4678
  7053  002F08                     u6100:
  7054  002F08  0E01               	movlw	1
  7055  002F0A  6E0B               	movwf	___awdiv@counter^0,c
  7056  002F0C  EF8C  F017         	goto	l4664
  7057  002F10                     l4662:
  7058  002F10  90D8               	bcf	status,0,c
  7059  002F12  3609               	rlcf	___awdiv@divisor^0,f,c
  7060  002F14  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  7061  002F16  2A0B               	incf	___awdiv@counter^0,f,c
  7062  002F18                     l4664:
  7063  002F18  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  7064  002F1A  EF91  F017         	goto	u6111
  7065  002F1E  EF93  F017         	goto	u6110
  7066  002F22                     u6111:
  7067  002F22  EF88  F017         	goto	l4662
  7068  002F26                     u6110:
  7069  002F26                     l4666:
  7070  002F26  90D8               	bcf	status,0,c
  7071  002F28  360D               	rlcf	___awdiv@quotient^0,f,c
  7072  002F2A  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  7073  002F2C  5009               	movf	___awdiv@divisor^0,w,c
  7074  002F2E  5C07               	subwf	___awdiv@dividend^0,w,c
  7075  002F30  500A               	movf	(___awdiv@divisor+1)^0,w,c
  7076  002F32  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  7077  002F34  A0D8               	btfss	status,0,c
  7078  002F36  EF9F  F017         	goto	u6121
  7079  002F3A  EFA1  F017         	goto	u6120
  7080  002F3E                     u6121:
  7081  002F3E  EFA6  F017         	goto	l4674
  7082  002F42                     u6120:
  7083  002F42  5009               	movf	___awdiv@divisor^0,w,c
  7084  002F44  5E07               	subwf	___awdiv@dividend^0,f,c
  7085  002F46  500A               	movf	(___awdiv@divisor+1)^0,w,c
  7086  002F48  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  7087  002F4A  800D               	bsf	___awdiv@quotient^0,0,c
  7088  002F4C                     l4674:
  7089  002F4C  90D8               	bcf	status,0,c
  7090  002F4E  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  7091  002F50  3209               	rrcf	___awdiv@divisor^0,f,c
  7092  002F52  2E0B               	decfsz	___awdiv@counter^0,f,c
  7093  002F54  EF93  F017         	goto	l4666
  7094  002F58                     l4678:
  7095  002F58  500C               	movf	___awdiv@sign^0,w,c
  7096  002F5A  B4D8               	btfsc	status,2,c
  7097  002F5C  EFB2  F017         	goto	u6131
  7098  002F60  EFB4  F017         	goto	u6130
  7099  002F64                     u6131:
  7100  002F64  EFB8  F017         	goto	l4682
  7101  002F68                     u6130:
  7102  002F68  6C0D               	negf	___awdiv@quotient^0,c
  7103  002F6A  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  7104  002F6C  B0D8               	btfsc	status,0,c
  7105  002F6E  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  7106  002F70                     l4682:
  7107  002F70  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  7108  002F74  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  7109  002F78  0012               	return		;funcret
  7110  002F7A                     __end_of___awdiv:
  7111                           	opt callstack 0
  7112                           
  7113 ;; *************** function _atoi *****************
  7114 ;; Defined at:
  7115 ;;		line 4 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
  7116 ;; Parameters:    Size  Location     Type
  7117 ;;  s               2   13[COMRAM] PTR const unsigned char 
  7118 ;;		 -> STR_1(5), 
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;  n               2   26[COMRAM] int 
  7121 ;;  neg             2   19[COMRAM] int 
  7122 ;; Return value:  Size  Location     Type
  7123 ;;                  2   13[COMRAM] int 
  7124 ;; Registers used:
  7125 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 0/0
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7131 ;;      Params:         2       0       0       0       0       0       0       0       0
  7132 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7133 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7134 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7135 ;;Total ram usage:       15 bytes
  7136 ;; Hardware stack levels used:    1
  7137 ;; Hardware stack levels required when called:    3
  7138 ;; This function calls:
  7139 ;;		___wmul
  7140 ;;		_isdigit
  7141 ;;		_isspace
  7142 ;; This function is called by:
  7143 ;;		_vfpfcnvrt
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           	psect	text26
  7148  00287E                     __ptext26:
  7149                           	opt callstack 0
  7150  00287E                     _atoi:
  7151                           	opt callstack 24
  7152  00287E  0E00               	movlw	0
  7153  002880  6E1C               	movwf	(atoi@n+1)^0,c
  7154  002882  0E00               	movlw	0
  7155  002884  6E1B               	movwf	atoi@n^0,c
  7156  002886  0E00               	movlw	0
  7157  002888  6E15               	movwf	(atoi@neg+1)^0,c
  7158  00288A  0E00               	movlw	0
  7159  00288C  6E14               	movwf	atoi@neg^0,c
  7160  00288E  EF4B  F014         	goto	l5126
  7161  002892                     l5124:
  7162  002892  4A0E               	infsnz	atoi@s^0,f,c
  7163  002894  2A0F               	incf	(atoi@s+1)^0,f,c
  7164  002896                     l5126:
  7165  002896  0E01               	movlw	1
  7166  002898  6E1A               	movwf	_atoi$946^0,c
  7167  00289A  C00E  FFF6         	movff	atoi@s,tblptrl
  7168  00289E  C00F  FFF7         	movff	atoi@s+1,tblptrh
  7169  0028A2                     	if	0	;tblptru may be non-zero
  7170  0028A2                     	endif
  7171  0028A2                     	if	0	;tblptru may be non-zero
  7172  0028A2                     	endif
  7173  0028A2  0008               	tblrd		*
  7174  0028A4  50F5               	movf	tablat,w,c
  7175  0028A6  0A20               	xorlw	32
  7176  0028A8  B4D8               	btfsc	status,2,c
  7177  0028AA  EF59  F014         	goto	u6901
  7178  0028AE  EF5B  F014         	goto	u6900
  7179  0028B2                     u6901:
  7180  0028B2  EF78  F014         	goto	l5134
  7181  0028B6                     u6900:
  7182  0028B6  0EF7               	movlw	247
  7183  0028B8  6E10               	movwf	??_atoi^0,c
  7184  0028BA  0EFF               	movlw	255
  7185  0028BC  6E11               	movwf	(??_atoi+1)^0,c
  7186  0028BE  C00E  FFF6         	movff	atoi@s,tblptrl
  7187  0028C2  C00F  FFF7         	movff	atoi@s+1,tblptrh
  7188  0028C6                     	if	0	;tblptru may be non-zero
  7189  0028C6                     	endif
  7190  0028C6                     	if	0	;tblptru may be non-zero
  7191  0028C6                     	endif
  7192  0028C6  0008               	tblrd		*
  7193  0028C8  50F5               	movf	tablat,w,c
  7194  0028CA  6E12               	movwf	(??_atoi+2)^0,c
  7195  0028CC  6A13               	clrf	(??_atoi+3)^0,c
  7196  0028CE  5010               	movf	??_atoi^0,w,c
  7197  0028D0  2612               	addwf	(??_atoi+2)^0,f,c
  7198  0028D2  5011               	movf	(??_atoi+1)^0,w,c
  7199  0028D4  2213               	addwfc	(??_atoi+3)^0,f,c
  7200  0028D6  5013               	movf	(??_atoi+3)^0,w,c
  7201  0028D8  E109               	bnz	u6910
  7202  0028DA  0E05               	movlw	5
  7203  0028DC  5C12               	subwf	(??_atoi+2)^0,w,c
  7204  0028DE  A0D8               	btfss	status,0,c
  7205  0028E0  EF74  F014         	goto	u6911
  7206  0028E4  EF76  F014         	goto	u6910
  7207  0028E8                     u6911:
  7208  0028E8  EF78  F014         	goto	l5134
  7209  0028EC                     u6910:
  7210  0028EC  0E00               	movlw	0
  7211  0028EE  6E1A               	movwf	_atoi$946^0,c
  7212  0028F0                     l5134:
  7213  0028F0  C01A  F016         	movff	_atoi$946,_atoi$945
  7214  0028F4  6A17               	clrf	(_atoi$945+1)^0,c
  7215  0028F6  5016               	movf	_atoi$945^0,w,c
  7216  0028F8  1017               	iorwf	(_atoi$945+1)^0,w,c
  7217  0028FA  A4D8               	btfss	status,2,c
  7218  0028FC  EF82  F014         	goto	u6921
  7219  002900  EF84  F014         	goto	u6920
  7220  002904                     u6921:
  7221  002904  EF49  F014         	goto	l5124
  7222  002908                     u6920:
  7223  002908  EF8E  F014         	goto	l5144
  7224  00290C                     l5140:
  7225  00290C  0E00               	movlw	0
  7226  00290E  6E15               	movwf	(atoi@neg+1)^0,c
  7227  002910  0E01               	movlw	1
  7228  002912  6E14               	movwf	atoi@neg^0,c
  7229  002914                     l5142:
  7230  002914  4A0E               	infsnz	atoi@s^0,f,c
  7231  002916  2A0F               	incf	(atoi@s+1)^0,f,c
  7232  002918  EFC3  F014         	goto	l5150
  7233  00291C                     l5144:
  7234  00291C  C00E  FFF6         	movff	atoi@s,tblptrl
  7235  002920  C00F  FFF7         	movff	atoi@s+1,tblptrh
  7236  002924                     	if	0	;tblptru may be non-zero
  7237  002924                     	endif
  7238  002924                     	if	0	;tblptru may be non-zero
  7239  002924                     	endif
  7240  002924  0008               	tblrd		*
  7241  002926  50F5               	movf	tablat,w,c
  7242  002928  6E10               	movwf	??_atoi^0,c
  7243  00292A  6A11               	clrf	(??_atoi+1)^0,c
  7244                           
  7245                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7246                           ; Switch size 1, requested type "simple"
  7247                           ; Number of cases is 1, Range of values is 0 to 0
  7248                           ; switch strategies available:
  7249                           ; Name         Instructions Cycles
  7250                           ; simple_byte            4     3 (average)
  7251                           ;	Chosen strategy is simple_byte
  7252  00292C  5011               	movf	(??_atoi+1)^0,w,c
  7253  00292E  0A00               	xorlw	0	; case 0
  7254  002930  B4D8               	btfsc	status,2,c
  7255  002932  EF9D  F014         	goto	l5334
  7256  002936  EFC3  F014         	goto	l5150
  7257  00293A                     l5334:
  7258                           
  7259                           ; Switch size 1, requested type "simple"
  7260                           ; Number of cases is 2, Range of values is 43 to 45
  7261                           ; switch strategies available:
  7262                           ; Name         Instructions Cycles
  7263                           ; simple_byte            7     4 (average)
  7264                           ;	Chosen strategy is simple_byte
  7265  00293A  5010               	movf	??_atoi^0,w,c
  7266  00293C  0A2B               	xorlw	43	; case 43
  7267  00293E  B4D8               	btfsc	status,2,c
  7268  002940  EF8A  F014         	goto	l5142
  7269  002944  0A06               	xorlw	6	; case 45
  7270  002946  B4D8               	btfsc	status,2,c
  7271  002948  EF86  F014         	goto	l5140
  7272  00294C  EFC3  F014         	goto	l5150
  7273  002950                     l5146:
  7274  002950  C01B  F007         	movff	atoi@n,___wmul@multiplier
  7275  002954  C01C  F008         	movff	atoi@n+1,___wmul@multiplier+1
  7276  002958  0E00               	movlw	0
  7277  00295A  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  7278  00295C  0E0A               	movlw	10
  7279  00295E  6E09               	movwf	___wmul@multiplicand^0,c
  7280  002960  EC92  F01B         	call	___wmul	;wreg free
  7281  002964  C00E  FFF6         	movff	atoi@s,tblptrl
  7282  002968  C00F  FFF7         	movff	atoi@s+1,tblptrh
  7283  00296C                     	if	0	;tblptru may be non-zero
  7284  00296C                     	endif
  7285  00296C                     	if	0	;tblptru may be non-zero
  7286  00296C                     	endif
  7287  00296C  0008               	tblrd		*
  7288  00296E  50F5               	movf	tablat,w,c
  7289  002970  5E07               	subwf	?___wmul^0,f,c
  7290  002972  0E00               	movlw	0
  7291  002974  5A08               	subwfb	(?___wmul+1)^0,f,c
  7292  002976  0E30               	movlw	48
  7293  002978  2407               	addwf	?___wmul^0,w,c
  7294  00297A  6E1B               	movwf	atoi@n^0,c
  7295  00297C  0E00               	movlw	0
  7296  00297E  2008               	addwfc	(?___wmul+1)^0,w,c
  7297  002980  6E1C               	movwf	(atoi@n+1)^0,c
  7298  002982  EF8A  F014         	goto	l5142
  7299  002986                     l5150:
  7300  002986  0ED0               	movlw	208
  7301  002988  6E10               	movwf	??_atoi^0,c
  7302  00298A  0EFF               	movlw	255
  7303  00298C  6E11               	movwf	(??_atoi+1)^0,c
  7304  00298E  C00E  FFF6         	movff	atoi@s,tblptrl
  7305  002992  C00F  FFF7         	movff	atoi@s+1,tblptrh
  7306  002996                     	if	0	;tblptru may be non-zero
  7307  002996                     	endif
  7308  002996                     	if	0	;tblptru may be non-zero
  7309  002996                     	endif
  7310  002996  0008               	tblrd		*
  7311  002998  50F5               	movf	tablat,w,c
  7312  00299A  6E12               	movwf	(??_atoi+2)^0,c
  7313  00299C  6A13               	clrf	(??_atoi+3)^0,c
  7314  00299E  5010               	movf	??_atoi^0,w,c
  7315  0029A0  2612               	addwf	(??_atoi+2)^0,f,c
  7316  0029A2  5011               	movf	(??_atoi+1)^0,w,c
  7317  0029A4  2213               	addwfc	(??_atoi+3)^0,f,c
  7318  0029A6  5013               	movf	(??_atoi+3)^0,w,c
  7319  0029A8  E10A               	bnz	u6930
  7320  0029AA  0E0A               	movlw	10
  7321  0029AC  5C12               	subwf	(??_atoi+2)^0,w,c
  7322  0029AE  A0D8               	btfss	status,0,c
  7323  0029B0  EFDC  F014         	goto	u6931
  7324  0029B4  EFDF  F014         	goto	u6930
  7325  0029B8                     u6931:
  7326  0029B8  0E01               	movlw	1
  7327  0029BA  EFE0  F014         	goto	u6940
  7328  0029BE                     u6930:
  7329  0029BE  0E00               	movlw	0
  7330  0029C0                     u6940:
  7331  0029C0  6E18               	movwf	_atoi$947^0,c
  7332  0029C2  6A19               	clrf	(_atoi$947+1)^0,c
  7333  0029C4  5018               	movf	_atoi$947^0,w,c
  7334  0029C6  1019               	iorwf	(_atoi$947+1)^0,w,c
  7335  0029C8  A4D8               	btfss	status,2,c
  7336  0029CA  EFE9  F014         	goto	u6951
  7337  0029CE  EFEB  F014         	goto	u6950
  7338  0029D2                     u6951:
  7339  0029D2  EFA8  F014         	goto	l5146
  7340  0029D6                     u6950:
  7341  0029D6  5014               	movf	atoi@neg^0,w,c
  7342  0029D8  1015               	iorwf	(atoi@neg+1)^0,w,c
  7343  0029DA  A4D8               	btfss	status,2,c
  7344  0029DC  EFF2  F014         	goto	u6961
  7345  0029E0  EFF4  F014         	goto	u6960
  7346  0029E4                     u6961:
  7347  0029E4  EF02  F015         	goto	l996
  7348  0029E8                     u6960:
  7349  0029E8  C01B  F010         	movff	atoi@n,??_atoi
  7350  0029EC  C01C  F011         	movff	atoi@n+1,??_atoi+1
  7351  0029F0  1E10               	comf	??_atoi^0,f,c
  7352  0029F2  1E11               	comf	(??_atoi+1)^0,f,c
  7353  0029F4  4A10               	infsnz	??_atoi^0,f,c
  7354  0029F6  2A11               	incf	(??_atoi+1)^0,f,c
  7355  0029F8  C010  F00E         	movff	??_atoi,?_atoi
  7356  0029FC  C011  F00F         	movff	??_atoi+1,?_atoi+1
  7357  002A00  EF06  F015         	goto	l999
  7358  002A04                     l996:
  7359  002A04  C01B  F00E         	movff	atoi@n,?_atoi
  7360  002A08  C01C  F00F         	movff	atoi@n+1,?_atoi+1
  7361  002A0C                     l999:
  7362  002A0C  0012               	return		;funcret
  7363  002A0E                     __end_of_atoi:
  7364                           	opt callstack 0
  7365                           
  7366 ;; *************** function _isspace *****************
  7367 ;; Defined at:
  7368 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;  c               2    6[COMRAM] int 
  7371 ;; Auto vars:     Size  Location     Type
  7372 ;;		None
  7373 ;; Return value:  Size  Location     Type
  7374 ;;                  2    6[COMRAM] int 
  7375 ;; Registers used:
  7376 ;;		wreg, status,2, status,0
  7377 ;; Tracked objects:
  7378 ;;		On entry : 0/0
  7379 ;;		On exit  : 0/0
  7380 ;;		Unchanged: 0/0
  7381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7382 ;;      Params:         2       0       0       0       0       0       0       0       0
  7383 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7384 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7385 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7386 ;;Total ram usage:        7 bytes
  7387 ;; Hardware stack levels used:    1
  7388 ;; Hardware stack levels required when called:    2
  7389 ;; This function calls:
  7390 ;;		Nothing
  7391 ;; This function is called by:
  7392 ;;		_atoi
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           	psect	text27
  7397  0033FA                     __ptext27:
  7398                           	opt callstack 0
  7399  0033FA                     _isspace:
  7400                           	opt callstack 24
  7401  0033FA  0E01               	movlw	1
  7402  0033FC  6E0D               	movwf	_isspace$976^0,c
  7403  0033FE  0E20               	movlw	32
  7404  003400  1807               	xorwf	isspace@c^0,w,c
  7405  003402  1008               	iorwf	(isspace@c+1)^0,w,c
  7406  003404  B4D8               	btfsc	status,2,c
  7407  003406  EF07  F01A         	goto	u6361
  7408  00340A  EF09  F01A         	goto	u6360
  7409  00340E                     u6361:
  7410  00340E  EF22  F01A         	goto	l4820
  7411  003412                     u6360:
  7412  003412  0EF7               	movlw	247
  7413  003414  6E09               	movwf	??_isspace^0,c
  7414  003416  0EFF               	movlw	255
  7415  003418  6E0A               	movwf	(??_isspace+1)^0,c
  7416  00341A  C007  F00B         	movff	isspace@c,??_isspace+2
  7417  00341E  C008  F00C         	movff	isspace@c+1,??_isspace+3
  7418  003422  5009               	movf	??_isspace^0,w,c
  7419  003424  260B               	addwf	(??_isspace+2)^0,f,c
  7420  003426  500A               	movf	(??_isspace+1)^0,w,c
  7421  003428  220C               	addwfc	(??_isspace+3)^0,f,c
  7422  00342A  500C               	movf	(??_isspace+3)^0,w,c
  7423  00342C  E109               	bnz	u6370
  7424  00342E  0E05               	movlw	5
  7425  003430  5C0B               	subwf	(??_isspace+2)^0,w,c
  7426  003432  A0D8               	btfss	status,0,c
  7427  003434  EF1E  F01A         	goto	u6371
  7428  003438  EF20  F01A         	goto	u6370
  7429  00343C                     u6371:
  7430  00343C  EF22  F01A         	goto	l4820
  7431  003440                     u6370:
  7432  003440  0E00               	movlw	0
  7433  003442  6E0D               	movwf	_isspace$976^0,c
  7434  003444                     l4820:
  7435  003444  C00D  F007         	movff	_isspace$976,?_isspace
  7436  003448  6A08               	clrf	(?_isspace+1)^0,c
  7437  00344A  0012               	return		;funcret
  7438  00344C                     __end_of_isspace:
  7439                           	opt callstack 0
  7440                           
  7441 ;; *************** function _isdigit *****************
  7442 ;; Defined at:
  7443 ;;		line 5 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
  7444 ;; Parameters:    Size  Location     Type
  7445 ;;  c               2    6[COMRAM] int 
  7446 ;; Auto vars:     Size  Location     Type
  7447 ;;		None
  7448 ;; Return value:  Size  Location     Type
  7449 ;;                  2    6[COMRAM] int 
  7450 ;; Registers used:
  7451 ;;		wreg, status,2, status,0
  7452 ;; Tracked objects:
  7453 ;;		On entry : 0/0
  7454 ;;		On exit  : 0/0
  7455 ;;		Unchanged: 0/0
  7456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7457 ;;      Params:         2       0       0       0       0       0       0       0       0
  7458 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7459 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7460 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7461 ;;Total ram usage:        6 bytes
  7462 ;; Hardware stack levels used:    1
  7463 ;; Hardware stack levels required when called:    2
  7464 ;; This function calls:
  7465 ;;		Nothing
  7466 ;; This function is called by:
  7467 ;;		_vfpfcnvrt
  7468 ;;		_atoi
  7469 ;; This function uses a non-reentrant model
  7470 ;;
  7471                           
  7472                           	psect	text28
  7473  003622                     __ptext28:
  7474                           	opt callstack 0
  7475  003622                     _isdigit:
  7476                           	opt callstack 25
  7477  003622  0ED0               	movlw	208
  7478  003624  6E09               	movwf	??_isdigit^0,c
  7479  003626  0EFF               	movlw	255
  7480  003628  6E0A               	movwf	(??_isdigit+1)^0,c
  7481  00362A  C007  F00B         	movff	isdigit@c,??_isdigit+2
  7482  00362E  C008  F00C         	movff	isdigit@c+1,??_isdigit+3
  7483  003632  5009               	movf	??_isdigit^0,w,c
  7484  003634  260B               	addwf	(??_isdigit+2)^0,f,c
  7485  003636  500A               	movf	(??_isdigit+1)^0,w,c
  7486  003638  220C               	addwfc	(??_isdigit+3)^0,f,c
  7487  00363A  500C               	movf	(??_isdigit+3)^0,w,c
  7488  00363C  E10A               	bnz	u5640
  7489  00363E  0E0A               	movlw	10
  7490  003640  5C0B               	subwf	(??_isdigit+2)^0,w,c
  7491  003642  A0D8               	btfss	status,0,c
  7492  003644  EF26  F01B         	goto	u5641
  7493  003648  EF29  F01B         	goto	u5640
  7494  00364C                     u5641:
  7495  00364C  0E01               	movlw	1
  7496  00364E  EF2A  F01B         	goto	u5650
  7497  003652                     u5640:
  7498  003652  0E00               	movlw	0
  7499  003654                     u5650:
  7500  003654  6E07               	movwf	?_isdigit^0,c
  7501  003656  6A08               	clrf	(?_isdigit+1)^0,c
  7502  003658  0012               	return		;funcret
  7503  00365A                     __end_of_isdigit:
  7504                           	opt callstack 0
  7505                           
  7506 ;; *************** function ___wmul *****************
  7507 ;; Defined at:
  7508 ;;		line 15 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;  multiplier      2    6[COMRAM] unsigned int 
  7511 ;;  multiplicand    2    8[COMRAM] unsigned int 
  7512 ;; Auto vars:     Size  Location     Type
  7513 ;;  product         2   10[COMRAM] unsigned int 
  7514 ;; Return value:  Size  Location     Type
  7515 ;;                  2    6[COMRAM] unsigned int 
  7516 ;; Registers used:
  7517 ;;		wreg, status,2, status,0, prodl, prodh
  7518 ;; Tracked objects:
  7519 ;;		On entry : 0/0
  7520 ;;		On exit  : 0/0
  7521 ;;		Unchanged: 0/0
  7522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7523 ;;      Params:         4       0       0       0       0       0       0       0       0
  7524 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7526 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7527 ;;Total ram usage:        6 bytes
  7528 ;; Hardware stack levels used:    1
  7529 ;; Hardware stack levels required when called:    2
  7530 ;; This function calls:
  7531 ;;		Nothing
  7532 ;; This function is called by:
  7533 ;;		_atoi
  7534 ;; This function uses a non-reentrant model
  7535 ;;
  7536                           
  7537                           	psect	text29
  7538  003724                     __ptext29:
  7539                           	opt callstack 0
  7540  003724                     ___wmul:
  7541                           	opt callstack 24
  7542  003724  5007               	movf	___wmul@multiplier^0,w,c
  7543  003726  0209               	mulwf	___wmul@multiplicand^0,c
  7544  003728  CFF3 F00B          	movff	prodl,___wmul@product
  7545  00372C  CFF4 F00C          	movff	prodh,___wmul@product+1
  7546  003730  5007               	movf	___wmul@multiplier^0,w,c
  7547  003732  020A               	mulwf	(___wmul@multiplicand+1)^0,c
  7548  003734  50F3               	movf	243,w,c
  7549  003736  260C               	addwf	(___wmul@product+1)^0,f,c
  7550  003738  5008               	movf	(___wmul@multiplier+1)^0,w,c
  7551  00373A  0209               	mulwf	___wmul@multiplicand^0,c
  7552  00373C  50F3               	movf	243,w,c
  7553  00373E  260C               	addwf	(___wmul@product+1)^0,f,c
  7554  003740  C00B  F007         	movff	___wmul@product,?___wmul
  7555  003744  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  7556  003748  0012               	return		;funcret
  7557  00374A                     __end_of___wmul:
  7558                           	opt callstack 0
  7559                           
  7560 ;; *************** function _LCD_String_xy *****************
  7561 ;; Defined at:
  7562 ;;		line 136 in file "main.c"
  7563 ;; Parameters:    Size  Location     Type
  7564 ;;  row             1    wreg     unsigned char 
  7565 ;;  pos             1   15[COMRAM] unsigned char 
  7566 ;;  msg             2   16[COMRAM] PTR const unsigned char 
  7567 ;;		 -> main@result(10), 
  7568 ;; Auto vars:     Size  Location     Type
  7569 ;;  row             1   18[COMRAM] unsigned char 
  7570 ;;  location        1   19[COMRAM] unsigned char 
  7571 ;; Return value:  Size  Location     Type
  7572 ;;                  1    wreg      void 
  7573 ;; Registers used:
  7574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7575 ;; Tracked objects:
  7576 ;;		On entry : 0/0
  7577 ;;		On exit  : 0/0
  7578 ;;		Unchanged: 0/0
  7579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7580 ;;      Params:         3       0       0       0       0       0       0       0       0
  7581 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7582 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7583 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7584 ;;Total ram usage:        5 bytes
  7585 ;; Hardware stack levels used:    1
  7586 ;; Hardware stack levels required when called:    5
  7587 ;; This function calls:
  7588 ;;		_LCD_Command
  7589 ;;		_LCD_String
  7590 ;; This function is called by:
  7591 ;;		_main
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595                           	psect	text30
  7596  003572                     __ptext30:
  7597                           	opt callstack 0
  7598  003572                     _LCD_String_xy:
  7599                           	opt callstack 25
  7600                           
  7601                           ;incstack = 0
  7602                           ;LCD_String_xy@row stored from wreg
  7603  003572  6E13               	movwf	LCD_String_xy@row^0,c
  7604  003574                     
  7605                           ;main.c: 139:     if(row<=1)
  7606  003574  0E02               	movlw	2
  7607  003576  6013               	cpfslt	LCD_String_xy@row^0,c
  7608  003578  EFC0  F01A         	goto	u4861
  7609  00357C  EFC2  F01A         	goto	u4860
  7610  003580                     u4861:
  7611  003580  EFCB  F01A         	goto	l3964
  7612  003584                     u4860:
  7613  003584                     
  7614                           ;main.c: 140:     {;main.c: 141:         location=(0x80) | ((pos) & 0x0f);
  7615  003584  5010               	movf	LCD_String_xy@pos^0,w,c
  7616  003586  0B0F               	andlw	15
  7617  003588  0980               	iorlw	128
  7618  00358A  6E14               	movwf	LCD_String_xy@location^0,c
  7619  00358C                     
  7620                           ;main.c: 142:         LCD_Command(location);
  7621  00358C  5014               	movf	LCD_String_xy@location^0,w,c
  7622  00358E  ECC7  F01B         	call	_LCD_Command
  7623                           
  7624                           ;main.c: 143:     }
  7625  003592  EFD2  F01A         	goto	l3968
  7626  003596                     l3964:
  7627                           
  7628                           ;main.c: 145:     {;main.c: 146:         location=(0xC0) | ((pos) & 0x0f);
  7629  003596  5010               	movf	LCD_String_xy@pos^0,w,c
  7630  003598  0B0F               	andlw	15
  7631  00359A  09C0               	iorlw	192
  7632  00359C  6E14               	movwf	LCD_String_xy@location^0,c
  7633  00359E                     
  7634                           ;main.c: 147:         LCD_Command(location);
  7635  00359E  5014               	movf	LCD_String_xy@location^0,w,c
  7636  0035A0  ECC7  F01B         	call	_LCD_Command
  7637  0035A4                     l3968:
  7638                           
  7639                           ;main.c: 149:     LCD_String(msg);
  7640  0035A4  C011  F00E         	movff	LCD_String_xy@msg,LCD_String@msg
  7641  0035A8  C012  F00F         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  7642  0035AC  EC7A  F01B         	call	_LCD_String	;wreg free
  7643  0035B0  0012               	return		;funcret
  7644  0035B2                     __end_of_LCD_String_xy:
  7645                           	opt callstack 0
  7646                           
  7647 ;; *************** function _LCD_String *****************
  7648 ;; Defined at:
  7649 ;;		line 126 in file "main.c"
  7650 ;; Parameters:    Size  Location     Type
  7651 ;;  msg             2   13[COMRAM] PTR const unsigned char 
  7652 ;;		 -> main@result(10), 
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;		None
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  1    wreg      void 
  7657 ;; Registers used:
  7658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7664 ;;      Params:         2       0       0       0       0       0       0       0       0
  7665 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7666 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7667 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7668 ;;Total ram usage:        2 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; Hardware stack levels required when called:    4
  7671 ;; This function calls:
  7672 ;;		_LCD_Char
  7673 ;; This function is called by:
  7674 ;;		_LCD_String_xy
  7675 ;; This function uses a non-reentrant model
  7676 ;;
  7677                           
  7678                           	psect	text31
  7679  0036F4                     __ptext31:
  7680                           	opt callstack 0
  7681  0036F4                     _LCD_String:
  7682                           	opt callstack 25
  7683  0036F4                     
  7684                           ;main.c: 126: void LCD_String(const char *msg);main.c: 127: {;main.c: 128:  while((*msg)
      +                          !=0)
  7685  0036F4  EF85  F01B         	goto	l3852
  7686  0036F8                     l3848:
  7687                           
  7688                           ;main.c: 129:  {;main.c: 130:    LCD_Char(*msg);
  7689  0036F8  C00E  FFD9         	movff	LCD_String@msg,fsr2l
  7690  0036FC  C00F  FFDA         	movff	LCD_String@msg+1,fsr2h
  7691  003700  50DF               	movf	indf2,w,c
  7692  003702  ECB8  F01B         	call	_LCD_Char
  7693  003706                     
  7694                           ;main.c: 131:    msg++;
  7695  003706  4A0E               	infsnz	LCD_String@msg^0,f,c
  7696  003708  2A0F               	incf	(LCD_String@msg+1)^0,f,c
  7697  00370A                     l3852:
  7698                           
  7699                           ;main.c: 128:  while((*msg)!=0)
  7700  00370A  C00E  FFD9         	movff	LCD_String@msg,fsr2l
  7701  00370E  C00F  FFDA         	movff	LCD_String@msg+1,fsr2h
  7702  003712  50DF               	movf	indf2,w,c
  7703  003714  A4D8               	btfss	status,2,c
  7704  003716  EF8F  F01B         	goto	u4731
  7705  00371A  EF91  F01B         	goto	u4730
  7706  00371E                     u4731:
  7707  00371E  EF7C  F01B         	goto	l3848
  7708  003722                     u4730:
  7709  003722  0012               	return		;funcret
  7710  003724                     __end_of_LCD_String:
  7711                           	opt callstack 0
  7712                           
  7713 ;; *************** function _LCD_Char *****************
  7714 ;; Defined at:
  7715 ;;		line 116 in file "main.c"
  7716 ;; Parameters:    Size  Location     Type
  7717 ;;  dat             1    wreg     unsigned char 
  7718 ;; Auto vars:     Size  Location     Type
  7719 ;;  dat             1   12[COMRAM] unsigned char 
  7720 ;; Return value:  Size  Location     Type
  7721 ;;                  1    wreg      void 
  7722 ;; Registers used:
  7723 ;;		wreg, status,2, status,0, cstack
  7724 ;; Tracked objects:
  7725 ;;		On entry : 0/0
  7726 ;;		On exit  : 0/0
  7727 ;;		Unchanged: 0/0
  7728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7729 ;;      Params:         0       0       0       0       0       0       0       0       0
  7730 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7731 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7732 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7733 ;;Total ram usage:        1 bytes
  7734 ;; Hardware stack levels used:    1
  7735 ;; Hardware stack levels required when called:    3
  7736 ;; This function calls:
  7737 ;;		_MSdelay
  7738 ;;		_process_data
  7739 ;; This function is called by:
  7740 ;;		_LCD_String
  7741 ;; This function uses a non-reentrant model
  7742 ;;
  7743                           
  7744                           	psect	text32
  7745  003770                     __ptext32:
  7746                           	opt callstack 0
  7747  003770                     _LCD_Char:
  7748                           	opt callstack 25
  7749                           
  7750                           ;incstack = 0
  7751                           ;LCD_Char@dat stored from wreg
  7752  003770  6E0D               	movwf	LCD_Char@dat^0,c
  7753  003772                     
  7754                           ;main.c: 116: void LCD_Char(char dat);main.c: 117: {;main.c: 118:  process_data(dat);
  7755  003772  500D               	movf	LCD_Char@dat^0,w,c
  7756  003774  ECD6  F01B         	call	_process_data
  7757  003778                     
  7758                           ;main.c: 119:  LATD2 = 1;
  7759  003778  848C               	bsf	3980,2,c	;volatile
  7760  00377A                     
  7761                           ;main.c: 120:  LATD3=1;
  7762  00377A  868C               	bsf	3980,3,c	;volatile
  7763  00377C                     
  7764                           ;main.c: 121:  __nop();
  7765  00377C  F000               	nop	
  7766  00377E                     
  7767                           ;main.c: 122:  LATD3=0;
  7768  00377E  968C               	bcf	3980,3,c	;volatile
  7769                           
  7770                           ;main.c: 123:  MSdelay(1);
  7771  003780  0E00               	movlw	0
  7772  003782  6E08               	movwf	(MSdelay@val+1)^0,c
  7773  003784  0E01               	movlw	1
  7774  003786  6E07               	movwf	MSdelay@val^0,c
  7775  003788  EC4F  F01A         	call	_MSdelay	;wreg free
  7776  00378C  0012               	return		;funcret
  7777  00378E                     __end_of_LCD_Char:
  7778                           	opt callstack 0
  7779                           
  7780 ;; *************** function _LCD_Init *****************
  7781 ;; Defined at:
  7782 ;;		line 89 in file "main.c"
  7783 ;; Parameters:    Size  Location     Type
  7784 ;;		None
  7785 ;; Auto vars:     Size  Location     Type
  7786 ;;		None
  7787 ;; Return value:  Size  Location     Type
  7788 ;;                  1    wreg      void 
  7789 ;; Registers used:
  7790 ;;		wreg, status,2, status,0, cstack
  7791 ;; Tracked objects:
  7792 ;;		On entry : 0/0
  7793 ;;		On exit  : 0/0
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7796 ;;      Params:         0       0       0       0       0       0       0       0       0
  7797 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7798 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7799 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7800 ;;Total ram usage:        0 bytes
  7801 ;; Hardware stack levels used:    1
  7802 ;; Hardware stack levels required when called:    4
  7803 ;; This function calls:
  7804 ;;		_LCD_Command
  7805 ;;		_MSdelay
  7806 ;; This function is called by:
  7807 ;;		_main
  7808 ;; This function uses a non-reentrant model
  7809 ;;
  7810                           
  7811                           	psect	text33
  7812  0036C2                     __ptext33:
  7813                           	opt callstack 0
  7814  0036C2                     _LCD_Init:
  7815                           	opt callstack 26
  7816  0036C2                     
  7817                           ;main.c: 91:     MSdelay(15);
  7818  0036C2  0E00               	movlw	0
  7819  0036C4  6E08               	movwf	(MSdelay@val+1)^0,c
  7820  0036C6  0E0F               	movlw	15
  7821  0036C8  6E07               	movwf	MSdelay@val^0,c
  7822  0036CA  EC4F  F01A         	call	_MSdelay	;wreg free
  7823  0036CE                     
  7824                           ;main.c: 92:     TRISA = 0x00;
  7825  0036CE  0E00               	movlw	0
  7826  0036D0  6E92               	movwf	146,c	;volatile
  7827  0036D2                     
  7828                           ;main.c: 93:     TRISE = 0x04;
  7829  0036D2  0E04               	movlw	4
  7830  0036D4  6E96               	movwf	150,c	;volatile
  7831  0036D6                     
  7832                           ;main.c: 94:     TRISD = 0x00;
  7833  0036D6  0E00               	movlw	0
  7834  0036D8  6E95               	movwf	149,c	;volatile
  7835  0036DA                     
  7836                           ;main.c: 95:     LCD_Command(0x38);
  7837  0036DA  0E38               	movlw	56
  7838  0036DC  ECC7  F01B         	call	_LCD_Command
  7839  0036E0                     
  7840                           ;main.c: 96:     LCD_Command(0x01);
  7841  0036E0  0E01               	movlw	1
  7842  0036E2  ECC7  F01B         	call	_LCD_Command
  7843  0036E6                     
  7844                           ;main.c: 97:     LCD_Command(0x0c);
  7845  0036E6  0E0C               	movlw	12
  7846  0036E8  ECC7  F01B         	call	_LCD_Command
  7847  0036EC                     
  7848                           ;main.c: 98:     LCD_Command(0x06);
  7849  0036EC  0E06               	movlw	6
  7850  0036EE  ECC7  F01B         	call	_LCD_Command
  7851  0036F2  0012               	return		;funcret
  7852  0036F4                     __end_of_LCD_Init:
  7853                           	opt callstack 0
  7854                           
  7855 ;; *************** function _LCD_Command *****************
  7856 ;; Defined at:
  7857 ;;		line 106 in file "main.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;  cmd             1    wreg     unsigned char 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;  cmd             1   12[COMRAM] unsigned char 
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  1    wreg      void 
  7864 ;; Registers used:
  7865 ;;		wreg, status,2, status,0, cstack
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7871 ;;      Params:         0       0       0       0       0       0       0       0       0
  7872 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7873 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7874 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7875 ;;Total ram usage:        1 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:    3
  7878 ;; This function calls:
  7879 ;;		_MSdelay
  7880 ;;		_process_data
  7881 ;; This function is called by:
  7882 ;;		_LCD_Init
  7883 ;;		_LCD_String_xy
  7884 ;;		_LCD_Clear
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           
  7888                           	psect	text34
  7889  00378E                     __ptext34:
  7890                           	opt callstack 0
  7891  00378E                     _LCD_Command:
  7892                           	opt callstack 26
  7893                           
  7894                           ;incstack = 0
  7895                           ;LCD_Command@cmd stored from wreg
  7896  00378E  6E0D               	movwf	LCD_Command@cmd^0,c
  7897  003790                     
  7898                           ;main.c: 106: void LCD_Command(char cmd );main.c: 107: {;main.c: 108:  process_data(cmd)
      +                          ;
  7899  003790  500D               	movf	LCD_Command@cmd^0,w,c
  7900  003792  ECD6  F01B         	call	_process_data
  7901  003796                     
  7902                           ;main.c: 109:  LATD2 = 0;
  7903  003796  948C               	bcf	3980,2,c	;volatile
  7904  003798                     
  7905                           ;main.c: 110:  LATD3 = 1;
  7906  003798  868C               	bsf	3980,3,c	;volatile
  7907  00379A                     
  7908                           ;main.c: 111:  __nop();
  7909  00379A  F000               	nop	
  7910  00379C                     
  7911                           ;main.c: 112:  LATD3 = 0;
  7912  00379C  968C               	bcf	3980,3,c	;volatile
  7913                           
  7914                           ;main.c: 113:  MSdelay(3);
  7915  00379E  0E00               	movlw	0
  7916  0037A0  6E08               	movwf	(MSdelay@val+1)^0,c
  7917  0037A2  0E03               	movlw	3
  7918  0037A4  6E07               	movwf	MSdelay@val^0,c
  7919  0037A6  EC4F  F01A         	call	_MSdelay	;wreg free
  7920  0037AA  0012               	return		;funcret
  7921  0037AC                     __end_of_LCD_Command:
  7922                           	opt callstack 0
  7923                           
  7924 ;; *************** function _process_data *****************
  7925 ;; Defined at:
  7926 ;;		line 65 in file "main.c"
  7927 ;; Parameters:    Size  Location     Type
  7928 ;;  data            1    wreg     unsigned char 
  7929 ;; Auto vars:     Size  Location     Type
  7930 ;;  data            1    6[COMRAM] unsigned char 
  7931 ;; Return value:  Size  Location     Type
  7932 ;;                  1    wreg      void 
  7933 ;; Registers used:
  7934 ;;		wreg, status,2, status,0
  7935 ;; Tracked objects:
  7936 ;;		On entry : 0/0
  7937 ;;		On exit  : 0/0
  7938 ;;		Unchanged: 0/0
  7939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7940 ;;      Params:         0       0       0       0       0       0       0       0       0
  7941 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7942 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7943 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7944 ;;Total ram usage:        1 bytes
  7945 ;; Hardware stack levels used:    1
  7946 ;; Hardware stack levels required when called:    2
  7947 ;; This function calls:
  7948 ;;		Nothing
  7949 ;; This function is called by:
  7950 ;;		_LCD_Command
  7951 ;;		_LCD_Char
  7952 ;; This function uses a non-reentrant model
  7953 ;;
  7954                           
  7955                           	psect	text35
  7956  0037AC                     __ptext35:
  7957                           	opt callstack 0
  7958  0037AC                     _process_data:
  7959                           	opt callstack 25
  7960                           
  7961                           ;incstack = 0
  7962                           ;process_data@data stored from wreg
  7963  0037AC  6E07               	movwf	process_data@data^0,c
  7964  0037AE                     
  7965                           ;main.c: 66:     LATA = data;
  7966  0037AE  C007  FF89         	movff	process_data@data,3977	;volatile
  7967  0037B2                     
  7968                           ;main.c: 67:     LATE = (data >> 6) & 0x03;
  7969  0037B2  4407               	rlncf	process_data@data^0,w,c
  7970  0037B4  46E8               	rlncf	wreg,f,c
  7971  0037B6  0B03               	andlw	3
  7972  0037B8  0B03               	andlw	3
  7973  0037BA  6E8D               	movwf	141,c	;volatile
  7974  0037BC  0012               	return		;funcret
  7975  0037BE                     __end_of_process_data:
  7976                           	opt callstack 0
  7977                           
  7978 ;; *************** function _MSdelay *****************
  7979 ;; Defined at:
  7980 ;;		line 179 in file "main.c"
  7981 ;; Parameters:    Size  Location     Type
  7982 ;;  val             2    6[COMRAM] unsigned int 
  7983 ;; Auto vars:     Size  Location     Type
  7984 ;;  j               2   10[COMRAM] unsigned int 
  7985 ;;  i               2    8[COMRAM] unsigned int 
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  1    wreg      void 
  7988 ;; Registers used:
  7989 ;;		wreg, status,2, status,0
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7995 ;;      Params:         2       0       0       0       0       0       0       0       0
  7996 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7997 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7998 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7999 ;;Total ram usage:        6 bytes
  8000 ;; Hardware stack levels used:    1
  8001 ;; Hardware stack levels required when called:    2
  8002 ;; This function calls:
  8003 ;;		Nothing
  8004 ;; This function is called by:
  8005 ;;		_main
  8006 ;;		_LCD_Init
  8007 ;;		_LCD_Command
  8008 ;;		_LCD_Char
  8009 ;; This function uses a non-reentrant model
  8010 ;;
  8011                           
  8012                           	psect	text36
  8013  00349E                     __ptext36:
  8014                           	opt callstack 0
  8015  00349E                     _MSdelay:
  8016                           	opt callstack 28
  8017  00349E                     
  8018                           ;main.c: 179: void MSdelay(unsigned int val);main.c: 180: {;main.c: 181:      unsigned i
      +                          nt i,j;;main.c: 182:         for(i=0;i<val;i++)
  8019  00349E  0E00               	movlw	0
  8020  0034A0  6E0A               	movwf	(MSdelay@i+1)^0,c
  8021  0034A2  0E00               	movlw	0
  8022  0034A4  6E09               	movwf	MSdelay@i^0,c
  8023  0034A6  EF68  F01A         	goto	l3370
  8024  0034AA                     l3358:
  8025                           
  8026                           ;main.c: 183:             for(j=0;j<165;j++);
  8027  0034AA  0E00               	movlw	0
  8028  0034AC  6E0C               	movwf	(MSdelay@j+1)^0,c
  8029  0034AE  0E00               	movlw	0
  8030  0034B0  6E0B               	movwf	MSdelay@j^0,c
  8031  0034B2                     l3364:
  8032  0034B2  4A0B               	infsnz	MSdelay@j^0,f,c
  8033  0034B4  2A0C               	incf	(MSdelay@j+1)^0,f,c
  8034  0034B6  500C               	movf	(MSdelay@j+1)^0,w,c
  8035  0034B8  E109               	bnz	u3930
  8036  0034BA  0EA5               	movlw	165
  8037  0034BC  5C0B               	subwf	MSdelay@j^0,w,c
  8038  0034BE  A0D8               	btfss	status,0,c
  8039  0034C0  EF64  F01A         	goto	u3931
  8040  0034C4  EF66  F01A         	goto	u3930
  8041  0034C8                     u3931:
  8042  0034C8  EF59  F01A         	goto	l3364
  8043  0034CC                     u3930:
  8044  0034CC  4A09               	infsnz	MSdelay@i^0,f,c
  8045  0034CE  2A0A               	incf	(MSdelay@i+1)^0,f,c
  8046  0034D0                     l3370:
  8047  0034D0  5007               	movf	MSdelay@val^0,w,c
  8048  0034D2  5C09               	subwf	MSdelay@i^0,w,c
  8049  0034D4  5008               	movf	(MSdelay@val+1)^0,w,c
  8050  0034D6  580A               	subwfb	(MSdelay@i+1)^0,w,c
  8051  0034D8  A0D8               	btfss	status,0,c
  8052  0034DA  EF71  F01A         	goto	u3941
  8053  0034DE  EF73  F01A         	goto	u3940
  8054  0034E2                     u3941:
  8055  0034E2  EF55  F01A         	goto	l3358
  8056  0034E6                     u3940:
  8057  0034E6  0012               	return		;funcret
  8058  0034E8                     __end_of_MSdelay:
  8059                           	opt callstack 0
  8060                           
  8061 ;; *************** function _External_Interrupt_Init *****************
  8062 ;; Defined at:
  8063 ;;		line 70 in file "main.c"
  8064 ;; Parameters:    Size  Location     Type
  8065 ;;		None
  8066 ;; Auto vars:     Size  Location     Type
  8067 ;;		None
  8068 ;; Return value:  Size  Location     Type
  8069 ;;                  1    wreg      void 
  8070 ;; Registers used:
  8071 ;;		wreg, status,2
  8072 ;; Tracked objects:
  8073 ;;		On entry : 0/0
  8074 ;;		On exit  : 0/0
  8075 ;;		Unchanged: 0/0
  8076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8077 ;;      Params:         0       0       0       0       0       0       0       0       0
  8078 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8079 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8080 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8081 ;;Total ram usage:        0 bytes
  8082 ;; Hardware stack levels used:    1
  8083 ;; Hardware stack levels required when called:    2
  8084 ;; This function calls:
  8085 ;;		Nothing
  8086 ;; This function is called by:
  8087 ;;		_main
  8088 ;; This function uses a non-reentrant model
  8089 ;;
  8090                           
  8091                           	psect	text37
  8092  0037D0                     __ptext37:
  8093                           	opt callstack 0
  8094  0037D0                     _External_Interrupt_Init:
  8095                           	opt callstack 28
  8096  0037D0                     
  8097                           ;main.c: 72:     TRISBbits.TRISB0=1;
  8098  0037D0  8093               	bsf	147,0,c	;volatile
  8099  0037D2                     
  8100                           ;main.c: 77:     INTCON2=0x00;
  8101  0037D2  0E00               	movlw	0
  8102  0037D4  6EF1               	movwf	241,c	;volatile
  8103  0037D6                     
  8104                           ;main.c: 78:     INTCONbits.INT0IF=0;
  8105  0037D6  92F2               	bcf	242,1,c	;volatile
  8106  0037D8                     
  8107                           ;main.c: 79:     INTCONbits.INT0IE=1;
  8108  0037D8  88F2               	bsf	242,4,c	;volatile
  8109  0037DA                     
  8110                           ;main.c: 80:     INTCONbits.GIE=1;
  8111  0037DA  8EF2               	bsf	242,7,c	;volatile
  8112  0037DC  0012               	return		;funcret
  8113  0037DE                     __end_of_External_Interrupt_Init:
  8114                           	opt callstack 0
  8115                           
  8116 ;; *************** function _ADC_Read *****************
  8117 ;; Defined at:
  8118 ;;		line 163 in file "main.c"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;  channel         2   20[COMRAM] int 
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;  digital         4   26[COMRAM] float 
  8123 ;; Return value:  Size  Location     Type
  8124 ;;                  4   20[COMRAM] float 
  8125 ;; Registers used:
  8126 ;;		wreg, status,2, status,0, cstack
  8127 ;; Tracked objects:
  8128 ;;		On entry : 0/0
  8129 ;;		On exit  : 0/0
  8130 ;;		Unchanged: 0/0
  8131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8132 ;;      Params:         4       0       0       0       0       0       0       0       0
  8133 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8134 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8135 ;;      Totals:        10       0       0       0       0       0       0       0       0
  8136 ;;Total ram usage:       10 bytes
  8137 ;; Hardware stack levels used:    1
  8138 ;; Hardware stack levels required when called:    3
  8139 ;; This function calls:
  8140 ;;		___xxtofl
  8141 ;; This function is called by:
  8142 ;;		_main
  8143 ;; This function uses a non-reentrant model
  8144 ;;
  8145                           
  8146                           	psect	text38
  8147  003212                     __ptext38:
  8148                           	opt callstack 0
  8149  003212                     _ADC_Read:
  8150                           	opt callstack 27
  8151  003212                     
  8152                           ;main.c: 163: float ADC_Read(int channel);main.c: 164: {;main.c: 165:     float digital;
      +                          ;main.c: 166:     ADCON0 =(ADCON0 & 0b11000011)|((channel<<2) & 0b00111100);
  8153  003212  C015  F019         	movff	ADC_Read@channel,??_ADC_Read
  8154  003216  90D8               	bcf	status,0,c
  8155  003218  3619               	rlcf	??_ADC_Read^0,f,c
  8156  00321A  90D8               	bcf	status,0,c
  8157  00321C  3619               	rlcf	??_ADC_Read^0,f,c
  8158  00321E  0E3C               	movlw	60
  8159  003220  1619               	andwf	??_ADC_Read^0,f,c
  8160  003222  50C2               	movf	194,w,c	;volatile
  8161  003224  0BC3               	andlw	195
  8162  003226  1019               	iorwf	??_ADC_Read^0,w,c
  8163  003228  6EC2               	movwf	194,c	;volatile
  8164                           
  8165                           ;main.c: 169:     ADCON0 |= 0b11;
  8166  00322A  0E03               	movlw	3
  8167  00322C  12C2               	iorwf	194,f,c	;volatile
  8168  00322E                     l104:
  8169  00322E  B2C2               	btfsc	194,1,c	;volatile
  8170  003230  EF1C  F019         	goto	u4851
  8171  003234  EF1E  F019         	goto	u4850
  8172  003238                     u4851:
  8173  003238  EF17  F019         	goto	l104
  8174  00323C                     u4850:
  8175  00323C                     
  8176                           ;main.c: 174:     digital = (ADRESH*256) | (ADRESL);
  8177  00323C  50C3               	movf	195,w,c	;volatile
  8178  00323E  CFC4 F019          	movff	4036,??_ADC_Read	;volatile
  8179  003242  6A1A               	clrf	(??_ADC_Read+1)^0,c
  8180  003244  C019  F01A         	movff	??_ADC_Read,??_ADC_Read+1
  8181  003248  6A19               	clrf	??_ADC_Read^0,c
  8182  00324A  1219               	iorwf	??_ADC_Read^0,f,c
  8183  00324C  0E00               	movlw	0
  8184  00324E  121A               	iorwf	(??_ADC_Read+1)^0,f,c
  8185  003250  C019  F007         	movff	??_ADC_Read,___xxtofl@val
  8186  003254  C01A  F008         	movff	??_ADC_Read+1,___xxtofl@val+1
  8187  003258  0E00               	movlw	0
  8188  00325A  BE08               	btfsc	(___xxtofl@val+1)^0,7,c
  8189  00325C  0EFF               	movlw	-1
  8190  00325E  6E09               	movwf	(___xxtofl@val+2)^0,c
  8191  003260  6E0A               	movwf	(___xxtofl@val+3)^0,c
  8192  003262  0E01               	movlw	1
  8193  003264  EC65  F013         	call	___xxtofl
  8194  003268  C007  F01B         	movff	?___xxtofl,ADC_Read@digital
  8195  00326C  C008  F01C         	movff	?___xxtofl+1,ADC_Read@digital+1
  8196  003270  C009  F01D         	movff	?___xxtofl+2,ADC_Read@digital+2
  8197  003274  C00A  F01E         	movff	?___xxtofl+3,ADC_Read@digital+3
  8198  003278                     
  8199                           ;main.c: 176:     return(digital);
  8200  003278  C01B  F015         	movff	ADC_Read@digital,?_ADC_Read
  8201  00327C  C01C  F016         	movff	ADC_Read@digital+1,?_ADC_Read+1
  8202  003280  C01D  F017         	movff	ADC_Read@digital+2,?_ADC_Read+2
  8203  003284  C01E  F018         	movff	ADC_Read@digital+3,?_ADC_Read+3
  8204  003288  0012               	return		;funcret
  8205  00328A                     __end_of_ADC_Read:
  8206                           	opt callstack 0
  8207                           
  8208 ;; *************** function ___xxtofl *****************
  8209 ;; Defined at:
  8210 ;;		line 10 in file "/Applications/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  8211 ;; Parameters:    Size  Location     Type
  8212 ;;  sign            1    wreg     unsigned char 
  8213 ;;  val             4    6[COMRAM] long 
  8214 ;; Auto vars:     Size  Location     Type
  8215 ;;  sign            1   14[COMRAM] unsigned char 
  8216 ;;  arg             4   16[COMRAM] unsigned long 
  8217 ;;  exp             1   15[COMRAM] unsigned char 
  8218 ;; Return value:  Size  Location     Type
  8219 ;;                  4    6[COMRAM] unsigned char 
  8220 ;; Registers used:
  8221 ;;		wreg, status,2, status,0
  8222 ;; Tracked objects:
  8223 ;;		On entry : 0/0
  8224 ;;		On exit  : 0/0
  8225 ;;		Unchanged: 0/0
  8226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8227 ;;      Params:         4       0       0       0       0       0       0       0       0
  8228 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8229 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8230 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8231 ;;Total ram usage:       14 bytes
  8232 ;; Hardware stack levels used:    1
  8233 ;; Hardware stack levels required when called:    2
  8234 ;; This function calls:
  8235 ;;		Nothing
  8236 ;; This function is called by:
  8237 ;;		_ADC_Read
  8238 ;; This function uses a non-reentrant model
  8239 ;;
  8240                           
  8241                           	psect	text39
  8242  0026CA                     __ptext39:
  8243                           	opt callstack 0
  8244  0026CA                     ___xxtofl:
  8245                           	opt callstack 27
  8246                           
  8247                           ;incstack = 0
  8248                           ;___xxtofl@sign stored from wreg
  8249  0026CA  6E0F               	movwf	___xxtofl@sign^0,c
  8250  0026CC  500F               	movf	___xxtofl@sign^0,w,c
  8251  0026CE  B4D8               	btfsc	status,2,c
  8252  0026D0  EF6C  F013         	goto	u4751
  8253  0026D4  EF6E  F013         	goto	u4750
  8254  0026D8                     u4751:
  8255  0026D8  EF90  F013         	goto	l941
  8256  0026DC                     u4750:
  8257  0026DC  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  8258  0026DE  EF75  F013         	goto	u4760
  8259  0026E2  EF73  F013         	goto	u4761
  8260  0026E6                     u4761:
  8261  0026E6  EF90  F013         	goto	l941
  8262  0026EA                     u4760:
  8263  0026EA  C007  F00B         	movff	___xxtofl@val,??___xxtofl
  8264  0026EE  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
  8265  0026F2  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
  8266  0026F6  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
  8267  0026FA  1E0B               	comf	??___xxtofl^0,f,c
  8268  0026FC  1E0C               	comf	(??___xxtofl+1)^0,f,c
  8269  0026FE  1E0D               	comf	(??___xxtofl+2)^0,f,c
  8270  002700  1E0E               	comf	(??___xxtofl+3)^0,f,c
  8271  002702  2A0B               	incf	??___xxtofl^0,f,c
  8272  002704  0E00               	movlw	0
  8273  002706  220C               	addwfc	(??___xxtofl+1)^0,f,c
  8274  002708  220D               	addwfc	(??___xxtofl+2)^0,f,c
  8275  00270A  220E               	addwfc	(??___xxtofl+3)^0,f,c
  8276  00270C  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
  8277  002710  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
  8278  002714  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
  8279  002718  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
  8280  00271C  EF98  F013         	goto	l3868
  8281  002720                     l941:
  8282  002720  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
  8283  002724  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8284  002728  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8285  00272C  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8286  002730                     l3868:
  8287  002730  5007               	movf	___xxtofl@val^0,w,c
  8288  002732  1008               	iorwf	(___xxtofl@val+1)^0,w,c
  8289  002734  1009               	iorwf	(___xxtofl@val+2)^0,w,c
  8290  002736  100A               	iorwf	(___xxtofl@val+3)^0,w,c
  8291  002738  A4D8               	btfss	status,2,c
  8292  00273A  EFA1  F013         	goto	u4771
  8293  00273E  EFA3  F013         	goto	u4770
  8294  002742                     u4771:
  8295  002742  EFAD  F013         	goto	l3874
  8296  002746                     u4770:
  8297  002746  0E00               	movlw	0
  8298  002748  6E07               	movwf	?___xxtofl^0,c
  8299  00274A  0E00               	movlw	0
  8300  00274C  6E08               	movwf	(?___xxtofl+1)^0,c
  8301  00274E  0E00               	movlw	0
  8302  002750  6E09               	movwf	(?___xxtofl+2)^0,c
  8303  002752  0E00               	movlw	0
  8304  002754  6E0A               	movwf	(?___xxtofl+3)^0,c
  8305  002756  EF3E  F014         	goto	l944
  8306  00275A                     l3874:
  8307  00275A  0E96               	movlw	150
  8308  00275C  6E10               	movwf	___xxtofl@exp^0,c
  8309  00275E  EFB7  F013         	goto	l3878
  8310  002762                     l3876:
  8311  002762  2A10               	incf	___xxtofl@exp^0,f,c
  8312  002764  90D8               	bcf	status,0,c
  8313  002766  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  8314  002768  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  8315  00276A  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  8316  00276C  3211               	rrcf	___xxtofl@arg^0,f,c
  8317  00276E                     l3878:
  8318  00276E  0E00               	movlw	0
  8319  002770  1411               	andwf	___xxtofl@arg^0,w,c
  8320  002772  6E0B               	movwf	??___xxtofl^0,c
  8321  002774  0E00               	movlw	0
  8322  002776  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  8323  002778  6E0C               	movwf	(??___xxtofl+1)^0,c
  8324  00277A  0E00               	movlw	0
  8325  00277C  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  8326  00277E  6E0D               	movwf	(??___xxtofl+2)^0,c
  8327  002780  0EFE               	movlw	254
  8328  002782  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  8329  002784  6E0E               	movwf	(??___xxtofl+3)^0,c
  8330  002786  500B               	movf	??___xxtofl^0,w,c
  8331  002788  100C               	iorwf	(??___xxtofl+1)^0,w,c
  8332  00278A  100D               	iorwf	(??___xxtofl+2)^0,w,c
  8333  00278C  100E               	iorwf	(??___xxtofl+3)^0,w,c
  8334  00278E  A4D8               	btfss	status,2,c
  8335  002790  EFCC  F013         	goto	u4781
  8336  002794  EFCE  F013         	goto	u4780
  8337  002798                     u4781:
  8338  002798  EFB1  F013         	goto	l3876
  8339  00279C                     u4780:
  8340  00279C  EFDC  F013         	goto	l948
  8341  0027A0                     l3880:
  8342  0027A0  2A10               	incf	___xxtofl@exp^0,f,c
  8343  0027A2  0E01               	movlw	1
  8344  0027A4  2611               	addwf	___xxtofl@arg^0,f,c
  8345  0027A6  0E00               	movlw	0
  8346  0027A8  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
  8347  0027AA  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
  8348  0027AC  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
  8349  0027AE  90D8               	bcf	status,0,c
  8350  0027B0  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
  8351  0027B2  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
  8352  0027B4  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
  8353  0027B6  3211               	rrcf	___xxtofl@arg^0,f,c
  8354  0027B8                     l948:
  8355  0027B8  0E00               	movlw	0
  8356  0027BA  1411               	andwf	___xxtofl@arg^0,w,c
  8357  0027BC  6E0B               	movwf	??___xxtofl^0,c
  8358  0027BE  0E00               	movlw	0
  8359  0027C0  1412               	andwf	(___xxtofl@arg+1)^0,w,c
  8360  0027C2  6E0C               	movwf	(??___xxtofl+1)^0,c
  8361  0027C4  0E00               	movlw	0
  8362  0027C6  1413               	andwf	(___xxtofl@arg+2)^0,w,c
  8363  0027C8  6E0D               	movwf	(??___xxtofl+2)^0,c
  8364  0027CA  0EFF               	movlw	255
  8365  0027CC  1414               	andwf	(___xxtofl@arg+3)^0,w,c
  8366  0027CE  6E0E               	movwf	(??___xxtofl+3)^0,c
  8367  0027D0  500B               	movf	??___xxtofl^0,w,c
  8368  0027D2  100C               	iorwf	(??___xxtofl+1)^0,w,c
  8369  0027D4  100D               	iorwf	(??___xxtofl+2)^0,w,c
  8370  0027D6  100E               	iorwf	(??___xxtofl+3)^0,w,c
  8371  0027D8  A4D8               	btfss	status,2,c
  8372  0027DA  EFF1  F013         	goto	u4791
  8373  0027DE  EFF3  F013         	goto	u4790
  8374  0027E2                     u4791:
  8375  0027E2  EFD0  F013         	goto	l3880
  8376  0027E6                     u4790:
  8377  0027E6  EFFB  F013         	goto	l3888
  8378  0027EA                     l3886:
  8379  0027EA  0610               	decf	___xxtofl@exp^0,f,c
  8380  0027EC  90D8               	bcf	status,0,c
  8381  0027EE  3611               	rlcf	___xxtofl@arg^0,f,c
  8382  0027F0  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
  8383  0027F2  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
  8384  0027F4  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
  8385  0027F6                     l3888:
  8386  0027F6  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
  8387  0027F8  EF00  F014         	goto	u4801
  8388  0027FC  EF02  F014         	goto	u4800
  8389  002800                     u4801:
  8390  002800  EF0A  F014         	goto	l955
  8391  002804                     u4800:
  8392  002804  0E02               	movlw	2
  8393  002806  6010               	cpfslt	___xxtofl@exp^0,c
  8394  002808  EF08  F014         	goto	u4811
  8395  00280C  EF0A  F014         	goto	u4810
  8396  002810                     u4811:
  8397  002810  EFF5  F013         	goto	l3886
  8398  002814                     u4810:
  8399  002814                     l955:
  8400  002814  B010               	btfsc	___xxtofl@exp^0,0,c
  8401  002816  EF0F  F014         	goto	u4821
  8402  00281A  EF11  F014         	goto	u4820
  8403  00281E                     u4821:
  8404  00281E  EF12  F014         	goto	l3894
  8405  002822                     u4820:
  8406  002822  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
  8407  002824                     l3894:
  8408  002824  90D8               	bcf	status,0,c
  8409  002826  3210               	rrcf	___xxtofl@exp^0,f,c
  8410  002828  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
  8411  00282C  6A0C               	clrf	(??___xxtofl+1)^0,c
  8412  00282E  6A0D               	clrf	(??___xxtofl+2)^0,c
  8413  002830  6A0E               	clrf	(??___xxtofl+3)^0,c
  8414  002832  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
  8415  002836  6A0D               	clrf	(??___xxtofl+2)^0,c
  8416  002838  6A0C               	clrf	(??___xxtofl+1)^0,c
  8417  00283A  6A0B               	clrf	??___xxtofl^0,c
  8418  00283C  500B               	movf	??___xxtofl^0,w,c
  8419  00283E  1211               	iorwf	___xxtofl@arg^0,f,c
  8420  002840  500C               	movf	(??___xxtofl+1)^0,w,c
  8421  002842  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
  8422  002844  500D               	movf	(??___xxtofl+2)^0,w,c
  8423  002846  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
  8424  002848  500E               	movf	(??___xxtofl+3)^0,w,c
  8425  00284A  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
  8426  00284C  500F               	movf	___xxtofl@sign^0,w,c
  8427  00284E  B4D8               	btfsc	status,2,c
  8428  002850  EF2C  F014         	goto	u4831
  8429  002854  EF2E  F014         	goto	u4830
  8430  002858                     u4831:
  8431  002858  EF36  F014         	goto	l3904
  8432  00285C                     u4830:
  8433  00285C  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
  8434  00285E  EF35  F014         	goto	u4840
  8435  002862  EF33  F014         	goto	u4841
  8436  002866                     u4841:
  8437  002866  EF36  F014         	goto	l3904
  8438  00286A                     u4840:
  8439  00286A  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
  8440  00286C                     l3904:
  8441  00286C  C011  F007         	movff	___xxtofl@arg,?___xxtofl
  8442  002870  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
  8443  002874  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
  8444  002878  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
  8445  00287C                     l944:
  8446  00287C  0012               	return		;funcret
  8447  00287E                     __end_of___xxtofl:
  8448                           	opt callstack 0
  8449                           
  8450 ;; *************** function _ADC_Init *****************
  8451 ;; Defined at:
  8452 ;;		line 154 in file "main.c"
  8453 ;; Parameters:    Size  Location     Type
  8454 ;;		None
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;		None
  8457 ;; Return value:  Size  Location     Type
  8458 ;;                  1    wreg      void 
  8459 ;; Registers used:
  8460 ;;		wreg, status,2
  8461 ;; Tracked objects:
  8462 ;;		On entry : 0/0
  8463 ;;		On exit  : 0/0
  8464 ;;		Unchanged: 0/0
  8465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8466 ;;      Params:         0       0       0       0       0       0       0       0       0
  8467 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8468 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8469 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8470 ;;Total ram usage:        0 bytes
  8471 ;; Hardware stack levels used:    1
  8472 ;; Hardware stack levels required when called:    2
  8473 ;; This function calls:
  8474 ;;		Nothing
  8475 ;; This function is called by:
  8476 ;;		_main
  8477 ;; This function uses a non-reentrant model
  8478 ;;
  8479                           
  8480                           	psect	text40
  8481  0037BE                     __ptext40:
  8482                           	opt callstack 0
  8483  0037BE                     _ADC_Init:
  8484                           	opt callstack 28
  8485  0037BE                     
  8486                           ;main.c: 157:     ADCON1 = 0x07;
  8487  0037BE  0E07               	movlw	7
  8488  0037C0  6EC1               	movwf	193,c	;volatile
  8489                           
  8490                           ;main.c: 158:     ADCON2 = 0x92;
  8491  0037C2  0E92               	movlw	146
  8492  0037C4  6EC0               	movwf	192,c	;volatile
  8493                           
  8494                           ;main.c: 159:     ADRESH=0;
  8495  0037C6  0E00               	movlw	0
  8496  0037C8  6EC4               	movwf	196,c	;volatile
  8497                           
  8498                           ;main.c: 160:     ADRESL=0;
  8499  0037CA  0E00               	movlw	0
  8500  0037CC  6EC3               	movwf	195,c	;volatile
  8501  0037CE  0012               	return		;funcret
  8502  0037D0                     __end_of_ADC_Init:
  8503                           	opt callstack 0
  8504                           
  8505 ;; *************** function _MY_ISR *****************
  8506 ;; Defined at:
  8507 ;;		line 83 in file "main.c"
  8508 ;; Parameters:    Size  Location     Type
  8509 ;;		None
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;		None
  8512 ;; Return value:  Size  Location     Type
  8513 ;;                  1    wreg      void 
  8514 ;; Registers used:
  8515 ;;		wreg, status,2, status,0, cstack
  8516 ;; Tracked objects:
  8517 ;;		On entry : 0/0
  8518 ;;		On exit  : 0/0
  8519 ;;		Unchanged: 0/0
  8520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8521 ;;      Params:         0       0       0       0       0       0       0       0       0
  8522 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8524 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8525 ;;Total ram usage:        0 bytes
  8526 ;; Hardware stack levels used:    1
  8527 ;; Hardware stack levels required when called:    1
  8528 ;; This function calls:
  8529 ;;		i2_MSdelay
  8530 ;; This function is called by:
  8531 ;;		Interrupt level 2
  8532 ;; This function uses a non-reentrant model
  8533 ;;
  8534                           
  8535                           	psect	intcode
  8536  000008                     __pintcode:
  8537                           	opt callstack 0
  8538  000008                     _MY_ISR:
  8539                           	opt callstack 21
  8540                           
  8541                           ;incstack = 0
  8542  000008  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8543  00000A  EDA5  F01B         	call	int_func,f	;refresh shadow registers
  8544                           
  8545                           	psect	intcode_body
  8546  00374A                     __pintcode_body:
  8547                           	opt callstack 21
  8548  00374A                     int_func:
  8549                           	opt callstack 21
  8550  00374A  0006               	pop		; remove dummy address from shadow register refresh
  8551  00374C                     
  8552                           ;main.c: 84:     LATC6 = ~(LATC6);
  8553  00374C  AC8B               	btfss	3979,6,c	;volatile
  8554  00374E  EFAB  F01B         	goto	i2u489_41
  8555  003752  EFAE  F01B         	goto	i2u489_40
  8556  003756                     i2u489_41:
  8557  003756  8C8B               	bsf	3979,6,c	;volatile
  8558  003758  EFAF  F01B         	goto	i2u490_45
  8559  00375C                     i2u489_40:
  8560  00375C  9C8B               	bcf	3979,6,c	;volatile
  8561  00375E                     i2u490_45:
  8562  00375E                     
  8563                           ;main.c: 85:     MSdelay(200);
  8564  00375E  0E00               	movlw	0
  8565  003760  6E02               	movwf	(i2MSdelay@val+1)^0,c
  8566  003762  0EC8               	movlw	200
  8567  003764  6E01               	movwf	i2MSdelay@val^0,c
  8568  003766  EC26  F01A         	call	i2_MSdelay	;wreg free
  8569  00376A                     
  8570                           ;main.c: 86:     INTCONbits.INT0IF=0;
  8571  00376A  92F2               	bcf	242,1,c	;volatile
  8572  00376C  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8573  00376E  0011               	retfie		f
  8574  003770                     __end_of_MY_ISR:
  8575                           	opt callstack 0
  8576                           
  8577 ;; *************** function i2_MSdelay *****************
  8578 ;; Defined at:
  8579 ;;		line 179 in file "main.c"
  8580 ;; Parameters:    Size  Location     Type
  8581 ;;  val             2    0[COMRAM] unsigned int 
  8582 ;; Auto vars:     Size  Location     Type
  8583 ;;  MSdelay         2    4[COMRAM] unsigned int 
  8584 ;;  MSdelay         2    2[COMRAM] unsigned int 
  8585 ;; Return value:  Size  Location     Type
  8586 ;;                  1    wreg      void 
  8587 ;; Registers used:
  8588 ;;		wreg, status,2, status,0
  8589 ;; Tracked objects:
  8590 ;;		On entry : 0/0
  8591 ;;		On exit  : 0/0
  8592 ;;		Unchanged: 0/0
  8593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8594 ;;      Params:         2       0       0       0       0       0       0       0       0
  8595 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8596 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8597 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8598 ;;Total ram usage:        6 bytes
  8599 ;; Hardware stack levels used:    1
  8600 ;; This function calls:
  8601 ;;		Nothing
  8602 ;; This function is called by:
  8603 ;;		_MY_ISR
  8604 ;; This function uses a non-reentrant model
  8605 ;;
  8606                           
  8607                           	psect	text42
  8608  00344C                     __ptext42:
  8609                           	opt callstack 0
  8610  00344C                     i2_MSdelay:
  8611                           	opt callstack 21
  8612  00344C                     
  8613                           ;main.c: 179: void MSdelay(unsigned int val);main.c: 180: {;main.c: 181:      unsigned i
      +                          nt i,j;;main.c: 182:         for(i=0;i<val;i++)
  8614  00344C  0E00               	movlw	0
  8615  00344E  6E04               	movwf	(i2MSdelay@i+1)^0,c
  8616  003450  0E00               	movlw	0
  8617  003452  6E03               	movwf	i2MSdelay@i^0,c
  8618  003454  EF43  F01A         	goto	i2l3984
  8619  003458                     i2l3972:
  8620                           
  8621                           ;main.c: 183:             for(j=0;j<165;j++);
  8622  003458  0E00               	movlw	0
  8623  00345A  6E06               	movwf	(i2MSdelay@j+1)^0,c
  8624  00345C  0E00               	movlw	0
  8625  00345E  6E05               	movwf	i2MSdelay@j^0,c
  8626  003460                     i2l3974:
  8627  003460  5006               	movf	(i2MSdelay@j+1)^0,w,c
  8628  003462  E109               	bnz	i2u487_40
  8629  003464  0EA5               	movlw	165
  8630  003466  5C05               	subwf	i2MSdelay@j^0,w,c
  8631  003468  A0D8               	btfss	status,0,c
  8632  00346A  EF39  F01A         	goto	i2u487_41
  8633  00346E  EF3B  F01A         	goto	i2u487_40
  8634  003472                     i2u487_41:
  8635  003472  EF3D  F01A         	goto	i2l3978
  8636  003476                     i2u487_40:
  8637  003476  EF41  F01A         	goto	i2l3982
  8638  00347A                     i2l3978:
  8639  00347A  4A05               	infsnz	i2MSdelay@j^0,f,c
  8640  00347C  2A06               	incf	(i2MSdelay@j+1)^0,f,c
  8641  00347E  EF30  F01A         	goto	i2l3974
  8642  003482                     i2l3982:
  8643  003482  4A03               	infsnz	i2MSdelay@i^0,f,c
  8644  003484  2A04               	incf	(i2MSdelay@i+1)^0,f,c
  8645  003486                     i2l3984:
  8646  003486  5001               	movf	i2MSdelay@val^0,w,c
  8647  003488  5C03               	subwf	i2MSdelay@i^0,w,c
  8648  00348A  5002               	movf	(i2MSdelay@val+1)^0,w,c
  8649  00348C  5804               	subwfb	(i2MSdelay@i+1)^0,w,c
  8650  00348E  A0D8               	btfss	status,0,c
  8651  003490  EF4C  F01A         	goto	i2u488_41
  8652  003494  EF4E  F01A         	goto	i2u488_40
  8653  003498                     i2u488_41:
  8654  003498  EF2C  F01A         	goto	i2l3972
  8655  00349C                     i2u488_40:
  8656  00349C  0012               	return		;funcret
  8657  00349E                     __end_ofi2_MSdelay:
  8658                           	opt callstack 0
  8659                           
  8660                           	psect	rparam
  8661  0000                     
  8662                           	psect	temp
  8663  000052                     btemp:
  8664                           	opt callstack 0
  8665  000052                     	ds	1
  8666  0000                     int$flags	set	btemp
  8667  0000                     wtemp8	set	btemp+1
  8668  0000                     ttemp5	set	btemp+1
  8669  0000                     ttemp6	set	btemp+4
  8670  0000                     ttemp7	set	btemp+8
  8671                           tosu	equ	0xFFF
  8672                           tosh	equ	0xFFE
  8673                           tosl	equ	0xFFD
  8674                           stkptr	equ	0xFFC
  8675                           pclatu	equ	0xFFB
  8676                           pclath	equ	0xFFA
  8677                           pcl	equ	0xFF9
  8678                           tblptru	equ	0xFF8
  8679                           tblptrh	equ	0xFF7
  8680                           tblptrl	equ	0xFF6
  8681                           tablat	equ	0xFF5
  8682                           prodh	equ	0xFF4
  8683                           prodl	equ	0xFF3
  8684                           indf0	equ	0xFEF
  8685                           postinc0	equ	0xFEE
  8686                           postdec0	equ	0xFED
  8687                           preinc0	equ	0xFEC
  8688                           plusw0	equ	0xFEB
  8689                           fsr0h	equ	0xFEA
  8690                           fsr0l	equ	0xFE9
  8691                           wreg	equ	0xFE8
  8692                           indf1	equ	0xFE7
  8693                           postinc1	equ	0xFE6
  8694                           postdec1	equ	0xFE5
  8695                           preinc1	equ	0xFE4
  8696                           plusw1	equ	0xFE3
  8697                           fsr1h	equ	0xFE2
  8698                           fsr1l	equ	0xFE1
  8699                           bsr	equ	0xFE0
  8700                           indf2	equ	0xFDF
  8701                           postinc2	equ	0xFDE
  8702                           postdec2	equ	0xFDD
  8703                           preinc2	equ	0xFDC
  8704                           plusw2	equ	0xFDB
  8705                           fsr2h	equ	0xFDA
  8706                           fsr2l	equ	0xFD9
  8707                           status	equ	0xFD8


Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     75      81
    BANK0           160    106     116
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@result(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@result(BANK0[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S989_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@result(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@result(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> main@result(BANK0[10]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> main@result(BANK0[10]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay
    _ADC_Read->___xxtofl

Critical Paths under _MY_ISR in COMRAM

    _MY_ISR->i2_MSdelay

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _MY_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _MY_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _MY_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _MY_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _MY_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _MY_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _MY_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _MY_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   40176
                                             92 BANK0     14    14      0
                           _ADC_Init
                           _ADC_Read
            _External_Interrupt_Init
                           _LCD_Init
                      _LCD_String_xy
                            _MSdelay
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   36707
                                             74 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   36203
                                             73 COMRAM     2     2      0
                                             68 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   35676
                                             63 COMRAM    10     4      6
                                             56 BANK0     12    12      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                              6 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   28867
                                             51 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             12 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                              6 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3957
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             31 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              6 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                              6 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             31 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                              6 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              6 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3233
                                              6 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     806
                                             31 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              6 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2723
                                              6 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              6 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1515
                                             13 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              6 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    1432
                                             15 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     633
                                             13 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     512
                                             12 COMRAM     1     1      0
                            _MSdelay
                       _process_data
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     958
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     512
                                             12 COMRAM     1     1      0
                            _MSdelay
                       _process_data
 ---------------------------------------------------------------------------------
 (4) _process_data                                         1     1      0      44
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2     446
                                              6 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _External_Interrupt_Init                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                            10     6      4     519
                                             20 COMRAM    10     6      4
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              6 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _MY_ISR                                               0     0      0     118
                          i2_MSdelay
 ---------------------------------------------------------------------------------
 (10) i2_MSdelay                                           6     4      2     118
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
     ___xxtofl
   _External_Interrupt_Init
   _LCD_Init
     _LCD_Command
       _MSdelay
       _process_data
     _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
       _process_data
     _LCD_String
       _LCD_Char
         _MSdelay
         _process_data
   _MSdelay
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 _MY_ISR (ROOT)
   i2_MSdelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6A      74       5       72.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4B      51       1       86.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     115      20        0.0%
DATA                 0      0     115       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Nov 16 14:16:59 2019

                    ___fldiv@aexp 001F                      ___fldiv@bexp 001E  
                    ___fldiv@sign 0017                      ?_LCD_Command 0001  
                              l70 37DC                                l67 37BC  
                              l84 37AA                                l93 3722  
                              l78 36F2                                l87 378C  
                              l98 35B0                      ___awdiv@sign 000C  
                     __CFG_BOR$ON 000000               ___wmul@multiplicand 0009  
                     __CFG_BORV$3 000000                       ?_LCD_String 000E  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                    __CFG_CP2$OFF 000000                      __CFG_CP3$OFF 000000  
                             l101 37CE                               l104 322E  
                             l107 3288                               l115 34E6  
                             l223 0F9E                               l161 303A  
                             l156 2FBE                               l159 3000  
                             l530 30EA                               l282 32E2  
                             l179 13CA                               l283 32EA  
                             l276 1C3C                               l517 2F78  
                             l197 0C06                               l269 1CF2  
                             l286 3748                               l551 2BD0  
                             l560 3620                               l545 3194  
                             l556 2C16                               l900 1DB8  
                             l910 2014                               l814 15BA  
                             l831 16D4                               l823 188A  
                             l815 15A8                               l583 2B12  
                             l904 211C                               l840 17A4  
                             l816 156E                               l841 1792  
                             l907 1FAE                               l941 2720  
                             l917 20DE                               l909 2026  
                             l870 2316                               l944 287C  
                             l856 352C                               l881 23D4  
                             l873 22DA                               l882 23C2  
                             l955 2814                               l948 27B8  
                             l868 24B6                               l879 235C  
                             l967 2D14                               l996 2A04  
                             l999 2A0C                      __CFG_CPB$OFF 000000  
                    __CFG_CPD$OFF 000000                               _pad 2F7A  
                    ___awmod@sign 000C                               wreg 000FE8  
                    ___flmul@aexp 0014                      ___flmul@bexp 0019  
                    ___flmul@sign 0013                      ___flmul@temp 001E  
                    ___flmul@prod 001A                       main@digital 00C6  
                    __CFG_LVP$OFF 000000                       LCD_Char@dat 000D  
                    ___fltol@exp1 0010                      __CFG_WDT$OFF 000000  
                            l1005 26C8                              l1015 3658  
                            l1023 344A                              l1008 260C  
                            l1044 2EB4                              l1052 3570  
                            l1029 35E8                              l1062 37DE  
                            l1074 368E                              l1059 33F8  
                            l1068 33A6                              l1093 334A  
                            l1078 2DEA                              l1088 3342  
                            l4100 1462                              l4102 1472  
                            l4110 149C                              l4200 16A4  
                            l4120 14D4                              l4112 14AC  
                            l4104 1482                              l4040 2E1A  
                            l5000 102C                              l4202 16B4  
                            l4130 14E8                              l4122 14D8  
                            l4114 14BE                              l4106 1492  
                            l4042 2E38                              l4034 2DEC  
                            l4050 353A                              l5010 107C  
                            l5002 1040                              l4220 1736  
                            l4212 170E                              l4204 16C4  
                            l4140 14FC                              l4132 14EC  
                            l4124 14DC                              l4116 14CC  
                            l4108 1494                              l4300 2C9E  
                            l4044 2E6E                              l4036 2DFE  
                            l4052 354C                              l4060 366A  
                            l5100 1334                              l5020 10B0  
                            l5012 108A                              l5004 1052  
                            l4222 173E                              l4214 1718  
                            l4206 16EA                              l4230 1762  
                            l4150 1510                              l4142 1500  
                            l4134 14F0                              l4126 14E0  
                            l4118 14D0                              l4070 13CC  
                            l4302 2CAA                              l4038 2E10  
                            l4054 3550                              l4062 3682  
                            l5110 138C                              l5102 133A  
                            l5030 10E2                              l5022 10C0  
                            l5014 109A                              l5006 1060  
                            l4400 21D0                              l4240 17B4  
                            l4232 1766                              l4224 1742  
                            l4216 1726                              l4208 16FA  
                            l4160 1588                              l4152 153A  
                            l4144 1504                              l4136 14F4  
                            l4128 14E4                              l4080 1408  
                            l4072 13D8                              l4312 2D0C  
                            l4048 352E                              l4056 365A  
                            l4320 32EC                              l5112 1394  
                            l5040 118A                              l5032 10F4  
                            l5024 10C4                              l5016 109E  
                            l5008 1068                              l5200 1930  
                            l3370 34D0                              l5130 28B6  
                            l5122 287E                              l4410 2210  
                            l4402 21D2                              l4250 181A  
                            l4242 17C0                              l4234 1774  
                            l4226 1752                              l4218 1728  
                            l4170 15C8                              l4162 158C  
                            l4154 1556                              l4146 1508  
                            l4138 14F8                              l4090 1438  
                            l4082 1418                              l4074 13E6  
                            l4306 2CB6                              l4330 24B8  
                            l4058 3666                              l4066 35B2  
                            l5114 13A4                              l5106 136E  
                            l5050 11E2                              l5042 1192  
                            l5034 10F8                              l5026 10CA  
                            l5018 10A4                              l5210 19E0  
                            l5202 196A                              l3364 34B2  
                            l3356 349E                              l3372 37AE  
                            l5140 290C                              l5132 28EC  
                            l5124 2892                              l4420 2240  
                            l4412 2218                              l4404 21DA  
                            l4260 1862                              l4252 182A  
                            l4244 17CE                              l4236 178A  
                            l4228 1754                              l4180 160A  
                            l4172 15D8                              l4164 159A  
                            l4156 1566                              l4148 150C  
                            l4092 144A                              l4084 141A  
                            l4076 13E8                              l4308 2CC8  
                            l4332 24D8                              l4316 334C  
                            l4324 3322                              l5116 13AA  
                            l5108 1380                              l5060 1226  
                            l5052 11F0                              l5028 10D0  
                            l5036 10FE                              l5044 1196  
                            l5220 1A66                              l5204 198A  
                            l5212 19F2                              l5300 31A2  
                            l3366 34B6                              l3358 34AA  
                            l3374 37B2                              l5150 2986  
                            l5142 2914                              l5134 28F0  
                            l5126 2896                              l4430 227E  
                            l4422 2240                              l4414 221C  
                            l4406 21EA                              l4510 1D0E  
                            l4262 1864                              l4254 184A  
                            l4246 1808                              l4190 1638  
                            l4182 1618                              l4166 159C  
                            l4158 157C                              l4094 144C  
                            l4078 13F8                              l4086 1422  
                            l4350 2680                              l4342 25C0  
                            l4334 252E                              l4318 335C  
                            l4326 3334                              l5070 125C  
                            l5062 122E                              l5054 1200  
                            l5046 11B4                              l5038 1156  
                            l5230 1AFE                              l5222 1A98  
                            l5214 1A14                              l5206 1998  
                            l5310 31EC                              l5302 31A6  
                            l3368 34CC                              l5144 291C  
                            l5128 289A                              l4440 22CA  
                            l4432 228E                              l4408 2200  
                            l4600 1FDE                              l4520 1D46  
                            l4512 1D10                              l4264 186A  
                            l4256 184E                              l4248 180A  
                            l4192 1642                              l4184 1624  
                            l4176 15EC                              l4168 15A6  
                            l4096 1452                              l4088 1432  
                            l4352 26A8                              l4344 25FC  
                            l4336 2542                              l4280 2FB6  
                            l4272 2F7A                              l5080 12B8  
                            l5072 1264                              l5064 123E  
                            l5056 1204                              l5048 11D0  
                            l5240 1BC6                              l5224 1AAA  
                            l5216 1A24                              l5312 31F8  
                            l5304 31A8                              l4362 3724  
                            l5154 29C4                              l5146 2950  
                            l5138 28F6                              l4450 2314  
                            l4442 22D8                              l4434 229E  
                            l4426 2254                              l4418 2230  
                            l4370 212A                              l4610 2050  
                            l4602 200C                              l4530 1D72  
                            l4522 1D56                              l4514 1D20  
                            l4506 1CF4                              l4266 1878  
                            l4258 185C                              l4186 1628  
                            l4178 15FC                              l4194 1648  
                            l4098 1460                              l4354 26B8  
                            l4338 2550                              l4346 2630  
                            l4290 3022                              l4282 2FCA  
                            l4274 2F88                              l5090 12F8  
                            l5082 12C0                              l5074 1270  
                            l5066 1246                              l5058 1214  
                            l5170 2D4C                              l5242 1BD8  
                            l5250 1C50                              l5226 1AC0  
                            l5234 1B2A                              l5218 1A56  
                            l5306 31AA                              l3900 285C  
                            l3740 377A                              l4364 3740  
                            l5156 29D6                              l4700 3082  
                            l4460 235A                              l4452 2326  
                            l4444 22E4                              l4436 22A6  
                            l4428 226E                              l4380 216A  
                            l4372 2138                              l4620 20C6  
                            l4612 207A                              l4540 1DC8  
                            l4532 1D82                              l4524 1D5C  
                            l4516 1D30                              l4508 1D00  
                            l4268 187A                              l4196 166E  
                            l4188 1636                              l4348 266C  
                            l4284 2FDE                              l4276 2F9C  
                            l5092 130A                              l5076 1276  
                            l5084 12C6                              l5068 1254  
                            l5180 2DC8                              l5172 2D5A  
                            l5164 2D16                              l5252 1C74  
                            l5260 1CA2                              l5244 1C0C  
                            l5236 1B58                              l5228 1ACE  
                            l5308 31C6                              l3902 286A  
                            l3910 36C2                              l3742 377C  
                            l4358 3622                              l5158 29E8  
                            l5334 293A                              l4710 30BE  
                            l4702 308A                              l4470 23BA  
                            l4454 233C                              l4462 236C  
                            l4446 2302                              l4438 22B6  
                            l4390 2190                              l4382 216C  
                            l4374 213A                              l4622 20E2  
                            l4630 2108                              l4606 2036  
                            l4614 207E                              l4550 1E02  
                            l4542 1DD8                              l4534 1D92  
                            l4526 1D62                              l4518 1D40  
                            l4198 16A2                              l4294 2C18  
                            l4286 2FE2                              l4278 2FAA  
                            l5094 1316                              l5086 12D8  
                            l5078 129C                              l5174 2D72  
                            l5166 2D40                              l5262 1CB0  
                            l5254 1C82                              l5190 18CE  
                            ?_pad 0017                              l3904 286C  
                            l3840 3798                              l3920 36E0  
                            l3912 36CE                              l3744 377E  
                            l3736 3772                              l4712 30C4  
                            l4704 3092                              l4480 2428  
                            l4464 237A                              l4456 2342  
                            l4448 2304                              l4392 219E  
                            l4376 214A                              l4384 2174  
                            l4368 211E                              l4632 210C  
                            l4624 20F2                              l4616 2098  
                            l4608 2042                              l4560 1E54  
                            l4552 1E18                              l4536 1DA2  
                            l4528 1D70                              l4800 2AC6  
                            l4296 2C38                              l4288 300E  
                            l5096 131E                              l5088 12F2  
                            l5176 2D8E                              l5256 1C96  
                            l5192 18D2                              l5184 188C  
                            l5280 32C6                              l3930 37D6  
                            l3842 379A                              l3922 36E6  
                            l3914 36D2                              l3738 3778  
                            l3850 3706                              l4650 2ED4  
                            l4642 2EB6                              l4706 30A0  
                            l4714 30CA                              l4490 2492  
                            l4474 23E4                              l4482 242C  
                            l4466 237E                              l4458 234C  
                            l4394 21A0                              l4386 2184  
                            l4378 215A                              l4730 3168  
                            l4722 30EC                              l4626 2100  
                            l4618 20AC                              l4570 1E9A  
                            l4562 1E62                              l4554 1E24  
                            l4546 1DEC                              l4538 1DA8  
                            l4802 2AD2                              l4298 2C76  
                            l5098 132E                              l5178 2DA0  
                            l5194 18F6                              l5186 18B0  
                            l5266 1CBC                              l5274 328A  
                            l5290 33E6                              l5282 33A8  
                            l3908 37BE                              l3940 3278  
                            l3932 37D8                              l3844 379C  
                            l3836 3790                              l3924 36EC  
                            l3916 36D6                              l3852 370A  
                            l4820 3444                              l4812 33FA  
                            l4660 2F08                              l4652 2EE2  
                            l4644 2EBA                              l4716 30DA  
                            l4708 30B6                              l4492 2496  
                            l4484 2446                              l4476 23F0  
                            l4468 238C                              l4396 21B0  
                            l4388 218A                              l4732 318C  
                            l4724 311A                              l4740 2B42  
                            l4628 2102                              l4580 1F08  
                            l4572 1EB4                              l4564 1E6E  
                            l4556 1E3C                              l4548 1DF8  
                            l4636 34E8                              l4804 2AE2  
                            l4900 0AD8                              l5268 1CE0  
                            l5196 18FE                              l5188 18BE  
                            l5276 3292                              l5284 33BA  
                            l3870 2746                              l3862 26CC  
                            l3934 37DA                              l3926 37D0  
                            l3838 3796                              l3918 36DA  
                            l3846 36F4                              l4814 33FE  
                            l4670 2F42                              l4662 2F10  
                            l4654 2EEA                              l4646 2EC8  
                            l4718 30E2                              l4494 24A4  
                            l4486 245C                              l4478 23FE  
                            l4398 21C0                              l4734 3192  
                            l4726 312A                              l4750 2BB0  
                            l4742 2B52                              l4590 1F9E  
                            l4582 1F32                              l4574 1EC4  
                            l4566 1E7E                              l4558 1E48  
                            l4638 34F8                              l4806 2AF2  
                            l4910 0BB0                              l4902 0B32  
                            l4830 0842                              l5198 190C  
                            l5278 32A0                              l5286 33C2  
                            l5294 3196                              l3880 27A0  
                            l3864 26DC                              l3936 3212  
                            l3928 37D2                              l3848 36F8  
                            l3960 3584                              l4816 3412  
                            l4680 2F68                              l4672 2F4A  
                            l4664 2F18                              l4656 2EEE  
                            l4648 2ED0                              l4496 24AA  
                            l4488 2476                              l4728 3158  
                            l4752 2BBE                              l4744 2B80  
                            l4592 1FAC                              l4584 1F68  
                            l4576 1EE0                              l4568 1E8A  
                            l4760 35EA                              l4808 2B02  
                            l4920 0BFA                              l4912 0BB4  
                            l4904 0B66                              l4840 0892  
                            l4832 084A                              l4824 081A  
                            l5288 33CA                              l5296 319A  
                            l3890 2804                              l3882 27A2  
                            l3874 275A                              l3866 26EA  
                            l3938 323C                              l3962 358C  
                            l4818 3440                              l4682 2F70  
                            l4674 2F4C                              l4666 2F26  
                            l4658 2EF6                              l4690 304E  
                            l4498 24AC                              l4754 2C0E  
                            l4746 2B90                              l4738 2B14  
                            l4594 1FBE                              l4586 1F76  
                            l4578 1EEC                              l4762 3600  
                            l4770 2A24                              l4930 0C36  
                            l4914 0BC6                              l4922 0C12  
                            l4906 0B6E                              l4850 08CA  
                            l4842 08A0                              l4834 086E  
                            l4826 0824                              l5298 319E  
                            l3892 2822                              l3884 27AE  
                            l3876 2762                              l3868 2730  
                            l3964 3596                              l3956 3574  
                            l4676 2F52                              l4668 2F2C  
                            l4692 3056                              l4756 2C14  
                            l4748 2B9E                              l4596 1FCC  
                            l4588 1F94                              l4764 3610  
                            l4780 2A74                              l4940 0C9C  
                            l4932 0C52                              l4916 0BD8  
                            l4908 0BA0                              l4860 0930  
                            l4852 08CE                              l4844 08B2  
                            l4836 0878                              l4828 0834  
                            l3894 2824                              l3886 27EA  
                            l3878 276E                              l3966 359E  
                            l3958 3574                              l4678 2F58  
                            l4694 305A                              l4686 303C  
                            l4598 1FD0                              l4790 2A9E  
                            l4782 2A78                              l4774 2A38  
                            l4950 0CE4                              l4942 0CAE  
                            l4934 0C88                              l4918 0BE0  
                            l4862 0942                              l4846 08BE  
                            l4854 08D4                              l4838 0880  
                            l3896 2828                              l3888 27F6  
                            l3968 35A4                              l4696 3068  
                            l4688 3040                              l4792 2AA8  
                            l4784 2A86                              l4776 2A62  
                            l4768 2A0E                              l4960 0D2C  
                            l4952 0CF2                              l4944 0CC0  
                            l4936 0C90                              l4928 0C24  
                            l4880 0A16                              l4864 095E  
                            l4856 08FA                              l4872 09A8  
                            l4848 08C6                              l3898 284C  
                            l4698 3070                              l4794 2AB2  
                            l4778 2A64                              l4970 0E40  
                            l4962 0D3C                              l4954 0D0A  
                            l4946 0CCE                              l4938 0C94  
                            l4882 0A32                              l4874 09CE  
                            l4890 0A4E                              l4866 0976  
                            l4980 0EE0                              l4964 0D50  
                            l4972 0E46                              l4956 0D1C  
                            l4948 0CD2                              l4892 0A68  
                            l4868 0980                              l4990 0F76  
                            l4982 0F12                              l4974 0E64  
                            l4966 0DB4                              l4958 0D24  
                            l4878 0A04                              l4992 0F8A  
                            l4984 0F22                              l4976 0E98  
                            l4968 0E0C                              l4896 0A9E  
                            l4994 0F96                              l4986 0F32  
                            l4978 0ECA                              l4898 0AD2  
                            l4996 0FBA                              l4988 0F66  
                            l4998 101E                              STR_1 0801  
                            STR_2 0806                              STR_3 080E  
                            STR_6 080A                              STR_7 0812  
                            _LATA 000F89                              _LATE 000F8D  
                            u5000 13F8                              u5001 13F4  
                            u5010 1408                              u5011 1404  
                            u5100 1554                              u5020 144A  
                            u5021 1446                              u5110 157C  
                            u5030 1460                              u5111 1578  
                            u5031 145C                              u6000 1FDE  
                            u5200 16B4                              u5120 159A  
                            u5040 1472                              u6001 1FDA  
                            u5201 16B0                              u5121 1596  
                            u5041 146E                              u6010 200C  
                            u5210 16EA                              u5130 15BA  
                            u5050 1482                              u6011 2008  
                            u5211 16E6                              u5131 15B6  
                            u5051 147E                              u6100 2F08  
                            u6020 2022                              u5300 17B4  
                            u5220 16FA                              u5140 15C8  
                            u5060 14BE                              u6101 2F04  
                            u6021 201E                              u5301 17B0  
                            u5221 16F6                              u5141 15C4  
                            u5061 14BA                              u6110 2F26  
                            u6030 2036                              u5310 17CE  
                            u5230 1726                              u5150 15D8  
                            u5070 14CC                              u6111 2F22  
                            u6031 2032                              u5311 17CA  
                            u5231 1722                              u5151 15D4  
                            u5071 14C8                              u6120 2F42  
                            u6200 311A                              u6040 2050  
                            u5320 1808                              u5240 1736  
                            u5160 160A                              u5080 153A  
                            u5400 3000                              u7000 2DA0  
                            u6121 2F3E                              u6201 3116  
                            u6041 204C                              u5321 1804  
                            u5241 1732                              u5161 1606  
                            u5081 1536                              u5401 2FFC  
                            u7001 2D9C                              u6130 2F68  
                            u6210 3158                              u6050 2098  
                            u5330 181A                              u5250 1752  
                            u5170 1618                              u5090 1552  
                            u5410 300E                              u7010 2DC8  
                            u6131 2F64                              u6211 3154  
                            u6051 2094                              u5331 1816  
                            u5251 174E                              u5171 1614  
                            u5091 154C                              u5411 300A  
                            u7011 2DC4                              u6140 304E  
                            u6220 318C                              u6060 20C6  
                            u5340 182A                              u5260 1762  
                            u5180 1636                              u6300 2A58  
                            u5420 2C58                              u5500 33A6  
                            u7100 1AAA                              u7020 18B0  
                            u6141 304A                              u6221 3188  
                            u6061 20C2                              u5341 1826  
                            u5261 175E                              u5181 1632  
                            u5501 33A2                              u7101 1AA6  
                            u7021 18AC                              u6150 3068  
                            u6230 2B42                              u6070 2100  
                            u5350 184A                              u5270 1774  
                            u5190 166E                              u6310 2A86  
                            u5430 2C76                              u5510 331C  
                            u7110 1B58                              u7030 18F6  
                            u6151 3064                              u6231 2B3E  
                            u6071 20FC                              u5351 1846  
                            u5271 1770                              u5191 166A  
                            u6311 2A82                              u5431 2C72  
                            u5511 3316                              u7111 1B54  
                            u7031 18F2                              u4800 2804  
                            u6080 2EC8                              u6160 3082  
                            u6240 2B80                              u5360 185C  
                            u5280 178A                              u6320 2A9A  
                            u5440 2C9E                              u5600 25FC  
                            u5520 331E                              u6400 08A0  
                            u7120 1BBE                              u7040 1930  
                            u4801 2800                              u6081 2EC4  
                            u6161 307E                              u6241 2B7C  
                            u5361 1858                              u5281 1786  
                            u6321 2A96                              u6305 2A4E  
                            u5441 2C9A                              u5425 2C4E  
                            u5601 25F8                              u6401 089C  
                            u7121 1BB8                              u7041 192C  
                            u4810 2814                              u3930 34CC  
                            u4730 3722                              u6090 2EE2  
                            u6170 30A0                              u6250 2B9E  
                            u5370 1878                              u5290 17A0  
                            u6330 2AC2                              u5450 2CC8  
                            u5610 2650                              u5530 3334  
                            u6410 08B2                              u7130 1BC0  
                            u7050 19D8                              u4811 2810  
                            u3931 34C8                              u4731 371E  
                            u6091 2EDE                              u6171 309C  
                            u6251 2B9A                              u5371 1874  
                            u5291 179C                              u6331 2ABE  
                            u5451 2CC4                              u5531 3330  
                            u6411 08AE                              u7051 19D2  
                            u4820 2822                              u3940 34E6  
                            u6180 30B6                              u5700 21B0  
                            u6260 2BBE                              u6340 2AE2  
                            u5620 266C                              u5540 2500  
                            u5380 2F88                              u6500 0A9A  
                            u6420 08FA                              u7140 1BD8  
                            u7060 19DA                              u4821 281E  
                            u3941 34E2                              u6181 30B2  
                            u5701 21AC                              u6261 2BBA  
                            u6341 2ADE                              u5621 2668  
                            u5381 2F84                              u6501 0A96  
                            u6421 08F6                              u7141 1BD4  
                            u4830 285C                              u4750 26DC  
                            u6190 30DA                              u5710 21C0  
                            u6270 2C0E                              u6350 2AF2  
                            u5470 2D02                              u5630 26A8  
                            u5550 252E                              u4910 2DFE  
                            u5390 2FAA                              u6510 0B2E  
                            u6430 0928                              u7150 1C74  
                            u7070 19F2                              u4831 2858  
                            u4751 26D8                              u6191 30D6  
                            u5711 21BC                              u6271 2C0A  
                            u6351 2AEE                              u5471 2CFC  
                            u5631 26A4                              u5615 2646  
                            u5551 252A                              u4911 2DFA  
                            u5391 2FA6                              u6511 0B2A  
                            u6431 0922                              u7151 1C70  
                            u7071 19EE                              u4840 286A  
                            u4760 26EA                              u5640 3652  
                            u6360 3412                              u5800 237A  
                            u5720 2200                              u6280 3600  
                            u5480 2D04                              u5560 2550  
                            u4920 2E10                              u6600 0CAE  
                            u6520 0BA0                              u6440 092A  
                            u7080 1A24                              u7160 32E2  
                            u4841 2866                              u4761 26E6  
                            u5641 364C                              u6361 340E  
                            u5801 2376                              u5721 21FC  
                            u6281 35FC                              u5465 2CDA  
                            u5561 254C                              u5545 24F6  
                            u4921 2E0C                              u6601 0CAA  
                            u6521 0B9C                              u7081 1A20  
                            u7161 32DE                              u4770 2746  
                            u4850 323C                              u5650 3654  
                            u6370 3440                              u5810 238C  
                            u5730 2240                              u6290 2A24  
                            u4930 2E38                              u5490 3394  
                            u6610 0CC0                              u6530 0BC6  
                            u6450 0942                              u7090 1A66  
                            u4771 2742                              u4851 3238  
                            u6371 343C                              u5811 2388  
                            u5731 223C                              u6291 2A20  
                            u4931 2E34                              u6611 0CBC  
                            u6531 0BC2                              u6451 093E  
                            u7091 1A62                              u4780 279C  
                            u4860 3584                              u5820 23BA  
                            u5740 22B6                              u5660 2138  
                            u5900 1D20                              u5580 25BC  
                            u4940 2E6E                              u6700 0F8A  
                            u6620 0CCE                              u6540 0BD8  
                            u6460 09CE                              u6380 0842  
                            u4781 2798                              u4861 3580  
                            u5821 23B6                              u5741 22B2  
                            u5661 2134                              u5901 1D1C  
                            u5581 25B8                              u4941 2E6A  
                            u6701 0F86                              u6621 0CCA  
                            u6541 0BD4                              u6461 09CA  
                            u6381 083E                              u4790 27E6  
                            u5830 23D0                              u5750 22D8  
                            u5670 214A                              u5910 1D30  
                            u5590 25E0                              u4950 3570  
                            u6710 102C                              u6630 0CE4  
                            u6550 0BFA                              u6470 09FC  
                            u6390 0892                              u4791 27E2  
                            u5831 23CC                              u5751 22D4  
                            u5671 2146                              u5911 1D2C  
                            u5575 2564                              u4951 356C  
                            u6711 1028                              u6631 0CE0  
                            u6551 0BF6                              u6471 09F6  
                            u6391 088E                              u5840 23E4  
                            u5760 2302                              u5680 215A  
                            u5920 1D70                              u5576 256E  
                            u4960 3682                              u6800 11E2  
                            u6720 1040                              u6640 0CF2  
                            u6560 0C20                              u6480 09FE  
                            u5841 23E0                              u5761 22FE  
                            u5681 2156                              u5921 1D6C  
                            u5577 257E                              u4961 367E  
                            u5497 338A                              u6801 11DE  
                            u6721 103C                              u6641 0CEE  
                            u6561 0C1C                              u5850 23FE  
                            u5770 2326                              u5690 219E  
                            u5930 1D82                              u4970 35E2  
                            u6810 11F0                              u6730 1052  
                            u6650 0D1C                              u6570 0C36  
                            u6490 0A16                              i2l75 376C  
                            u5851 23FA                              u5771 2322  
                            u5691 219A                              u5931 1D7E  
                            u5595 25D6                              u4971 35DC  
                            u6811 11EC                              u6731 104E  
                            u6651 0D18                              u6571 0C32  
                            u6491 0A12                              u6900 28B6  
                            u5860 2446                              u5780 233C  
                            u5940 1D92                              u4980 35E4  
                            u6820 1226                              u6740 1060  
                            u6660 0E64                              u6580 0C52  
                            u6901 28B2                              u5861 2442  
                            u5781 2338                              u5941 1D8E  
                            u6821 1222                              u6741 105C  
                            u6661 0E60                              u6581 0C4E  
                            u6910 28EC                              u5870 2476  
                            u5790 235A                              u5950 1DC8  
                            u4990 13E6                              u6830 1254  
                            u6750 107C                              u6670 0ECA  
                            u6590 0C88                              u6911 28E8  
                            u5871 2472                              u5791 2356  
                            u5951 1DC4                              u4991 13E2  
                            u6831 1250                              u6751 1078  
                            u6671 0EC6                              u6591 0C84  
                            u6920 2908                              u5880 24A4  
                            u5960 1DD8                              u6840 12D8  
                            u6760 108A                              u6680 0F12  
                            u6921 2904                              u5881 24A0  
                            u5961 1DD4                              u6841 12D4  
                            u6761 1086                              u6681 0F0E  
                            u6930 29BE                              u5970 1F52  
                            u5890 1D0E                              u6850 12F2  
                            u6770 10E2                              u6690 0F22  
                            u6931 29B8                              u5891 1D0A  
                            u6851 12EE                              u6771 10DE  
                            u6691 0F1E                              u6940 29C0  
                            u5980 1FAC                              u6860 130A  
                            u6780 11B4                              u5981 1FA8  
                            u6861 1306                              u6781 11B0  
                            u6950 29D6                              u5990 1FCC  
                            u6870 1368                              u6790 11D0  
                            u6951 29D2                              u5991 1FC8  
                            u5975 1F48                              u6871 1362  
                            u6791 11CC                              u6960 29E8  
                            u6880 136A                              u6961 29E4  
                            u6890 1380                              u6970 2D40  
                            u6891 137C                              u6971 2D3C  
                            u6980 2D72                              u6981 2D6E  
                            u6990 2D8E                              u6991 2D8A  
                            _dbuf 0100                              _atoi 287E  
                            _main 3196                              _prec 004E  
                            _nout 00D2                              pad@i 001E  
                            pad@p 001B                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            pad@w 0020                              fsr2l 000FD9  
                            btemp 0052                  __end_of_ADC_Init 37D0  
                __end_of_ADC_Read 328A                     ___fpclassifyf 2C18  
                            prodh 000FF4                              prodl 000FF3  
                            start 000E                   __end_of_MSdelay 34E8  
                   __CFG_IESO$OFF 000000                   ___fldiv@new_exp 0018  
                   _LCD_String_xy 3572                      _tolower$1061 0013  
                    ___param_bank 000000                             ??_pad 001D  
                __end_of_LCD_Char 378E                  __end_of_LCD_Init 36F4  
                   __CFG_PLLDIV$1 000000                    __CFG_CCP2MX$ON 000000  
                   ___fltol@sign1 000F                             ?_atoi 000E  
                 __end_of___fladd 188C                             ?_main 0001  
                 __end_of___fldiv 24B8                   __end_of___awdiv 2F7A  
                 __end_of___flneg 3622                             STR_10 0816  
                           STR_12 0816                   __end_of___awmod 30EC  
                 __end_of___flmul 211E                   __end_of___flsub 352E  
                 __end_of___fltol 2B14                   ___awdiv@divisor 0009  
                           _LATD2 007C62                             _LATD3 007C63  
                           _LATC6 007C5E                             i2l115 349C  
                 ___awdiv@counter 000B                      vfpfcnvrt@fmt 0042  
                   __CFG_USBDIV$1 000000                             _TRISA 000F92  
                           _TRISD 000F95                             _TRISE 000F96  
                   __CFG_PWRT$OFF 000000                     __CFG_WRT0$OFF 000000  
                   __CFG_WRT1$OFF 000000                     __CFG_WRT2$OFF 000000  
                   __CFG_WRT3$OFF 000000                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              __size_ofi2_MSdelay 0052                    __CFG_EBTR2$OFF 000000  
                  __CFG_EBTR3$OFF 000000                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                  __CFG_EBTRB$OFF 000000                             _flags 0050  
                           _fputc 2DEC                             _fputs 352E  
                 __end_of_isdigit 365A                             atoi@n 001B  
                           pad@fp 0017                             atoi@s 000E  
                           _width 004C                             _putch 37DE  
                 __end_of_isspace 344C                   __end_of_isupper 35EA  
                           tablat 000FF5                             ttemp5 0053  
                           ttemp6 0056                             ttemp7 005A  
                           status 000FD8                             wtemp8 0053  
             __size_of_LCD_String 0030                   __end_of_sprintf 33FA  
                  ?___fpclassifyf 0007                   __end_of_tolower 334C  
                 __end_of_strncmp 2DEC                    __CFG_ICPRT$OFF 000000  
                  ?_LCD_String_xy 0010                    __CFG_MCLRE$OFF 000000  
                 __initialization 3690                      __end_of_atoi 2A0E  
                    __end_of_main 3212          ?_External_Interrupt_Init 0001  
                          ??_atoi 0010                            ??_main 004C  
                   __activetblptr 000002                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            _ADCON2 000FC0  
                          ?_fputc 0007                            ?_fputs 0010  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
                ___awdiv@dividend 0007                            ?_putch 0001  
                LCD_String_xy@msg 0011                  LCD_String_xy@pos 0010  
                LCD_String_xy@row 0013                         ??_MSdelay 0009  
                          i2l4010 376A                            i2l4006 374C  
                          i2l4008 375E                            i2l3970 344C  
                          i2l3972 3458                            i2l3982 3482  
                          i2l3974 3460                            i2l3984 3486  
                          i2l3978 347A                            _OSCCON 000FD3  
                          _MY_ISR 0008                  __end_of___xxtofl 287E  
                  __CFG_XINST$OFF 000000                 __end_ofi2_MSdelay 349E  
                    vfprintf@cfmt 004A                            ___flge 2B14  
                          ___fleq 30EC                         ??___fladd 000F  
                          ___wmul 3724                         ??___fldiv 000F  
                       ??___awdiv 000B                         ??___flneg 000B  
                  __CFG_STVREN$ON 000000                         ??___awmod 000B  
                       ??___flmul 000F                         ??___flsub 0028  
                       ??___fltol 000B                            _efgtoa 081A  
                 ADC_Read@channel 0015                            _floorf 24B8  
                 ADC_Read@digital 001B                            clear_0 3696  
                          clear_1 36A2                  ___awdiv@quotient 000D  
                 ___awmod@divisor 0009                   ___awmod@counter 000B  
                          pad@buf 0019              __size_of_LCD_Command 001E  
                          _strcpy 334C                            _strlen 365A  
                          fputc@c 0007                            fputs@c 0014  
                          fputs@i 0015                            fputs@s 0010  
                       ??_isdigit 0009                   ___fpclassifyf@e 000F  
                       ?_ADC_Init 0001                         ?_ADC_Read 0015  
                 ___fpclassifyf@u 0011                   ___fpclassifyf@x 0007  
                    __mediumconst 0000                         ??_isspace 0009  
                          tblptrh 000FF7                         ??_isupper 0009  
                          tblptrl 000FF6                            tblptru 000FF8  
                          putch@c 0001                  __end_of_vfprintf 32EC  
                       ??_sprintf 004C                         ??_tolower 000F  
                       ??_strncmp 000D                        ___flge@ff1 0020  
                      ___flge@ff2 0024                   ??___fpclassifyf 000B  
                    ___xxtofl@arg 0011                      ___xxtofl@exp 0010  
                    ___xxtofl@val 0007                        ___fleq@ff1 0007  
                      ___fleq@ff2 000B                         ?_LCD_Char 0001  
                      __accesstop 0060           __end_of__initialization 36B4  
                       ?_LCD_Init 0001                   __CFG_PBADEN$OFF 000000  
                 ??_LCD_String_xy 0013                        ___flneg@f1 0007  
                   ___rparam_used 000001                        ___fltol@f1 0007  
 __end_of_External_Interrupt_Init 37DE                    __pcstackCOMRAM 0001  
                   __end_of_fputc 2EB6                     __end_of_fputs 3572  
                   __end_of_putch 37E0                      ??_LCD_String 0010  
                      ??_ADC_Init 0007                        ??_ADC_Read 0019  
                         ??_fputc 000B                           ??_fputs 0014  
                         ??_putch 0007                        __pbssBANK0 00CA  
                      __pbssBANK1 0100                        ??_LCD_Char 000D  
                      ??_LCD_Init 000E                           ?_MY_ISR 0001  
              __end_of_LCD_String 3724                        _efgtoa$450 0068  
                      _efgtoa$444 0064                        _efgtoa$445 0066  
                      _efgtoa$454 006A                        _efgtoa$455 006C  
                      _efgtoa$456 006E                           ?___flge 0020  
                         ?___fleq 0007                           ?___wmul 0007  
                         ?_efgtoa 0034                           ?_floorf 0020  
                         ?_strcpy 0007                           ?_strlen 0007  
                         _INTCON2 000FF1                         ?___xxtofl 0007  
              __size_of_vfpfcnvrt 0468                           _MSdelay 349E  
                 __CFG_VREGEN$OFF 000000                   __size_of_MY_ISR 3768  
                   LCD_String@msg 000E                           __Hparam 0000  
                         __Lparam 0000                   __size_of___flge 0104  
                 __size_of___fleq 00AA                           ___fladd 13CC  
                         ___fldiv 211E                           ___awdiv 2EB6  
                         ___flneg 35EA                           ___awmod 303C  
                         ___flmul 1CF4                           ___flsub 34E8  
                         ___fltol 2A0E                   __size_of___wmul 0026  
                       ?_vfprintf 00A4                      __psmallconst 0800  
                 __size_of_efgtoa 0BB2                   __size_of_floorf 0212  
                         __pcinit 3690                           __ramtop 0800  
                         __ptext0 3196                           __ptext1 33A8  
                         __ptext2 328A                           __ptext3 188C  
                         __ptext4 2D16                           __ptext5 081A  
                         __ptext6 32EC                           __ptext7 35B2  
                         __ptext8 334C                           __ptext9 2F7A  
                 __size_of_strcpy 005C                   __size_of_strlen 0036  
                    __size_of_pad 00C2                           _isdigit 3622  
                      ??___xxtofl 000B                  ___awmod@dividend 0007  
                         _isspace 33FA                           _isupper 35B2  
                         efgtoa@c 003A                           efgtoa@d 0078  
                         efgtoa@e 0090                           efgtoa@f 0036  
                         efgtoa@g 008C                           efgtoa@h 0082  
                         efgtoa@i 008A                           efgtoa@l 0086  
                         efgtoa@m 0074                           efgtoa@n 0092  
                         efgtoa@p 007C                           efgtoa@t 0070  
                         efgtoa@u 0094                           efgtoa@w 007F  
                         atoi@neg 0014  __size_of_External_Interrupt_Init 000E  
                         _sprintf 33A8                           _tolower 32EC  
                         _strncmp 2D16                    __pintcode_body 374A  
            end_of_initialization 36B4                           floorf@e 002E  
                         floorf@m 002A                           floorf@u 0030  
                         floorf@x 0020                           fputc@fp 0009  
                  LCD_Command@cmd 000D                     __Lmediumconst 0000  
                         int_func 374A                           fputs@fp 0012  
               __end_of_vfpfcnvrt 1CF4                        efgtoa@mode 0081  
                      efgtoa@sign 007A                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                        ??_vfprintf 004A  
                       i2_MSdelay 344C                           strcpy@d 000F  
                         strlen@a 0009                           strcpy@s 000D  
                         strlen@s 0007                     ?_process_data 0001  
                     ___fladd@grs 0016                     ___xxtofl@sign 000F  
                       _TRISBbits 000F93                         _TRISCbits 000F94  
                     ___fldiv@grs 001A                       ___fldiv@rem 0013  
               __size_of_ADC_Init 0012                 __size_of_ADC_Read 0078  
                     ___flmul@grs 0015                 __size_of_LCD_Char 001E  
                  __end_of_MY_ISR 3770                        main@result 00BC  
               __size_of_LCD_Init 0032                     ??_LCD_Command 000D  
                  __end_of___flge 2C18                    __end_of___fleq 3196  
                     vfpfcnvrt@ap 0044                       vfpfcnvrt@ct 00A0  
                     vfpfcnvrt@fp 0040                    __end_of___wmul 374A  
                      ?i2_MSdelay 0001                    __end_of_efgtoa 13CC  
                  __end_of_floorf 26CA                        floorf@F524 00CA  
                  ??_process_data 0007                    __end_of_strcpy 33A8  
                  __end_of_strlen 3690               start_initialization 3690  
                     __end_of_pad 303C             __end_of___fpclassifyf 2D16  
                        ??_MY_ISR 0007             __end_of_LCD_String_xy 35B2  
                     vfprintf@fmt 00A6                          ??___flge 0028  
                        ??___fleq 000F                          ??___wmul 000B  
                        ??_efgtoa 003B                          ??_floorf 0024  
                __CFG_LPT1OSC$OFF 000000                          ??_strcpy 000B  
                        ??_strlen 0009                         ___fladd@a 000B  
                       ___fladd@b 0007                         ___fldiv@a 000B  
                       ___fldiv@b 0007               __end_of_LCD_Command 37AC  
                       ___flmul@a 000B                         ___flmul@b 0007  
                     __pbssCOMRAM 004C                         ___flsub@a 0024  
                       ___flsub@b 0020           _External_Interrupt_Init 37D0  
                   __pcstackBANK0 0060                 __size_of___xxtofl 01B4  
                        ?_MSdelay 0007                      i2MSdelay@val 0001  
                       __pintcode 0008                          ?___fladd 0007  
                        ?___fldiv 0007                          ?___awdiv 0007  
                        ?___flneg 0007                          ?___awmod 0007  
                        ?___flmul 0007                          ?___flsub 0020  
                        ?___fltol 0007                       ??i2_MSdelay 0003  
               __size_of_vfprintf 0062                       __smallconst 0800  
                        ?_isdigit 0007                          _ADC_Init 37BE  
                        _ADC_Read 3212                          ?_isspace 0007  
                        ?_isupper 0007             LCD_String_xy@location 0014  
                        ?_sprintf 00AA                          ?_tolower 000D  
                  __size_of_fputc 00CA                    __size_of_fputs 0044  
                        ?_strncmp 0007                    __size_of_putch 0002  
                        MSdelay@i 0009                          MSdelay@j 000B  
                        _LCD_Char 3770                          _LCD_Init 36C2  
                  ___wmul@product 000B              __end_of_process_data 37BE  
                        i2u490_45 375E                          i2u487_40 3476  
                        i2u487_41 3472                          i2u488_40 349C  
                        i2u488_41 3498                          i2u489_40 375C  
                        i2u489_41 3756                  __CFG_WDTPS$32768 000000  
                     _LCD_Command 378E                         _vfpfcnvrt 188C  
                      _ADCON0bits 000FC2                 ___wmul@multiplier 0007  
       ??_External_Interrupt_Init 0007                        vfpfcnvrt@c 00A3  
                      vfpfcnvrt@f 009C                  __size_of_MSdelay 004A  
                        __Hrparam 0000                        vfprintf@ap 00A8  
                        __Lrparam 0000                        vfprintf@fp 00A4  
                __size_of___fladd 04C0                  __size_of___fldiv 039A  
                __size_of___awdiv 00C4                  __size_of___flneg 0038  
                __size_of___awmod 00B0                  __size_of___flmul 042A  
                __size_of___flsub 0046                  __size_of___fltol 0106  
                      ?_vfpfcnvrt 0040                ___fpclassifyf@F463 00CE  
                      sprintf@fmt 00AC                          ___xxtofl 26CA  
                        _atoi$945 0016                          _atoi$946 001A  
                        _atoi$947 0018                  __size_of_isdigit 0038  
                __size_of_isspace 0052                          __ptext10 365A  
                        __ptext11 352E                          __ptext20 1CF4  
                        __ptext12 2DEC                          __ptext21 2B14  
                        __ptext13 37DE                          __ptext30 3572  
                        __ptext22 30EC                          __ptext14 24B8  
                        __ptext31 36F4                          __ptext23 211E  
                        __ptext15 2C18                          __ptext40 37BE  
                        __ptext32 3770                          __ptext24 303C  
                        __ptext16 2A0E                          __ptext33 36C2  
                        __ptext25 2EB6                          __ptext17 34E8  
                        __ptext42 344C                          __ptext34 378E  
                        __ptext26 287E                          __ptext18 13CC  
                        __ptext35 37AC                          __ptext27 33FA  
                        __ptext19 35EA                          __ptext36 349E  
                        __ptext28 3622                          __ptext37 37D0  
                        __ptext29 3724                          __ptext38 3212  
                        __ptext39 26CA                  __size_of_isupper 0038  
                __size_of_sprintf 0052                  __size_of_tolower 0060  
                      strcpy@dest 0007                  __size_of_strncmp 00D6  
                   __size_of_atoi 0190                     __size_of_main 007C  
                      MSdelay@val 0007                          efgtoa@fp 0034  
                        efgtoa@ne 0076                          efgtoa@pp 0072  
                        efgtoa@ou 0060                          int$flags 0052  
                        _vfprintf 328A                        _LCD_String 36F4  
                     _isspace$976 000D             __CFG_CPUDIV$OSC1_PLL2 000000  
                process_data@data 0007                        _INTCONbits 000FF2  
                        isdigit@c 0007             __size_of_process_data 0012  
                        intlevel2 0000                         sprintf@ap 00B4  
                      i2MSdelay@i 0003                        i2MSdelay@j 0005  
                        isspace@c 0007                         strcpy@src 0009  
                        isupper@c 0007                         strncmp@_l 0007  
                       strncmp@_r 0009                       efgtoa@nmode 007E  
                     ??_vfpfcnvrt 0046                     _vfpfcnvrt$470 0098  
                   _vfpfcnvrt$474 009A               __CFG_FOSC$INTOSC_EC 000000  
                        sprintf@f 00B6                          tolower@c 000D  
                        sprintf@s 00AA            __size_of___fpclassifyf 00FE  
                    _process_data 37AC                          strncmp@l 000E  
                        strncmp@n 000B                          strncmp@r 0010  
          __size_of_LCD_String_xy 0040                     ___fladd@signs 0013  
                    ___fladd@aexp 0014                      ___fladd@bexp 0015  
