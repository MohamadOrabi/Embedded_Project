

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Nov 15 23:20:59 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53  0000                     
    54                           ; Version 2.10
    55                           ; Generated 31/07/2019 GMT
    56                           ; 
    57                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC18F4550 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88  0000                     _TRISD	set	3989
    89  0000                     _TRISE	set	3990
    90  0000                     _TRISA	set	3986
    91  0000                     _LATE	set	3981
    92  0000                     _LATA	set	3977
    93  0000                     _LATD3	set	31843
    94  0000                     _LATD2	set	31842
    95  0000                     _ADCON0bits	set	4034
    96  0000                     _ADCON0	set	4034
    97  0000                     _ADRESL	set	4035
    98  0000                     _ADRESH	set	4036
    99  0000                     _ADCON2	set	4032
   100  0000                     _ADCON1	set	4033
   101  0000                     _OSCCON	set	4051
   102                           
   103                           	psect	smallconst
   104  000800                     __psmallconst:
   105                           	opt callstack 0
   106  000800  00                 	db	0
   107  000801                     STR_1:
   108  000801  25                 	db	37
   109  000802  2E                 	db	46
   110  000803  32                 	db	50	;'2'
   111  000804  66                 	db	102	;'f'
   112  000805  00                 	db	0
   113  000806                     STR_2:
   114  000806  49                 	db	73	;'I'
   115  000807  4E                 	db	78	;'N'
   116  000808  46                 	db	70	;'F'
   117  000809  00                 	db	0
   118  00080A                     STR_6:
   119  00080A  4E                 	db	78	;'N'
   120  00080B  41                 	db	65	;'A'
   121  00080C  4E                 	db	78	;'N'
   122  00080D  00                 	db	0
   123  00080E                     STR_3:
   124  00080E  69                 	db	105	;'i'
   125  00080F  6E                 	db	110	;'n'
   126  000810  66                 	db	102	;'f'
   127  000811  00                 	db	0
   128  000812                     STR_7:
   129  000812  6E                 	db	110	;'n'
   130  000813  61                 	db	97	;'a'
   131  000814  6E                 	db	110	;'n'
   132  000815  00                 	db	0
   133  000816                     STR_10:
   134  000816  6C                 	db	108	;'l'
   135  000817  66                 	db	102	;'f'
   136  000818  00                 	db	0
   137  0000                     
   138                           ; #config settings
   139  000819  00                 	db	0	; dummy byte at the end
   140  0000                     
   141                           	psect	cinit
   142  003490                     __pcinit:
   143                           	opt callstack 0
   144  003490                     start_initialization:
   145                           	opt callstack 0
   146  003490                     __initialization:
   147                           	opt callstack 0
   148                           
   149                           ; Clear objects allocated to BANK1 (80 bytes)
   150  003490  EE01  F000         	lfsr	0,__pbssBANK1
   151  003494  0E50               	movlw	80
   152  003496                     clear_0:
   153  003496  6AEE               	clrf	postinc0,c
   154  003498  06E8               	decf	wreg,f,c
   155  00349A  E1FD               	bnz	clear_0
   156                           
   157                           ; Clear objects allocated to BANK0 (14 bytes)
   158  00349C  EE00  F0AE         	lfsr	0,__pbssBANK0
   159  0034A0  0E0E               	movlw	14
   160  0034A2                     clear_1:
   161  0034A2  6AEE               	clrf	postinc0,c
   162  0034A4  06E8               	decf	wreg,f,c
   163  0034A6  E1FD               	bnz	clear_1
   164                           
   165                           ; Clear objects allocated to COMRAM (2 bytes)
   166  0034A8  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   167  0034AA  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   168  0034AC                     end_of_initialization:
   169                           	opt callstack 0
   170  0034AC                     __end_of__initialization:
   171                           	opt callstack 0
   172  0034AC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   173  0034AE  6EF8               	movwf	tblptru,c
   174  0034B0  0100               	movlb	0
   175  0034B2  EF7C  F018         	goto	_main	;jump to C main() function
   176                           
   177                           	psect	bssCOMRAM
   178  00005E                     __pbssCOMRAM:
   179                           	opt callstack 0
   180  00005E                     _flags:
   181                           	opt callstack 0
   182  00005E                     	ds	2
   183                           
   184                           	psect	bssBANK0
   185  0000AE                     __pbssBANK0:
   186                           	opt callstack 0
   187  0000AE                     floorf@F524:
   188                           	opt callstack 0
   189  0000AE                     	ds	4
   190  0000B2                     ___fpclassifyf@F463:
   191                           	opt callstack 0
   192  0000B2                     	ds	4
   193  0000B6                     _nout:
   194                           	opt callstack 0
   195  0000B6                     	ds	2
   196  0000B8                     _width:
   197                           	opt callstack 0
   198  0000B8                     	ds	2
   199  0000BA                     _prec:
   200                           	opt callstack 0
   201  0000BA                     	ds	2
   202                           
   203                           	psect	bssBANK1
   204  000100                     __pbssBANK1:
   205                           	opt callstack 0
   206  000100                     _dbuf:
   207                           	opt callstack 0
   208  000100                     	ds	80
   209                           
   210                           	psect	cstackBANK0
   211  000060                     __pcstackBANK0:
   212                           	opt callstack 0
   213  000060                     efgtoa@ou:
   214                           	opt callstack 0
   215                           
   216                           ; 4 bytes @ 0x0
   217  000060                     	ds	4
   218  000064                     _efgtoa$281:
   219                           	opt callstack 0
   220                           
   221                           ; 2 bytes @ 0x4
   222  000064                     	ds	2
   223  000066                     _efgtoa$282:
   224                           	opt callstack 0
   225                           
   226                           ; 2 bytes @ 0x6
   227  000066                     	ds	2
   228  000068                     _efgtoa$287:
   229                           	opt callstack 0
   230                           
   231                           ; 2 bytes @ 0x8
   232  000068                     	ds	2
   233  00006A                     _efgtoa$291:
   234                           	opt callstack 0
   235                           
   236                           ; 2 bytes @ 0xA
   237  00006A                     	ds	2
   238  00006C                     _efgtoa$292:
   239                           	opt callstack 0
   240                           
   241                           ; 2 bytes @ 0xC
   242  00006C                     	ds	2
   243  00006E                     _efgtoa$293:
   244                           	opt callstack 0
   245                           
   246                           ; 2 bytes @ 0xE
   247  00006E                     	ds	2
   248  000070                     efgtoa@t:
   249                           	opt callstack 0
   250                           
   251                           ; 2 bytes @ 0x10
   252  000070                     	ds	2
   253  000072                     efgtoa@pp:
   254                           	opt callstack 0
   255                           
   256                           ; 2 bytes @ 0x12
   257  000072                     	ds	2
   258  000074                     efgtoa@m:
   259                           	opt callstack 0
   260                           
   261                           ; 2 bytes @ 0x14
   262  000074                     	ds	2
   263  000076                     efgtoa@ne:
   264                           	opt callstack 0
   265                           
   266                           ; 2 bytes @ 0x16
   267  000076                     	ds	2
   268  000078                     efgtoa@d:
   269                           	opt callstack 0
   270                           
   271                           ; 2 bytes @ 0x18
   272  000078                     	ds	2
   273  00007A                     efgtoa@sign:
   274                           	opt callstack 0
   275                           
   276                           ; 2 bytes @ 0x1A
   277  00007A                     	ds	2
   278  00007C                     efgtoa@p:
   279                           	opt callstack 0
   280                           
   281                           ; 2 bytes @ 0x1C
   282  00007C                     	ds	2
   283  00007E                     efgtoa@nmode:
   284                           	opt callstack 0
   285                           
   286                           ; 1 bytes @ 0x1E
   287  00007E                     	ds	1
   288  00007F                     efgtoa@w:
   289                           	opt callstack 0
   290                           
   291                           ; 2 bytes @ 0x1F
   292  00007F                     	ds	2
   293  000081                     efgtoa@mode:
   294                           	opt callstack 0
   295                           
   296                           ; 1 bytes @ 0x21
   297  000081                     	ds	1
   298  000082                     efgtoa@h:
   299                           	opt callstack 0
   300                           
   301                           ; 4 bytes @ 0x22
   302  000082                     	ds	4
   303  000086                     efgtoa@l:
   304                           	opt callstack 0
   305                           
   306                           ; 4 bytes @ 0x26
   307  000086                     	ds	4
   308  00008A                     efgtoa@i:
   309                           	opt callstack 0
   310                           
   311                           ; 2 bytes @ 0x2A
   312  00008A                     	ds	2
   313  00008C                     efgtoa@g:
   314                           	opt callstack 0
   315                           
   316                           ; 4 bytes @ 0x2C
   317  00008C                     	ds	4
   318  000090                     efgtoa@e:
   319                           	opt callstack 0
   320                           
   321                           ; 2 bytes @ 0x30
   322  000090                     	ds	2
   323  000092                     efgtoa@n:
   324                           	opt callstack 0
   325                           
   326                           ; 2 bytes @ 0x32
   327  000092                     	ds	2
   328  000094                     efgtoa@u:
   329                           	opt callstack 0
   330                           
   331                           ; 4 bytes @ 0x34
   332  000094                     	ds	6
   333  00009A                     sprintf@ap:
   334                           	opt callstack 0
   335                           
   336                           ; 2 bytes @ 0x3A
   337  00009A                     	ds	2
   338  00009C                     sprintf@f:
   339                           	opt callstack 0
   340                           
   341                           ; 6 bytes @ 0x3C
   342  00009C                     	ds	6
   343  0000A2                     main@result:
   344                           	opt callstack 0
   345                           
   346                           ; 10 bytes @ 0x42
   347  0000A2                     	ds	10
   348  0000AC                     main@digital:
   349                           	opt callstack 0
   350                           
   351                           ; 2 bytes @ 0x4C
   352  0000AC                     	ds	2
   353                           
   354                           	psect	cstackCOMRAM
   355  000001                     __pcstackCOMRAM:
   356                           	opt callstack 0
   357  000001                     ?_ADC_Read:
   358                           	opt callstack 0
   359  000001                     ?_strlen:
   360                           	opt callstack 0
   361  000001                     ?___fpclassifyf:
   362                           	opt callstack 0
   363  000001                     ?_isupper:
   364                           	opt callstack 0
   365  000001                     ?_isdigit:
   366                           	opt callstack 0
   367  000001                     ?_strncmp:
   368                           	opt callstack 0
   369  000001                     ?_isspace:
   370                           	opt callstack 0
   371  000001                     ?___wmul:
   372                           	opt callstack 0
   373  000001                     ?___awdiv:
   374                           	opt callstack 0
   375  000001                     ?___awmod:
   376                           	opt callstack 0
   377  000001                     ?___fladd:
   378                           	opt callstack 0
   379  000001                     ?___fldiv:
   380                           	opt callstack 0
   381  000001                     ?___flmul:
   382                           	opt callstack 0
   383  000001                     ?___flneg:
   384                           	opt callstack 0
   385  000001                     ?___fltol:
   386                           	opt callstack 0
   387  000001                     process_data@data:
   388                           	opt callstack 0
   389  000001                     ADC_Read@channel:
   390                           	opt callstack 0
   391  000001                     MSdelay@val:
   392                           	opt callstack 0
   393  000001                     ___wmul@multiplier:
   394                           	opt callstack 0
   395  000001                     ___awdiv@dividend:
   396                           	opt callstack 0
   397  000001                     ___awmod@dividend:
   398                           	opt callstack 0
   399  000001                     isdigit@c:
   400                           	opt callstack 0
   401  000001                     isspace@c:
   402                           	opt callstack 0
   403  000001                     isupper@c:
   404                           	opt callstack 0
   405  000001                     fputc@c:
   406                           	opt callstack 0
   407  000001                     strcpy@dest:
   408                           	opt callstack 0
   409  000001                     strlen@s:
   410                           	opt callstack 0
   411  000001                     strncmp@_l:
   412                           	opt callstack 0
   413  000001                     ___fleq@ff1:
   414                           	opt callstack 0
   415  000001                     ___flneg@f1:
   416                           	opt callstack 0
   417  000001                     ___fltol@f1:
   418                           	opt callstack 0
   419  000001                     ___fladd@b:
   420                           	opt callstack 0
   421  000001                     ___fldiv@b:
   422                           	opt callstack 0
   423  000001                     ___flmul@b:
   424                           	opt callstack 0
   425  000001                     ___fpclassifyf@x:
   426                           	opt callstack 0
   427                           
   428                           ; 4 bytes @ 0x0
   429  000001                     	ds	2
   430  000003                     ??_ADC_Read:
   431  000003                     ??_isupper:
   432  000003                     ??_isdigit:
   433  000003                     ??_isspace:
   434  000003                     MSdelay@i:
   435                           	opt callstack 0
   436  000003                     ___wmul@multiplicand:
   437                           	opt callstack 0
   438  000003                     ___awdiv@divisor:
   439                           	opt callstack 0
   440  000003                     ___awmod@divisor:
   441                           	opt callstack 0
   442  000003                     fputc@fp:
   443                           	opt callstack 0
   444  000003                     strcpy@src:
   445                           	opt callstack 0
   446  000003                     strlen@a:
   447                           	opt callstack 0
   448  000003                     strncmp@_r:
   449                           	opt callstack 0
   450                           
   451                           ; 2 bytes @ 0x2
   452  000003                     	ds	2
   453  000005                     ??_fputc:
   454  000005                     ??___fpclassifyf:
   455  000005                     ??_strcpy:
   456  000005                     ??___fltol:
   457  000005                     ___awdiv@counter:
   458                           	opt callstack 0
   459  000005                     ___awmod@counter:
   460                           	opt callstack 0
   461  000005                     ADC_Read@digital:
   462                           	opt callstack 0
   463  000005                     MSdelay@j:
   464                           	opt callstack 0
   465  000005                     ___wmul@product:
   466                           	opt callstack 0
   467  000005                     strncmp@n:
   468                           	opt callstack 0
   469  000005                     ___fleq@ff2:
   470                           	opt callstack 0
   471  000005                     ___fladd@a:
   472                           	opt callstack 0
   473  000005                     ___fldiv@a:
   474                           	opt callstack 0
   475  000005                     ___flmul@a:
   476                           	opt callstack 0
   477                           
   478                           ; 4 bytes @ 0x4
   479  000005                     	ds	1
   480  000006                     ___awdiv@sign:
   481                           	opt callstack 0
   482  000006                     ___awmod@sign:
   483                           	opt callstack 0
   484                           
   485                           ; 1 bytes @ 0x5
   486  000006                     	ds	1
   487  000007                     ??_strncmp:
   488  000007                     ?_tolower:
   489                           	opt callstack 0
   490  000007                     LCD_Command@cmd:
   491                           	opt callstack 0
   492  000007                     LCD_Char@dat:
   493                           	opt callstack 0
   494  000007                     _isspace$813:
   495                           	opt callstack 0
   496  000007                     ___awdiv@quotient:
   497                           	opt callstack 0
   498  000007                     strcpy@s:
   499                           	opt callstack 0
   500  000007                     tolower@c:
   501                           	opt callstack 0
   502                           
   503                           ; 2 bytes @ 0x6
   504  000007                     	ds	1
   505  000008                     ?_atoi:
   506                           	opt callstack 0
   507  000008                     LCD_String@msg:
   508                           	opt callstack 0
   509  000008                     atoi@s:
   510                           	opt callstack 0
   511  000008                     strncmp@l:
   512                           	opt callstack 0
   513                           
   514                           ; 2 bytes @ 0x7
   515  000008                     	ds	1
   516  000009                     ??_tolower:
   517  000009                     ??___fladd:
   518  000009                     ??___fldiv:
   519  000009                     ??___flmul:
   520  000009                     ??___fleq:
   521  000009                     ___fltol@sign1:
   522                           	opt callstack 0
   523  000009                     ___fpclassifyf@e:
   524                           	opt callstack 0
   525  000009                     strcpy@d:
   526                           	opt callstack 0
   527                           
   528                           ; 2 bytes @ 0x8
   529  000009                     	ds	1
   530  00000A                     ??_atoi:
   531  00000A                     LCD_String_xy@pos:
   532                           	opt callstack 0
   533  00000A                     ___fltol@exp1:
   534                           	opt callstack 0
   535  00000A                     fputs@s:
   536                           	opt callstack 0
   537  00000A                     strncmp@r:
   538                           	opt callstack 0
   539                           
   540                           ; 2 bytes @ 0x9
   541  00000A                     	ds	1
   542  00000B                     LCD_String_xy@msg:
   543                           	opt callstack 0
   544  00000B                     ___fpclassifyf@u:
   545                           	opt callstack 0
   546                           
   547                           ; 4 bytes @ 0xA
   548  00000B                     	ds	1
   549  00000C                     fputs@fp:
   550                           	opt callstack 0
   551                           
   552                           ; 2 bytes @ 0xB
   553  00000C                     	ds	1
   554  00000D                     LCD_String_xy@row:
   555                           	opt callstack 0
   556  00000D                     ___fladd@signs:
   557                           	opt callstack 0
   558  00000D                     ___flmul@sign:
   559                           	opt callstack 0
   560  00000D                     _tolower$898:
   561                           	opt callstack 0
   562  00000D                     ___fldiv@rem:
   563                           	opt callstack 0
   564                           
   565                           ; 4 bytes @ 0xC
   566  00000D                     	ds	1
   567  00000E                     LCD_String_xy@location:
   568                           	opt callstack 0
   569  00000E                     ___fladd@aexp:
   570                           	opt callstack 0
   571  00000E                     fputs@c:
   572                           	opt callstack 0
   573  00000E                     atoi@neg:
   574                           	opt callstack 0
   575  00000E                     ___flmul@grs:
   576                           	opt callstack 0
   577                           
   578                           ; 4 bytes @ 0xD
   579  00000E                     	ds	1
   580  00000F                     ___fladd@bexp:
   581                           	opt callstack 0
   582  00000F                     fputs@i:
   583                           	opt callstack 0
   584                           
   585                           ; 2 bytes @ 0xE
   586  00000F                     	ds	1
   587  000010                     ___fladd@grs:
   588                           	opt callstack 0
   589  000010                     _atoi$782:
   590                           	opt callstack 0
   591                           
   592                           ; 2 bytes @ 0xF
   593  000010                     	ds	1
   594  000011                     ?_pad:
   595                           	opt callstack 0
   596  000011                     ___fldiv@sign:
   597                           	opt callstack 0
   598  000011                     pad@fp:
   599                           	opt callstack 0
   600                           
   601                           ; 2 bytes @ 0x10
   602  000011                     	ds	1
   603  000012                     ___flmul@aexp:
   604                           	opt callstack 0
   605  000012                     ___fldiv@new_exp:
   606                           	opt callstack 0
   607  000012                     _atoi$784:
   608                           	opt callstack 0
   609                           
   610                           ; 2 bytes @ 0x11
   611  000012                     	ds	1
   612  000013                     ___flmul@bexp:
   613                           	opt callstack 0
   614  000013                     pad@buf:
   615                           	opt callstack 0
   616                           
   617                           ; 2 bytes @ 0x12
   618  000013                     	ds	1
   619  000014                     _atoi$783:
   620                           	opt callstack 0
   621  000014                     ___fldiv@grs:
   622                           	opt callstack 0
   623  000014                     ___flmul@prod:
   624                           	opt callstack 0
   625                           
   626                           ; 4 bytes @ 0x13
   627  000014                     	ds	1
   628  000015                     pad@p:
   629                           	opt callstack 0
   630  000015                     atoi@n:
   631                           	opt callstack 0
   632                           
   633                           ; 2 bytes @ 0x14
   634  000015                     	ds	2
   635  000017                     ??_pad:
   636                           
   637                           ; 1 bytes @ 0x16
   638  000017                     	ds	1
   639  000018                     ___fldiv@bexp:
   640                           	opt callstack 0
   641  000018                     pad@i:
   642                           	opt callstack 0
   643  000018                     ___flmul@temp:
   644                           	opt callstack 0
   645                           
   646                           ; 2 bytes @ 0x17
   647  000018                     	ds	1
   648  000019                     ___fldiv@aexp:
   649                           	opt callstack 0
   650                           
   651                           ; 1 bytes @ 0x18
   652  000019                     	ds	1
   653  00001A                     ?_floorf:
   654                           	opt callstack 0
   655  00001A                     ?___flsub:
   656                           	opt callstack 0
   657  00001A                     pad@w:
   658                           	opt callstack 0
   659  00001A                     ___flge@ff1:
   660                           	opt callstack 0
   661  00001A                     ___flsub@b:
   662                           	opt callstack 0
   663  00001A                     floorf@x:
   664                           	opt callstack 0
   665                           
   666                           ; 4 bytes @ 0x19
   667  00001A                     	ds	4
   668  00001E                     ??_floorf:
   669  00001E                     ___flge@ff2:
   670                           	opt callstack 0
   671  00001E                     ___flsub@a:
   672                           	opt callstack 0
   673                           
   674                           ; 4 bytes @ 0x1D
   675  00001E                     	ds	4
   676  000022                     ??___flge:
   677                           
   678                           ; 1 bytes @ 0x21
   679  000022                     	ds	2
   680  000024                     floorf@m:
   681                           	opt callstack 0
   682                           
   683                           ; 4 bytes @ 0x23
   684  000024                     	ds	4
   685  000028                     floorf@e:
   686                           	opt callstack 0
   687                           
   688                           ; 2 bytes @ 0x27
   689  000028                     	ds	2
   690  00002A                     floorf@u:
   691                           	opt callstack 0
   692                           
   693                           ; 4 bytes @ 0x29
   694  00002A                     	ds	4
   695  00002E                     ?_efgtoa:
   696                           	opt callstack 0
   697  00002E                     efgtoa@fp:
   698                           	opt callstack 0
   699                           
   700                           ; 2 bytes @ 0x2D
   701  00002E                     	ds	2
   702  000030                     efgtoa@f:
   703                           	opt callstack 0
   704                           
   705                           ; 4 bytes @ 0x2F
   706  000030                     	ds	4
   707  000034                     efgtoa@c:
   708                           	opt callstack 0
   709                           
   710                           ; 1 bytes @ 0x33
   711  000034                     	ds	1
   712  000035                     ??_efgtoa:
   713                           
   714                           ; 1 bytes @ 0x34
   715  000035                     	ds	5
   716  00003A                     ?_vfpfcnvrt:
   717                           	opt callstack 0
   718  00003A                     vfpfcnvrt@fp:
   719                           	opt callstack 0
   720                           
   721                           ; 2 bytes @ 0x39
   722  00003A                     	ds	2
   723  00003C                     vfpfcnvrt@fmt:
   724                           	opt callstack 0
   725                           
   726                           ; 2 bytes @ 0x3B
   727  00003C                     	ds	2
   728  00003E                     vfpfcnvrt@ap:
   729                           	opt callstack 0
   730                           
   731                           ; 2 bytes @ 0x3D
   732  00003E                     	ds	2
   733  000040                     ??_vfpfcnvrt:
   734                           
   735                           ; 1 bytes @ 0x3F
   736  000040                     	ds	4
   737  000044                     _vfpfcnvrt$307:
   738                           	opt callstack 0
   739                           
   740                           ; 2 bytes @ 0x43
   741  000044                     	ds	2
   742  000046                     _vfpfcnvrt$311:
   743                           	opt callstack 0
   744                           
   745                           ; 2 bytes @ 0x45
   746  000046                     	ds	2
   747  000048                     vfpfcnvrt@f:
   748                           	opt callstack 0
   749                           
   750                           ; 4 bytes @ 0x47
   751  000048                     	ds	4
   752  00004C                     vfpfcnvrt@ct:
   753                           	opt callstack 0
   754                           
   755                           ; 3 bytes @ 0x4B
   756  00004C                     	ds	3
   757  00004F                     vfpfcnvrt@c:
   758                           	opt callstack 0
   759                           
   760                           ; 1 bytes @ 0x4E
   761  00004F                     	ds	1
   762  000050                     ?_vfprintf:
   763                           	opt callstack 0
   764  000050                     vfprintf@fp:
   765                           	opt callstack 0
   766                           
   767                           ; 2 bytes @ 0x4F
   768  000050                     	ds	2
   769  000052                     vfprintf@fmt:
   770                           	opt callstack 0
   771                           
   772                           ; 2 bytes @ 0x51
   773  000052                     	ds	2
   774  000054                     vfprintf@ap:
   775                           	opt callstack 0
   776                           
   777                           ; 2 bytes @ 0x53
   778  000054                     	ds	2
   779  000056                     vfprintf@cfmt:
   780                           	opt callstack 0
   781                           
   782                           ; 2 bytes @ 0x55
   783  000056                     	ds	2
   784  000058                     ?_sprintf:
   785                           	opt callstack 0
   786  000058                     sprintf@s:
   787                           	opt callstack 0
   788                           
   789                           ; 2 bytes @ 0x57
   790  000058                     	ds	2
   791  00005A                     sprintf@fmt:
   792                           	opt callstack 0
   793                           
   794                           ; 2 bytes @ 0x59
   795  00005A                     	ds	4
   796  00005E                     
   797                           ; 1 bytes @ 0x5D
   798 ;;
   799 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   800 ;;
   801 ;; *************** function _main *****************
   802 ;; Defined at:
   803 ;;		line 34 in file "main.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;  result         10   66[BANK0 ] unsigned char [10]
   808 ;;  digital         2   76[BANK0 ] int 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   818 ;;      Params:         0       0       0       0       0       0       0       0       0
   819 ;;      Locals:         0      12       0       0       0       0       0       0       0
   820 ;;      Temps:          0       0       0       0       0       0       0       0       0
   821 ;;      Totals:         0      12       0       0       0       0       0       0       0
   822 ;;Total ram usage:       12 bytes
   823 ;; Hardware stack levels required when called:    8
   824 ;; This function calls:
   825 ;;		_ADC_Init
   826 ;;		_ADC_Read
   827 ;;		_LCD_Init
   828 ;;		_LCD_String_xy
   829 ;;		_sprintf
   830 ;; This function is called by:
   831 ;;		Startup code after reset
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           	psect	text0
   836  0030F8                     __ptext0:
   837                           	opt callstack 0
   838  0030F8                     _main:
   839                           	opt callstack 23
   840  0030F8                     
   841                           ;main.c: 36:     OSCCON=0x72;
   842  0030F8  0E72               	movlw	114
   843  0030FA  6ED3               	movwf	211,c	;volatile
   844  0030FC                     
   845                           ;main.c: 37:     LCD_Init();
   846  0030FC  EC17  F01A         	call	_LCD_Init	;wreg free
   847  003100                     
   848                           ;main.c: 38:     int digital;;main.c: 39:     char result[10];;main.c: 40:     ADC_Init(
      +                          );
   849  003100  EC95  F01A         	call	_ADC_Init	;wreg free
   850  003104                     
   851                           ;main.c: 41:     digital=ADC_Read(7);
   852  003104  0E00               	movlw	0
   853  003106  6E02               	movwf	(ADC_Read@channel+1)^0,c
   854  003108  0E07               	movlw	7
   855  00310A  6E01               	movwf	ADC_Read@channel^0,c
   856  00310C  EC1E  F019         	call	_ADC_Read	;wreg free
   857  003110  C001  F0AC         	movff	?_ADC_Read,main@digital
   858  003114  C002  F0AD         	movff	?_ADC_Read+1,main@digital+1
   859  003118                     l3819:
   860                           
   861                           ;main.c: 44:         sprintf(result, "%.2f", digital);
   862  003118  0EA2               	movlw	low main@result
   863  00311A  6E58               	movwf	sprintf@s^0,c
   864  00311C  0E00               	movlw	high main@result
   865  00311E  6E59               	movwf	(sprintf@s+1)^0,c
   866  003120  0E01               	movlw	low STR_1
   867  003122  6E5A               	movwf	sprintf@fmt^0,c
   868  003124  0E08               	movlw	high STR_1
   869  003126  6E5B               	movwf	(sprintf@fmt+1)^0,c
   870  003128  C0AC  F05C         	movff	main@digital,?_sprintf+4
   871  00312C  C0AD  F05D         	movff	main@digital+1,?_sprintf+5
   872  003130  ECA7  F018         	call	_sprintf	;wreg free
   873  003134                     
   874                           ;main.c: 45:         LCD_String_xy(1,0,result);
   875  003134  0E00               	movlw	0
   876  003136  6E0A               	movwf	LCD_String_xy@pos^0,c
   877  003138  0EA2               	movlw	low main@result
   878  00313A  6E0B               	movwf	LCD_String_xy@msg^0,c
   879  00313C  0E00               	movlw	high main@result
   880  00313E  6E0C               	movwf	(LCD_String_xy@msg+1)^0,c
   881  003140  0E01               	movlw	1
   882  003142  EC88  F019         	call	_LCD_String_xy
   883  003146  EF8C  F018         	goto	l3819
   884  00314A  EF00  F000         	goto	start
   885  00314E                     __end_of_main:
   886                           	opt callstack 0
   887                           
   888 ;; *************** function _sprintf *****************
   889 ;; Defined at:
   890 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;  s               2   87[COMRAM] PTR unsigned char 
   893 ;;		 -> main@result(10), 
   894 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
   895 ;;		 -> STR_1(5), 
   896 ;; Auto vars:     Size  Location     Type
   897 ;;  f               6   60[BANK0 ] struct _IO_FILE
   898 ;;  ap              2   58[BANK0 ] PTR void [1]
   899 ;;		 -> ?_sprintf(2), 
   900 ;;  ret             2    0        int 
   901 ;; Return value:  Size  Location     Type
   902 ;;                  2   87[COMRAM] int 
   903 ;; Registers used:
   904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   910 ;;      Params:         6       0       0       0       0       0       0       0       0
   911 ;;      Locals:         0      10       0       0       0       0       0       0       0
   912 ;;      Temps:          0       0       0       0       0       0       0       0       0
   913 ;;      Totals:         6      10       0       0       0       0       0       0       0
   914 ;;Total ram usage:       16 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    7
   917 ;; This function calls:
   918 ;;		_vfprintf
   919 ;; This function is called by:
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text1
   925  00314E                     __ptext1:
   926                           	opt callstack 0
   927  00314E                     _sprintf:
   928                           	opt callstack 23
   929  00314E  0E5C               	movlw	low (?_sprintf+4)
   930  003150  0100               	movlb	0	; () banked
   931  003152  6F9A               	movwf	sprintf@ap& (0+255),b
   932  003154  0E00               	movlw	high (?_sprintf+4)
   933  003156  6F9B               	movwf	(sprintf@ap+1)& (0+255),b
   934  003158  C058  F09C         	movff	sprintf@s,sprintf@f
   935  00315C  C059  F09D         	movff	sprintf@s+1,sprintf@f+1
   936  003160                     
   937                           ; BSR set to: 0
   938  003160  0E00               	movlw	0
   939  003162  6F9F               	movwf	(sprintf@f+3)& (0+255),b
   940  003164  0E00               	movlw	0
   941  003166  6F9E               	movwf	(sprintf@f+2)& (0+255),b
   942  003168                     
   943                           ; BSR set to: 0
   944  003168  0E00               	movlw	0
   945  00316A  6FA1               	movwf	(sprintf@f+5)& (0+255),b
   946  00316C  0E00               	movlw	0
   947  00316E  6FA0               	movwf	(sprintf@f+4)& (0+255),b
   948  003170                     
   949                           ; BSR set to: 0
   950  003170  0E9C               	movlw	low sprintf@f
   951  003172  6E50               	movwf	vfprintf@fp^0,c
   952  003174  0E00               	movlw	high sprintf@f
   953  003176  6E51               	movwf	(vfprintf@fp+1)^0,c
   954  003178  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
   955  00317C  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
   956  003180  0E9A               	movlw	low sprintf@ap
   957  003182  6E54               	movwf	vfprintf@ap^0,c
   958  003184  0E00               	movlw	high sprintf@ap
   959  003186  6E55               	movwf	(vfprintf@ap+1)^0,c
   960  003188  ECED  F017         	call	_vfprintf	;wreg free
   961  00318C  0100               	movlb	0	; () banked
   962  00318E  519E               	movf	(sprintf@f+2)& (0+255),w,b
   963  003190  2458               	addwf	sprintf@s^0,w,c
   964  003192  6ED9               	movwf	fsr2l,c
   965  003194  519F               	movf	(sprintf@f+3)& (0+255),w,b
   966  003196  2059               	addwfc	(sprintf@s+1)^0,w,c
   967  003198  6EDA               	movwf	fsr2h,c
   968  00319A  0E00               	movlw	0
   969  00319C  6EDF               	movwf	indf2,c
   970  00319E                     
   971                           ; BSR set to: 0
   972  00319E  0012               	return		;funcret
   973  0031A0                     __end_of_sprintf:
   974                           	opt callstack 0
   975                           
   976 ;; *************** function _vfprintf *****************
   977 ;; Defined at:
   978 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
   981 ;;		 -> sprintf@f(6), 
   982 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
   983 ;;		 -> STR_1(5), 
   984 ;;  ap              2   83[COMRAM] PTR PTR void 
   985 ;;		 -> sprintf@ap(2), 
   986 ;; Auto vars:     Size  Location     Type
   987 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
   988 ;;		 -> STR_1(5), 
   989 ;; Return value:  Size  Location     Type
   990 ;;                  2   79[COMRAM] int 
   991 ;; Registers used:
   992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   998 ;;      Params:         6       0       0       0       0       0       0       0       0
   999 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1000 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1001 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1002 ;;Total ram usage:        8 bytes
  1003 ;; Hardware stack levels used:    1
  1004 ;; Hardware stack levels required when called:    6
  1005 ;; This function calls:
  1006 ;;		_vfpfcnvrt
  1007 ;; This function is called by:
  1008 ;;		_sprintf
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           	psect	text2
  1013  002FDA                     __ptext2:
  1014                           	opt callstack 0
  1015  002FDA                     _vfprintf:
  1016                           	opt callstack 23
  1017  002FDA                     
  1018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  1019  002FDA  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1020  002FDE  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1021  002FE2                     
  1022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1023  002FE2  0E00               	movlw	0
  1024  002FE4  0100               	movlb	0	; () banked
  1025  002FE6  6FB7               	movwf	(_nout+1)& (0+255),b
  1026  002FE8  0E00               	movlw	0
  1027  002FEA  6FB6               	movwf	_nout& (0+255),b
  1028                           
  1029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1030  002FEC  EF0B  F018         	goto	l3757
  1031  002FF0                     l3755:
  1032                           
  1033                           ; BSR set to: 0
  1034                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1035  002FF0  C050  F03A         	movff	vfprintf@fp,vfpfcnvrt@fp
  1036  002FF4  C051  F03B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1037  002FF8  0E56               	movlw	low vfprintf@cfmt
  1038  002FFA  6E3C               	movwf	vfpfcnvrt@fmt^0,c
  1039  002FFC  0E00               	movlw	high vfprintf@cfmt
  1040  002FFE  6E3D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1041  003000  C054  F03E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1042  003004  C055  F03F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1043  003008  EC46  F00C         	call	_vfpfcnvrt	;wreg free
  1044  00300C  503A               	movf	?_vfpfcnvrt^0,w,c
  1045  00300E  0100               	movlb	0	; () banked
  1046  003010  27B6               	addwf	_nout& (0+255),f,b
  1047  003012  503B               	movf	(?_vfpfcnvrt+1)^0,w,c
  1048  003014  23B7               	addwfc	(_nout+1)& (0+255),f,b
  1049  003016                     l3757:
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1053  003016  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1054  00301A  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1055  00301E                     	if	0	;tblptru may be non-zero
  1056  00301E                     	endif
  1057  00301E                     	if	0	;tblptru may be non-zero
  1058  00301E                     	endif
  1059  00301E  0008               	tblrd		*
  1060  003020  50F5               	movf	tablat,w,c
  1061  003022  0900               	iorlw	0
  1062  003024  A4D8               	btfss	status,2,c
  1063  003026  EF17  F018         	goto	u4601
  1064  00302A  EF19  F018         	goto	u4600
  1065  00302E                     u4601:
  1066  00302E  EFF8  F017         	goto	l3755
  1067  003032                     u4600:
  1068  003032                     
  1069                           ; BSR set to: 0
  1070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  1071  003032  C0B6  F050         	movff	_nout,?_vfprintf
  1072  003036  C0B7  F051         	movff	_nout+1,?_vfprintf+1
  1073  00303A                     
  1074                           ; BSR set to: 0
  1075  00303A  0012               	return		;funcret
  1076  00303C                     __end_of_vfprintf:
  1077                           	opt callstack 0
  1078                           
  1079 ;; *************** function _vfpfcnvrt *****************
  1080 ;; Defined at:
  1081 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  fp              2   57[COMRAM] PTR struct _IO_FILE
  1084 ;;		 -> sprintf@f(6), 
  1085 ;;  fmt             2   59[COMRAM] PTR PTR unsigned char 
  1086 ;;		 -> vfprintf@cfmt(2), 
  1087 ;;  ap              2   61[COMRAM] PTR PTR void 
  1088 ;;		 -> sprintf@ap(2), 
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;  llu             8    0        unsigned long long 
  1091 ;;  ll              8    0        long long 
  1092 ;;  f               4   71[COMRAM] long long 
  1093 ;;  ct              3   75[COMRAM] unsigned char [3]
  1094 ;;  vp              3    0        PTR void 
  1095 ;;  cp              3    0        PTR unsigned char 
  1096 ;;  i               2    0        int 
  1097 ;;  done            2    0        int 
  1098 ;;  c               1   78[COMRAM] unsigned char 
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  2   57[COMRAM] int 
  1101 ;; Registers used:
  1102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1108 ;;      Params:         6       0       0       0       0       0       0       0       0
  1109 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1110 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1111 ;;      Totals:        22       0       0       0       0       0       0       0       0
  1112 ;;Total ram usage:       22 bytes
  1113 ;; Hardware stack levels used:    1
  1114 ;; Hardware stack levels required when called:    5
  1115 ;; This function calls:
  1116 ;;		_atoi
  1117 ;;		_efgtoa
  1118 ;;		_fputc
  1119 ;;		_isdigit
  1120 ;;		_isupper
  1121 ;;		_strncmp
  1122 ;;		_tolower
  1123 ;; This function is called by:
  1124 ;;		_vfprintf
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           	psect	text3
  1129  00188C                     __ptext3:
  1130                           	opt callstack 0
  1131  00188C                     _vfpfcnvrt:
  1132                           	opt callstack 23
  1133  00188C                     
  1134                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  1135  00188C  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1136  001890  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1137  001894  CFDE FFF6          	movff	postinc2,tblptrl
  1138  001898  CFDD FFF7          	movff	postdec2,tblptrh
  1139  00189C                     	if	0	;tblptru may be non-zero
  1140  00189C                     	endif
  1141  00189C                     	if	0	;tblptru may be non-zero
  1142  00189C                     	endif
  1143  00189C  0008               	tblrd		*
  1144  00189E  50F5               	movf	tablat,w,c
  1145  0018A0  0A25               	xorlw	37
  1146  0018A2  A4D8               	btfss	status,2,c
  1147  0018A4  EF56  F00C         	goto	u4451
  1148  0018A8  EF58  F00C         	goto	u4450
  1149  0018AC                     u4451:
  1150  0018AC  EF5A  F00E         	goto	l3725
  1151  0018B0                     u4450:
  1152  0018B0                     
  1153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  1154  0018B0  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1155  0018B4  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1156  0018B8  2ADE               	incf	postinc2,f,c
  1157  0018BA  0E00               	movlw	0
  1158  0018BC  22DD               	addwfc	postdec2,f,c
  1159  0018BE                     
  1160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  1161  0018BE  0E00               	movlw	0
  1162  0018C0  0100               	movlb	0	; () banked
  1163  0018C2  6FB9               	movwf	(_width+1)& (0+255),b
  1164  0018C4  0E00               	movlw	0
  1165  0018C6  6FB8               	movwf	_width& (0+255),b
  1166  0018C8  C0B8  F05E         	movff	_width,_flags
  1167  0018CC  C0B9  F05F         	movff	_width+1,_flags+1
  1168  0018D0                     
  1169                           ; BSR set to: 0
  1170                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  1171  0018D0  69BA               	setf	_prec& (0+255),b
  1172  0018D2  69BB               	setf	(_prec+1)& (0+255),b
  1173  0018D4                     
  1174                           ; BSR set to: 0
  1175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  1176  0018D4  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1177  0018D8  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1178  0018DC  CFDE FFF6          	movff	postinc2,tblptrl
  1179  0018E0  CFDD FFF7          	movff	postdec2,tblptrh
  1180  0018E4                     	if	0	;tblptru may be non-zero
  1181  0018E4                     	endif
  1182  0018E4                     	if	0	;tblptru may be non-zero
  1183  0018E4                     	endif
  1184  0018E4  0008               	tblrd		*
  1185  0018E6  50F5               	movf	tablat,w,c
  1186  0018E8  0A2E               	xorlw	46
  1187  0018EA  A4D8               	btfss	status,2,c
  1188  0018EC  EF7A  F00C         	goto	u4461
  1189  0018F0  EF7C  F00C         	goto	u4460
  1190  0018F4                     u4461:
  1191  0018F4  EFF9  F00C         	goto	l3671
  1192  0018F8                     u4460:
  1193  0018F8                     
  1194                           ; BSR set to: 0
  1195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  1196  0018F8  0E00               	movlw	0
  1197  0018FA  6FBB               	movwf	(_prec+1)& (0+255),b
  1198  0018FC  0E00               	movlw	0
  1199  0018FE  6FBA               	movwf	_prec& (0+255),b
  1200  001900                     
  1201                           ; BSR set to: 0
  1202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  1203  001900  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1204  001904  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1205  001908  2ADE               	incf	postinc2,f,c
  1206  00190A  0E00               	movlw	0
  1207  00190C  22DD               	addwfc	postdec2,f,c
  1208  00190E                     
  1209                           ; BSR set to: 0
  1210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  1211  00190E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1212  001912  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1213  001916  CFDE FFF6          	movff	postinc2,tblptrl
  1214  00191A  CFDD FFF7          	movff	postdec2,tblptrh
  1215  00191E                     	if	0	;tblptru may be non-zero
  1216  00191E                     	endif
  1217  00191E                     	if	0	;tblptru may be non-zero
  1218  00191E                     	endif
  1219  00191E  0008               	tblrd		*
  1220  001920  50F5               	movf	tablat,w,c
  1221  001922  0A2A               	xorlw	42
  1222  001924  A4D8               	btfss	status,2,c
  1223  001926  EF97  F00C         	goto	u4471
  1224  00192A  EF99  F00C         	goto	u4470
  1225  00192E                     u4471:
  1226  00192E  EFB6  F00C         	goto	l3661
  1227  001932                     u4470:
  1228  001932                     
  1229                           ; BSR set to: 0
  1230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  1231  001932  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1232  001936  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1233  00193A  2ADE               	incf	postinc2,f,c
  1234  00193C  0E00               	movlw	0
  1235  00193E  22DD               	addwfc	postdec2,f,c
  1236                           
  1237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  1238  001940  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1239  001944  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1240  001948  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1241  00194C  0E02               	movlw	2
  1242  00194E  26DE               	addwf	postinc2,f,c
  1243  001950  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1244  001954  0E00               	movlw	0
  1245  001956  22DD               	addwfc	postdec2,f,c
  1246  001958  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1247  00195C  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1248  001960  CFDE F0BA          	movff	postinc2,_prec
  1249  001964  CFDD F0BB          	movff	postdec2,_prec+1
  1250                           
  1251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  1252  001968  EFF9  F00C         	goto	l3671
  1253  00196C                     l3661:
  1254                           
  1255                           ; BSR set to: 0
  1256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  1257  00196C  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1258  001970  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1259  001974  CFDE F008          	movff	postinc2,atoi@s
  1260  001978  CFDD F009          	movff	postdec2,atoi@s+1
  1261  00197C  EC61  F013         	call	_atoi	;wreg free
  1262  001980  C008  F0BA         	movff	?_atoi,_prec
  1263  001984  C009  F0BB         	movff	?_atoi+1,_prec+1
  1264                           
  1265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1266  001988  EFCD  F00C         	goto	l3665
  1267  00198C                     l3663:
  1268                           
  1269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  1270  00198C  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1271  001990  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1272  001994  2ADE               	incf	postinc2,f,c
  1273  001996  0E00               	movlw	0
  1274  001998  22DD               	addwfc	postdec2,f,c
  1275  00199A                     l3665:
  1276  00199A  0ED0               	movlw	208
  1277  00199C  6E40               	movwf	??_vfpfcnvrt^0,c
  1278  00199E  0EFF               	movlw	255
  1279  0019A0  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  1280  0019A2  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1281  0019A6  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1282  0019AA  CFDE FFF6          	movff	postinc2,tblptrl
  1283  0019AE  CFDD FFF7          	movff	postdec2,tblptrh
  1284  0019B2                     	if	0	;tblptru may be non-zero
  1285  0019B2                     	endif
  1286  0019B2                     	if	0	;tblptru may be non-zero
  1287  0019B2                     	endif
  1288  0019B2  0008               	tblrd		*
  1289  0019B4  50F5               	movf	tablat,w,c
  1290  0019B6  6E42               	movwf	(??_vfpfcnvrt+2)^0,c
  1291  0019B8  6A43               	clrf	(??_vfpfcnvrt+3)^0,c
  1292  0019BA  5040               	movf	??_vfpfcnvrt^0,w,c
  1293  0019BC  2642               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1294  0019BE  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  1295  0019C0  2243               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1296  0019C2  5043               	movf	(??_vfpfcnvrt+3)^0,w,c
  1297  0019C4  E10A               	bnz	u4480
  1298  0019C6  0E0A               	movlw	10
  1299  0019C8  5C42               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1300  0019CA  A0D8               	btfss	status,0,c
  1301  0019CC  EFEA  F00C         	goto	u4481
  1302  0019D0  EFED  F00C         	goto	u4480
  1303  0019D4                     u4481:
  1304  0019D4  0E01               	movlw	1
  1305  0019D6  EFEE  F00C         	goto	u4490
  1306  0019DA                     u4480:
  1307  0019DA  0E00               	movlw	0
  1308  0019DC                     u4490:
  1309  0019DC  6E44               	movwf	_vfpfcnvrt$307^0,c
  1310  0019DE  6A45               	clrf	(_vfpfcnvrt$307+1)^0,c
  1311  0019E0  5044               	movf	_vfpfcnvrt$307^0,w,c
  1312  0019E2  1045               	iorwf	(_vfpfcnvrt$307+1)^0,w,c
  1313  0019E4  A4D8               	btfss	status,2,c
  1314  0019E6  EFF7  F00C         	goto	u4501
  1315  0019EA  EFF9  F00C         	goto	u4500
  1316  0019EE                     u4501:
  1317  0019EE  EFC6  F00C         	goto	l3663
  1318  0019F2                     u4500:
  1319  0019F2                     l3671:
  1320                           
  1321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  1322  0019F2  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1323  0019F6  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1324  0019FA  CFDE FFF6          	movff	postinc2,tblptrl
  1325  0019FE  CFDD FFF7          	movff	postdec2,tblptrh
  1326  001A02                     	if	0	;tblptru may be non-zero
  1327  001A02                     	endif
  1328  001A02                     	if	0	;tblptru may be non-zero
  1329  001A02                     	endif
  1330  001A02  0008               	tblrd		*
  1331  001A04  50F5               	movf	tablat,w,c
  1332  001A06  6E07               	movwf	tolower@c^0,c
  1333  001A08  6A08               	clrf	(tolower@c+1)^0,c
  1334  001A0A  EC1E  F018         	call	_tolower	;wreg free
  1335  001A0E  5007               	movf	?_tolower^0,w,c
  1336  001A10  6E4C               	movwf	vfpfcnvrt@ct^0,c
  1337  001A12                     
  1338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  1339  001A12  504C               	movf	vfpfcnvrt@ct^0,w,c
  1340  001A14  B4D8               	btfsc	status,2,c
  1341  001A16  EF0F  F00D         	goto	u4511
  1342  001A1A  EF11  F00D         	goto	u4510
  1343  001A1E                     u4511:
  1344  001A1E  EF49  F00D         	goto	l3681
  1345  001A22                     u4510:
  1346  001A22                     
  1347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  1348  001A22  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1349  001A26  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1350  001A2A  CFDE F040          	movff	postinc2,??_vfpfcnvrt
  1351  001A2E  CFDD F041          	movff	postdec2,??_vfpfcnvrt+1
  1352  001A32  0E01               	movlw	1
  1353  001A34  2640               	addwf	??_vfpfcnvrt^0,f,c
  1354  001A36  0E00               	movlw	0
  1355  001A38  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1356  001A3A  C040  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1357  001A3E  C041  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1358  001A42                     	if	0	;tblptru may be non-zero
  1359  001A42                     	endif
  1360  001A42                     	if	0	;tblptru may be non-zero
  1361  001A42                     	endif
  1362  001A42  0008               	tblrd		*
  1363  001A44  50F5               	movf	tablat,w,c
  1364  001A46  6E07               	movwf	tolower@c^0,c
  1365  001A48  6A08               	clrf	(tolower@c+1)^0,c
  1366  001A4A  EC1E  F018         	call	_tolower	;wreg free
  1367  001A4E  5007               	movf	?_tolower^0,w,c
  1368  001A50  6E4D               	movwf	(vfpfcnvrt@ct+1)^0,c
  1369  001A52                     
  1370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  1371  001A52  504D               	movf	(vfpfcnvrt@ct+1)^0,w,c
  1372  001A54  B4D8               	btfsc	status,2,c
  1373  001A56  EF2F  F00D         	goto	u4521
  1374  001A5A  EF31  F00D         	goto	u4520
  1375  001A5E                     u4521:
  1376  001A5E  EF49  F00D         	goto	l3681
  1377  001A62                     u4520:
  1378  001A62                     
  1379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  1380  001A62  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1381  001A66  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1382  001A6A  CFDE F040          	movff	postinc2,??_vfpfcnvrt
  1383  001A6E  CFDD F041          	movff	postdec2,??_vfpfcnvrt+1
  1384  001A72  0E02               	movlw	2
  1385  001A74  2640               	addwf	??_vfpfcnvrt^0,f,c
  1386  001A76  0E00               	movlw	0
  1387  001A78  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1388  001A7A  C040  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1389  001A7E  C041  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1390  001A82                     	if	0	;tblptru may be non-zero
  1391  001A82                     	endif
  1392  001A82                     	if	0	;tblptru may be non-zero
  1393  001A82                     	endif
  1394  001A82  0008               	tblrd		*
  1395  001A84  50F5               	movf	tablat,w,c
  1396  001A86  6E07               	movwf	tolower@c^0,c
  1397  001A88  6A08               	clrf	(tolower@c+1)^0,c
  1398  001A8A  EC1E  F018         	call	_tolower	;wreg free
  1399  001A8E  5007               	movf	?_tolower^0,w,c
  1400  001A90  6E4E               	movwf	(vfpfcnvrt@ct+2)^0,c
  1401  001A92                     l3681:
  1402                           
  1403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  1404  001A92  0E66               	movlw	102
  1405  001A94  184C               	xorwf	vfpfcnvrt@ct^0,w,c
  1406  001A96  A4D8               	btfss	status,2,c
  1407  001A98  EF50  F00D         	goto	u4531
  1408  001A9C  EF52  F00D         	goto	u4530
  1409  001AA0                     u4531:
  1410  001AA0  EF92  F00D         	goto	l3693
  1411  001AA4                     u4530:
  1412  001AA4                     
  1413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  1414  001AA4  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1415  001AA8  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1416  001AAC  CFDE FFF6          	movff	postinc2,tblptrl
  1417  001AB0  CFDD FFF7          	movff	postdec2,tblptrh
  1418  001AB4                     	if	0	;tblptru may be non-zero
  1419  001AB4                     	endif
  1420  001AB4                     	if	0	;tblptru may be non-zero
  1421  001AB4                     	endif
  1422  001AB4  0008               	tblrd		*
  1423  001AB6  CFF5 F04F          	movff	tablat,vfpfcnvrt@c
  1424  001ABA                     
  1425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  1426  001ABA  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1427  001ABE  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1428  001AC2  2ADE               	incf	postinc2,f,c
  1429  001AC4  0E00               	movlw	0
  1430  001AC6  22DD               	addwfc	postdec2,f,c
  1431  001AC8                     
  1432                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  1433  001AC8  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1434  001ACC  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1435  001AD0  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1436  001AD4  0E04               	movlw	4
  1437  001AD6  26DE               	addwf	postinc2,f,c
  1438  001AD8  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1439  001ADC  0E00               	movlw	0
  1440  001ADE  22DD               	addwfc	postdec2,f,c
  1441  001AE0  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1442  001AE4  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1443  001AE8  CFDE F048          	movff	postinc2,vfpfcnvrt@f
  1444  001AEC  CFDE F049          	movff	postinc2,vfpfcnvrt@f+1
  1445  001AF0  CFDE F04A          	movff	postinc2,vfpfcnvrt@f+2
  1446  001AF4  CFDE F04B          	movff	postinc2,vfpfcnvrt@f+3
  1447  001AF8                     l3689:
  1448                           
  1449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  1450  001AF8  C03A  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  1451  001AFC  C03B  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1452  001B00  C048  F030         	movff	vfpfcnvrt@f,efgtoa@f
  1453  001B04  C049  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1454  001B08  C04A  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1455  001B0C  C04B  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1456  001B10  C04F  F034         	movff	vfpfcnvrt@c,efgtoa@c
  1457  001B14  EC0D  F004         	call	_efgtoa	;wreg free
  1458  001B18  C02E  F03A         	movff	?_efgtoa,?_vfpfcnvrt
  1459  001B1C  C02F  F03B         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1460  001B20  EF75  F00E         	goto	l252
  1461  001B24                     l3693:
  1462                           
  1463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1464  001B24  0E4C               	movlw	low vfpfcnvrt@ct
  1465  001B26  6E01               	movwf	strncmp@_l^0,c
  1466  001B28  0E00               	movlw	high vfpfcnvrt@ct
  1467  001B2A  6E02               	movwf	(strncmp@_l+1)^0,c
  1468  001B2C  0E16               	movlw	low STR_10
  1469  001B2E  6E03               	movwf	strncmp@_r^0,c
  1470  001B30  0E08               	movlw	high STR_10
  1471  001B32  6E04               	movwf	(strncmp@_r+1)^0,c
  1472  001B34  0E00               	movlw	0
  1473  001B36  6E06               	movwf	(strncmp@n+1)^0,c
  1474  001B38  0E02               	movlw	2
  1475  001B3A  6E05               	movwf	strncmp@n^0,c
  1476  001B3C  ECAD  F015         	call	_strncmp	;wreg free
  1477  001B40  5001               	movf	?_strncmp^0,w,c
  1478  001B42  1002               	iorwf	(?_strncmp+1)^0,w,c
  1479  001B44  A4D8               	btfss	status,2,c
  1480  001B46  EFA7  F00D         	goto	u4541
  1481  001B4A  EFA9  F00D         	goto	u4540
  1482  001B4E                     u4541:
  1483  001B4E  EF24  F00E         	goto	l3709
  1484  001B52                     u4540:
  1485  001B52                     
  1486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1487  001B52  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1488  001B56  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1489  001B5A  CFDE F040          	movff	postinc2,??_vfpfcnvrt
  1490  001B5E  CFDD F041          	movff	postdec2,??_vfpfcnvrt+1
  1491  001B62  0E01               	movlw	1
  1492  001B64  2640               	addwf	??_vfpfcnvrt^0,f,c
  1493  001B66  0E00               	movlw	0
  1494  001B68  2241               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1495  001B6A  C040  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1496  001B6E  C041  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1497  001B72                     	if	0	;tblptru may be non-zero
  1498  001B72                     	endif
  1499  001B72                     	if	0	;tblptru may be non-zero
  1500  001B72                     	endif
  1501  001B72  0008               	tblrd		*
  1502  001B74  CFF5 F04F          	movff	tablat,vfpfcnvrt@c
  1503  001B78  0EBF               	movlw	191
  1504  001B7A  6E40               	movwf	??_vfpfcnvrt^0,c
  1505  001B7C  0EFF               	movlw	255
  1506  001B7E  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  1507  001B80  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1508  001B84  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1509  001B88  CFDE FFF6          	movff	postinc2,tblptrl
  1510  001B8C  CFDD FFF7          	movff	postdec2,tblptrh
  1511  001B90                     	if	0	;tblptru may be non-zero
  1512  001B90                     	endif
  1513  001B90                     	if	0	;tblptru may be non-zero
  1514  001B90                     	endif
  1515  001B90  0008               	tblrd		*
  1516  001B92  50F5               	movf	tablat,w,c
  1517  001B94  6E42               	movwf	(??_vfpfcnvrt+2)^0,c
  1518  001B96  6A43               	clrf	(??_vfpfcnvrt+3)^0,c
  1519  001B98  5040               	movf	??_vfpfcnvrt^0,w,c
  1520  001B9A  2642               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1521  001B9C  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  1522  001B9E  2243               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1523  001BA0  5043               	movf	(??_vfpfcnvrt+3)^0,w,c
  1524  001BA2  E10A               	bnz	u4550
  1525  001BA4  0E1A               	movlw	26
  1526  001BA6  5C42               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1527  001BA8  A0D8               	btfss	status,0,c
  1528  001BAA  EFD9  F00D         	goto	u4551
  1529  001BAE  EFDC  F00D         	goto	u4550
  1530  001BB2                     u4551:
  1531  001BB2  0E01               	movlw	1
  1532  001BB4  EFDD  F00D         	goto	u4560
  1533  001BB8                     u4550:
  1534  001BB8  0E00               	movlw	0
  1535  001BBA                     u4560:
  1536  001BBA  6E46               	movwf	_vfpfcnvrt$311^0,c
  1537  001BBC  6A47               	clrf	(_vfpfcnvrt$311+1)^0,c
  1538  001BBE  5046               	movf	_vfpfcnvrt$311^0,w,c
  1539  001BC0  1047               	iorwf	(_vfpfcnvrt$311+1)^0,w,c
  1540  001BC2  B4D8               	btfsc	status,2,c
  1541  001BC4  EFE6  F00D         	goto	u4571
  1542  001BC8  EFE8  F00D         	goto	u4570
  1543  001BCC                     u4571:
  1544  001BCC  EF02  F00E         	goto	l3703
  1545  001BD0                     u4570:
  1546  001BD0                     
  1547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  1548  001BD0  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1549  001BD4  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1550  001BD8  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1551  001BDC  0E04               	movlw	4
  1552  001BDE  26DE               	addwf	postinc2,f,c
  1553  001BE0  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1554  001BE4  0E00               	movlw	0
  1555  001BE6  22DD               	addwfc	postdec2,f,c
  1556  001BE8  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1557  001BEC  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1558  001BF0  CFDE F048          	movff	postinc2,vfpfcnvrt@f
  1559  001BF4  CFDE F049          	movff	postinc2,vfpfcnvrt@f+1
  1560  001BF8  CFDE F04A          	movff	postinc2,vfpfcnvrt@f+2
  1561  001BFC  CFDE F04B          	movff	postinc2,vfpfcnvrt@f+3
  1562                           
  1563                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  1564  001C00  EF1A  F00E         	goto	l259
  1565  001C04                     l3703:
  1566                           
  1567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1568  001C04  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1569  001C08  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1570  001C0C  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1571  001C10  0E04               	movlw	4
  1572  001C12  26DE               	addwf	postinc2,f,c
  1573  001C14  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1574  001C18  0E00               	movlw	0
  1575  001C1A  22DD               	addwfc	postdec2,f,c
  1576  001C1C  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1577  001C20  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1578  001C24  CFDE F048          	movff	postinc2,vfpfcnvrt@f
  1579  001C28  CFDE F049          	movff	postinc2,vfpfcnvrt@f+1
  1580  001C2C  CFDE F04A          	movff	postinc2,vfpfcnvrt@f+2
  1581  001C30  CFDE F04B          	movff	postinc2,vfpfcnvrt@f+3
  1582  001C34                     l259:
  1583                           
  1584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  1585  001C34  0E02               	movlw	2
  1586  001C36  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1587  001C3A  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1588  001C3E  26DE               	addwf	postinc2,f,c
  1589  001C40  0E00               	movlw	0
  1590  001C42  22DD               	addwfc	postdec2,f,c
  1591  001C44  EF7C  F00D         	goto	l3689
  1592  001C48                     l3709:
  1593                           
  1594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  1595  001C48  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1596  001C4C  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1597  001C50  CFDE FFF6          	movff	postinc2,tblptrl
  1598  001C54  CFDD FFF7          	movff	postdec2,tblptrh
  1599  001C58                     	if	0	;tblptru may be non-zero
  1600  001C58                     	endif
  1601  001C58                     	if	0	;tblptru may be non-zero
  1602  001C58                     	endif
  1603  001C58  0008               	tblrd		*
  1604  001C5A  50F5               	movf	tablat,w,c
  1605  001C5C  0A25               	xorlw	37
  1606  001C5E  A4D8               	btfss	status,2,c
  1607  001C60  EF34  F00E         	goto	u4581
  1608  001C64  EF36  F00E         	goto	u4580
  1609  001C68                     u4581:
  1610  001C68  EF4D  F00E         	goto	l3719
  1611  001C6C                     u4580:
  1612  001C6C                     
  1613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  1614  001C6C  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1615  001C70  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1616  001C74  2ADE               	incf	postinc2,f,c
  1617  001C76  0E00               	movlw	0
  1618  001C78  22DD               	addwfc	postdec2,f,c
  1619  001C7A                     
  1620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  1621  001C7A  0E00               	movlw	0
  1622  001C7C  6E02               	movwf	(fputc@c+1)^0,c
  1623  001C7E  0E25               	movlw	37
  1624  001C80  6E01               	movwf	fputc@c^0,c
  1625  001C82  C03A  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1626  001C86  C03B  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1627  001C8A  EC18  F016         	call	_fputc	;wreg free
  1628  001C8E                     l3715:
  1629                           
  1630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  1631  001C8E  0E00               	movlw	0
  1632  001C90  6E3B               	movwf	(?_vfpfcnvrt+1)^0,c
  1633  001C92  0E01               	movlw	1
  1634  001C94  6E3A               	movwf	?_vfpfcnvrt^0,c
  1635  001C96  EF75  F00E         	goto	l252
  1636  001C9A                     l3719:
  1637                           
  1638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  1639  001C9A  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1640  001C9E  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1641  001CA2  2ADE               	incf	postinc2,f,c
  1642  001CA4  0E00               	movlw	0
  1643  001CA6  22DD               	addwfc	postdec2,f,c
  1644  001CA8                     
  1645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  1646  001CA8  0E00               	movlw	0
  1647  001CAA  6E3B               	movwf	(?_vfpfcnvrt+1)^0,c
  1648  001CAC  0E00               	movlw	0
  1649  001CAE  6E3A               	movwf	?_vfpfcnvrt^0,c
  1650  001CB0  EF75  F00E         	goto	l252
  1651  001CB4                     l3725:
  1652                           
  1653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  1654  001CB4  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1655  001CB8  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1656  001CBC  CFDE FFF6          	movff	postinc2,tblptrl
  1657  001CC0  CFDD FFF7          	movff	postdec2,tblptrh
  1658  001CC4                     	if	0	;tblptru may be non-zero
  1659  001CC4                     	endif
  1660  001CC4                     	if	0	;tblptru may be non-zero
  1661  001CC4                     	endif
  1662  001CC4  0008               	tblrd		*
  1663  001CC6  50F5               	movf	tablat,w,c
  1664  001CC8  6E01               	movwf	fputc@c^0,c
  1665  001CCA  6A02               	clrf	(fputc@c+1)^0,c
  1666  001CCC  C03A  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1667  001CD0  C03B  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1668  001CD4  EC18  F016         	call	_fputc	;wreg free
  1669  001CD8                     
  1670                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  1671  001CD8  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1672  001CDC  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1673  001CE0  2ADE               	incf	postinc2,f,c
  1674  001CE2  0E00               	movlw	0
  1675  001CE4  22DD               	addwfc	postdec2,f,c
  1676  001CE6  EF47  F00E         	goto	l3715
  1677  001CEA                     l252:
  1678  001CEA  0012               	return		;funcret
  1679  001CEC                     __end_of_vfpfcnvrt:
  1680                           	opt callstack 0
  1681                           
  1682 ;; *************** function _strncmp *****************
  1683 ;; Defined at:
  1684 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1687 ;;		 -> vfpfcnvrt@ct(3), 
  1688 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1689 ;;		 -> STR_12(3), 
  1690 ;;  n               2    4[COMRAM] unsigned int 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1693 ;;		 -> STR_12(3), 
  1694 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1695 ;;		 -> vfpfcnvrt@ct(3), 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  2    0[COMRAM] int 
  1698 ;; Registers used:
  1699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1705 ;;      Params:         6       0       0       0       0       0       0       0       0
  1706 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1707 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1708 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1709 ;;Total ram usage:       11 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		_vfpfcnvrt
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text4
  1719  002B5A                     __ptext4:
  1720                           	opt callstack 0
  1721  002B5A                     _strncmp:
  1722                           	opt callstack 27
  1723  002B5A  C001  F008         	movff	strncmp@_l,strncmp@l
  1724  002B5E  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1725  002B62  C003  F00A         	movff	strncmp@_r,strncmp@r
  1726  002B66  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  1727  002B6A  0605               	decf	strncmp@n^0,f,c
  1728  002B6C  A0D8               	btfss	status,0,c
  1729  002B6E  0606               	decf	(strncmp@n+1)^0,f,c
  1730  002B70  2805               	incf	strncmp@n^0,w,c
  1731  002B72  E106               	bnz	u4401
  1732  002B74  2806               	incf	(strncmp@n+1)^0,w,c
  1733  002B76  A4D8               	btfss	status,2,c
  1734  002B78  EFC0  F015         	goto	u4401
  1735  002B7C  EFC2  F015         	goto	u4400
  1736  002B80                     u4401:
  1737  002B80  EFCF  F015         	goto	l3621
  1738  002B84                     u4400:
  1739  002B84  0E00               	movlw	0
  1740  002B86  6E02               	movwf	(?_strncmp+1)^0,c
  1741  002B88  0E00               	movlw	0
  1742  002B8A  6E01               	movwf	?_strncmp^0,c
  1743  002B8C  EF17  F016         	goto	l1061
  1744  002B90                     l3619:
  1745  002B90  4A08               	infsnz	strncmp@l^0,f,c
  1746  002B92  2A09               	incf	(strncmp@l+1)^0,f,c
  1747  002B94  4A0A               	infsnz	strncmp@r^0,f,c
  1748  002B96  2A0B               	incf	(strncmp@r+1)^0,f,c
  1749  002B98  0605               	decf	strncmp@n^0,f,c
  1750  002B9A  A0D8               	btfss	status,0,c
  1751  002B9C  0606               	decf	(strncmp@n+1)^0,f,c
  1752  002B9E                     l3621:
  1753  002B9E  C008  FFD9         	movff	strncmp@l,fsr2l
  1754  002BA2  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1755  002BA6  50DF               	movf	indf2,w,c
  1756  002BA8  B4D8               	btfsc	status,2,c
  1757  002BAA  EFD9  F015         	goto	u4411
  1758  002BAE  EFDB  F015         	goto	u4410
  1759  002BB2                     u4411:
  1760  002BB2  EF06  F016         	goto	l3629
  1761  002BB6                     u4410:
  1762  002BB6  C00A  FFF6         	movff	strncmp@r,tblptrl
  1763  002BBA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1764  002BBE                     	if	0	;tblptru may be non-zero
  1765  002BBE                     	endif
  1766  002BBE                     	if	0	;tblptru may be non-zero
  1767  002BBE                     	endif
  1768  002BBE  0008               	tblrd		*
  1769  002BC0  50F5               	movf	tablat,w,c
  1770  002BC2  0900               	iorlw	0
  1771  002BC4  B4D8               	btfsc	status,2,c
  1772  002BC6  EFE7  F015         	goto	u4421
  1773  002BCA  EFE9  F015         	goto	u4420
  1774  002BCE                     u4421:
  1775  002BCE  EF06  F016         	goto	l3629
  1776  002BD2                     u4420:
  1777  002BD2  5005               	movf	strncmp@n^0,w,c
  1778  002BD4  1006               	iorwf	(strncmp@n+1)^0,w,c
  1779  002BD6  B4D8               	btfsc	status,2,c
  1780  002BD8  EFF0  F015         	goto	u4431
  1781  002BDC  EFF2  F015         	goto	u4430
  1782  002BE0                     u4431:
  1783  002BE0  EF06  F016         	goto	l3629
  1784  002BE4                     u4430:
  1785  002BE4  C008  FFD9         	movff	strncmp@l,fsr2l
  1786  002BE8  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1787  002BEC  50DF               	movf	indf2,w,c
  1788  002BEE  6E07               	movwf	??_strncmp^0,c
  1789  002BF0  C00A  FFF6         	movff	strncmp@r,tblptrl
  1790  002BF4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1791  002BF8                     	if	0	;tblptru may be non-zero
  1792  002BF8                     	endif
  1793  002BF8                     	if	0	;tblptru may be non-zero
  1794  002BF8                     	endif
  1795  002BF8  0008               	tblrd		*
  1796  002BFA  50F5               	movf	tablat,w,c
  1797  002BFC  1807               	xorwf	??_strncmp^0,w,c
  1798  002BFE  B4D8               	btfsc	status,2,c
  1799  002C00  EF04  F016         	goto	u4441
  1800  002C04  EF06  F016         	goto	u4440
  1801  002C08                     u4441:
  1802  002C08  EFC8  F015         	goto	l3619
  1803  002C0C                     u4440:
  1804  002C0C                     l3629:
  1805  002C0C  C008  FFD9         	movff	strncmp@l,fsr2l
  1806  002C10  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1807  002C14  50DF               	movf	indf2,w,c
  1808  002C16  6E07               	movwf	??_strncmp^0,c
  1809  002C18  C00A  FFF6         	movff	strncmp@r,tblptrl
  1810  002C1C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1811  002C20                     	if	0	;tblptru may be non-zero
  1812  002C20                     	endif
  1813  002C20                     	if	0	;tblptru may be non-zero
  1814  002C20                     	endif
  1815  002C20  0008               	tblrd		*
  1816  002C22  50F5               	movf	tablat,w,c
  1817  002C24  5C07               	subwf	??_strncmp^0,w,c
  1818  002C26  6E01               	movwf	?_strncmp^0,c
  1819  002C28  6A02               	clrf	(?_strncmp+1)^0,c
  1820  002C2A  A0D8               	btfss	status,0,c
  1821  002C2C  0602               	decf	(?_strncmp+1)^0,f,c
  1822  002C2E                     l1061:
  1823  002C2E  0012               	return		;funcret
  1824  002C30                     __end_of_strncmp:
  1825                           	opt callstack 0
  1826                           
  1827 ;; *************** function _efgtoa *****************
  1828 ;; Defined at:
  1829 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  1832 ;;		 -> sprintf@f(6), 
  1833 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  1834 ;;  c               1   51[COMRAM] unsigned char 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  u               4   52[BANK0 ] unsigned char 
  1837 ;;  g               4   44[BANK0 ] unsigned char 
  1838 ;;  l               4   38[BANK0 ] unsigned char 
  1839 ;;  h               4   34[BANK0 ] unsigned char 
  1840 ;;  ou              4    0[BANK0 ] unsigned char 
  1841 ;;  n               2   50[BANK0 ] int 
  1842 ;;  e               2   48[BANK0 ] int 
  1843 ;;  i               2   42[BANK0 ] int 
  1844 ;;  w               2   31[BANK0 ] int 
  1845 ;;  p               2   28[BANK0 ] int 
  1846 ;;  sign            2   26[BANK0 ] int 
  1847 ;;  d               2   24[BANK0 ] int 
  1848 ;;  ne              2   22[BANK0 ] int 
  1849 ;;  m               2   20[BANK0 ] int 
  1850 ;;  pp              2   18[BANK0 ] int 
  1851 ;;  t               2   16[BANK0 ] int 
  1852 ;;  mode            1   33[BANK0 ] unsigned char 
  1853 ;;  nmode           1   30[BANK0 ] unsigned char 
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  2   45[COMRAM] int 
  1856 ;; Registers used:
  1857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1863 ;;      Params:         7       0       0       0       0       0       0       0       0
  1864 ;;      Locals:         0      56       0       0       0       0       0       0       0
  1865 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1866 ;;      Totals:        12      56       0       0       0       0       0       0       0
  1867 ;;Total ram usage:       68 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; Hardware stack levels required when called:    4
  1870 ;; This function calls:
  1871 ;;		___awdiv
  1872 ;;		___awmod
  1873 ;;		___fladd
  1874 ;;		___fldiv
  1875 ;;		___fleq
  1876 ;;		___flge
  1877 ;;		___flmul
  1878 ;;		___flneg
  1879 ;;		___flsub
  1880 ;;		___fltol
  1881 ;;		___fpclassifyf
  1882 ;;		_floorf
  1883 ;;		_isupper
  1884 ;;		_pad
  1885 ;;		_strcpy
  1886 ;;		_tolower
  1887 ;; This function is called by:
  1888 ;;		_vfpfcnvrt
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text5
  1893  00081A                     __ptext5:
  1894                           	opt callstack 0
  1895  00081A                     _efgtoa:
  1896                           	opt callstack 23
  1897  00081A                     
  1898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  1899  00081A  0E00               	movlw	0
  1900  00081C  0100               	movlb	0	; () banked
  1901  00081E  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  1902  000820  0E00               	movlw	0
  1903  000822  6F7A               	movwf	efgtoa@sign& (0+255),b
  1904  000824                     
  1905                           ; BSR set to: 0
  1906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
  1907  000824  C030  F08C         	movff	efgtoa@f,efgtoa@g
  1908  000828  C031  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  1909  00082C  C032  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  1910  000830  C033  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  1911  000834                     
  1912                           ; BSR set to: 0
  1913                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  1914  000834  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1915  000836  EF21  F004         	goto	u3810
  1916  00083A  EF1F  F004         	goto	u3811
  1917  00083E                     u3811:
  1918  00083E  EF37  F004         	goto	l3283
  1919  000842                     u3810:
  1920  000842                     
  1921                           ; BSR set to: 0
  1922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  1923  000842  0E00               	movlw	0
  1924  000844  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  1925  000846  0E01               	movlw	1
  1926  000848  6F7A               	movwf	efgtoa@sign& (0+255),b
  1927  00084A                     
  1928                           ; BSR set to: 0
  1929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  1930  00084A  C08C  F001         	movff	efgtoa@g,___flneg@f1
  1931  00084E  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  1932  000852  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  1933  000856  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  1934  00085A  ECC4  F019         	call	___flneg	;wreg free
  1935  00085E  C001  F08C         	movff	?___flneg,efgtoa@g
  1936  000862  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  1937  000866  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  1938  00086A  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  1939  00086E                     l3283:
  1940                           
  1941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  1942  00086E  0E00               	movlw	0
  1943  000870  0100               	movlb	0	; () banked
  1944  000872  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  1945  000874  0E00               	movlw	0
  1946  000876  6F92               	movwf	efgtoa@n& (0+255),b
  1947  000878                     
  1948                           ; BSR set to: 0
  1949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
  1950  000878  C0B8  F07F         	movff	_width,efgtoa@w
  1951  00087C  C0B9  F080         	movff	_width+1,efgtoa@w+1
  1952  000880                     
  1953                           ; BSR set to: 0
  1954                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  1955  000880  517A               	movf	efgtoa@sign& (0+255),w,b
  1956  000882  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  1957  000884  A4D8               	btfss	status,2,c
  1958  000886  EF47  F004         	goto	u3821
  1959  00088A  EF49  F004         	goto	u3820
  1960  00088E                     u3821:
  1961  00088E  EF50  F004         	goto	l3291
  1962  000892                     u3820:
  1963  000892                     
  1964                           ; BSR set to: 0
  1965  000892  A45E               	btfss	_flags^0,2,c
  1966  000894  EF4E  F004         	goto	u3831
  1967  000898  EF50  F004         	goto	u3830
  1968  00089C                     u3831:
  1969  00089C  EF6A  F004         	goto	l3303
  1970  0008A0                     u3830:
  1971  0008A0                     l3291:
  1972                           
  1973                           ; BSR set to: 0
  1974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  1975  0008A0  517A               	movf	efgtoa@sign& (0+255),w,b
  1976  0008A2  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  1977  0008A4  A4D8               	btfss	status,2,c
  1978  0008A6  EF57  F004         	goto	u3841
  1979  0008AA  EF59  F004         	goto	u3840
  1980  0008AE                     u3841:
  1981  0008AE  EF5F  F004         	goto	l3295
  1982  0008B2                     u3840:
  1983  0008B2                     
  1984                           ; BSR set to: 0
  1985  0008B2  0E00               	movlw	0
  1986  0008B4  6F65               	movwf	(_efgtoa$281+1)& (0+255),b
  1987  0008B6  0E2B               	movlw	43
  1988  0008B8  6F64               	movwf	_efgtoa$281& (0+255),b
  1989  0008BA  EF63  F004         	goto	l3297
  1990  0008BE                     l3295:
  1991                           
  1992                           ; BSR set to: 0
  1993  0008BE  0E00               	movlw	0
  1994  0008C0  6F65               	movwf	(_efgtoa$281+1)& (0+255),b
  1995  0008C2  0E2D               	movlw	45
  1996  0008C4  6F64               	movwf	_efgtoa$281& (0+255),b
  1997  0008C6                     l3297:
  1998                           
  1999                           ; BSR set to: 0
  2000  0008C6  C064  F100         	movff	_efgtoa$281,_dbuf
  2001  0008CA                     
  2002                           ; BSR set to: 0
  2003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
  2004  0008CA  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2005  0008CC  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2006  0008CE                     
  2007                           ; BSR set to: 0
  2008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
  2009  0008CE  077F               	decf	efgtoa@w& (0+255),f,b
  2010  0008D0  A0D8               	btfss	status,0,c
  2011  0008D2  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2012  0008D4                     l3303:
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2016  0008D4  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2017  0008D8  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2018  0008DC  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2019  0008E0  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2020  0008E4  EC2E  F015         	call	___fpclassifyf	;wreg free
  2021  0008E8  0401               	decf	?___fpclassifyf^0,w,c
  2022  0008EA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2023  0008EC  A4D8               	btfss	status,2,c
  2024  0008EE  EF7B  F004         	goto	u3851
  2025  0008F2  EF7D  F004         	goto	u3850
  2026  0008F6                     u3851:
  2027  0008F6  EFD4  F004         	goto	l3321
  2028  0008FA                     u3850:
  2029  0008FA  0EBF               	movlw	191
  2030  0008FC  6E35               	movwf	??_efgtoa^0,c
  2031  0008FE  0EFF               	movlw	255
  2032  000900  6E36               	movwf	(??_efgtoa+1)^0,c
  2033  000902  5034               	movf	efgtoa@c^0,w,c
  2034  000904  6E37               	movwf	(??_efgtoa+2)^0,c
  2035  000906  6A38               	clrf	(??_efgtoa+3)^0,c
  2036  000908  5035               	movf	??_efgtoa^0,w,c
  2037  00090A  2637               	addwf	(??_efgtoa+2)^0,f,c
  2038  00090C  5036               	movf	(??_efgtoa+1)^0,w,c
  2039  00090E  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2040  000910  5038               	movf	(??_efgtoa+3)^0,w,c
  2041  000912  E10A               	bnz	u3860
  2042  000914  0E1A               	movlw	26
  2043  000916  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2044  000918  A0D8               	btfss	status,0,c
  2045  00091A  EF91  F004         	goto	u3861
  2046  00091E  EF94  F004         	goto	u3860
  2047  000922                     u3861:
  2048  000922  0E01               	movlw	1
  2049  000924  EF95  F004         	goto	u3870
  2050  000928                     u3860:
  2051  000928  0E00               	movlw	0
  2052  00092A                     u3870:
  2053  00092A  0100               	movlb	0	; () banked
  2054  00092C  6F66               	movwf	_efgtoa$282& (0+255),b
  2055  00092E  6B67               	clrf	(_efgtoa$282+1)& (0+255),b
  2056  000930                     
  2057                           ; BSR set to: 0
  2058  000930  5166               	movf	_efgtoa$282& (0+255),w,b
  2059  000932  1167               	iorwf	(_efgtoa$282+1)& (0+255),w,b
  2060  000934  B4D8               	btfsc	status,2,c
  2061  000936  EF9F  F004         	goto	u3881
  2062  00093A  EFA1  F004         	goto	u3880
  2063  00093E                     u3881:
  2064  00093E  EFAF  F004         	goto	l3313
  2065  000942                     u3880:
  2066  000942                     
  2067                           ; BSR set to: 0
  2068                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  2069  000942  0E00               	movlw	low _dbuf
  2070  000944  2592               	addwf	efgtoa@n& (0+255),w,b
  2071  000946  6E01               	movwf	strcpy@dest^0,c
  2072  000948  0E01               	movlw	high _dbuf
  2073  00094A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2074  00094C  6E02               	movwf	(strcpy@dest+1)^0,c
  2075  00094E  0E06               	movlw	low STR_2
  2076  000950  6E03               	movwf	strcpy@src^0,c
  2077  000952  0E08               	movlw	high STR_2
  2078  000954  6E04               	movwf	(strcpy@src+1)^0,c
  2079  000956  EC4E  F018         	call	_strcpy	;wreg free
  2080                           
  2081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
  2082  00095A  EFBB  F004         	goto	l3315
  2083  00095E                     l3313:
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  2087  00095E  0E00               	movlw	low _dbuf
  2088  000960  2592               	addwf	efgtoa@n& (0+255),w,b
  2089  000962  6E01               	movwf	strcpy@dest^0,c
  2090  000964  0E01               	movlw	high _dbuf
  2091  000966  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2092  000968  6E02               	movwf	(strcpy@dest+1)^0,c
  2093  00096A  0E0E               	movlw	low STR_3
  2094  00096C  6E03               	movwf	strcpy@src^0,c
  2095  00096E  0E08               	movlw	high STR_3
  2096  000970  6E04               	movwf	(strcpy@src+1)^0,c
  2097  000972  EC4E  F018         	call	_strcpy	;wreg free
  2098  000976                     l3315:
  2099                           
  2100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  2101  000976  0100               	movlb	0	; () banked
  2102  000978  0EFD               	movlw	253
  2103  00097A  277F               	addwf	efgtoa@w& (0+255),f,b
  2104  00097C  0EFF               	movlw	255
  2105  00097E  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2106  000980                     l3317:
  2107                           
  2108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  2109  000980  C02E  F011         	movff	efgtoa@fp,pad@fp
  2110  000984  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  2111  000988  0E00               	movlw	low _dbuf
  2112  00098A  6E13               	movwf	pad@buf^0,c
  2113  00098C  0E01               	movlw	high _dbuf
  2114  00098E  6E14               	movwf	(pad@buf+1)^0,c
  2115  000990  C07F  F015         	movff	efgtoa@w,pad@p
  2116  000994  C080  F016         	movff	efgtoa@w+1,pad@p+1
  2117  000998  ECDF  F016         	call	_pad	;wreg free
  2118  00099C  C011  F02E         	movff	?_pad,?_efgtoa
  2119  0009A0  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  2120  0009A4  EFE5  F009         	goto	l162
  2121  0009A8                     l3321:
  2122                           
  2123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2124  0009A8  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2125  0009AC  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2126  0009B0  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2127  0009B4  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2128  0009B8  EC2E  F015         	call	___fpclassifyf	;wreg free
  2129  0009BC  5001               	movf	?___fpclassifyf^0,w,c
  2130  0009BE  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2131  0009C0  A4D8               	btfss	status,2,c
  2132  0009C2  EFE5  F004         	goto	u3891
  2133  0009C6  EFE7  F004         	goto	u3890
  2134  0009CA                     u3891:
  2135  0009CA  EF27  F005         	goto	l3339
  2136  0009CE                     u3890:
  2137  0009CE  0EBF               	movlw	191
  2138  0009D0  6E35               	movwf	??_efgtoa^0,c
  2139  0009D2  0EFF               	movlw	255
  2140  0009D4  6E36               	movwf	(??_efgtoa+1)^0,c
  2141  0009D6  5034               	movf	efgtoa@c^0,w,c
  2142  0009D8  6E37               	movwf	(??_efgtoa+2)^0,c
  2143  0009DA  6A38               	clrf	(??_efgtoa+3)^0,c
  2144  0009DC  5035               	movf	??_efgtoa^0,w,c
  2145  0009DE  2637               	addwf	(??_efgtoa+2)^0,f,c
  2146  0009E0  5036               	movf	(??_efgtoa+1)^0,w,c
  2147  0009E2  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2148  0009E4  5038               	movf	(??_efgtoa+3)^0,w,c
  2149  0009E6  E10A               	bnz	u3900
  2150  0009E8  0E1A               	movlw	26
  2151  0009EA  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2152  0009EC  A0D8               	btfss	status,0,c
  2153  0009EE  EFFB  F004         	goto	u3901
  2154  0009F2  EFFE  F004         	goto	u3900
  2155  0009F6                     u3901:
  2156  0009F6  0E01               	movlw	1
  2157  0009F8  EFFF  F004         	goto	u3910
  2158  0009FC                     u3900:
  2159  0009FC  0E00               	movlw	0
  2160  0009FE                     u3910:
  2161  0009FE  0100               	movlb	0	; () banked
  2162  000A00  6F68               	movwf	_efgtoa$287& (0+255),b
  2163  000A02  6B69               	clrf	(_efgtoa$287+1)& (0+255),b
  2164  000A04                     
  2165                           ; BSR set to: 0
  2166  000A04  5168               	movf	_efgtoa$287& (0+255),w,b
  2167  000A06  1169               	iorwf	(_efgtoa$287+1)& (0+255),w,b
  2168  000A08  B4D8               	btfsc	status,2,c
  2169  000A0A  EF09  F005         	goto	u3921
  2170  000A0E  EF0B  F005         	goto	u3920
  2171  000A12                     u3921:
  2172  000A12  EF19  F005         	goto	l3331
  2173  000A16                     u3920:
  2174  000A16                     
  2175                           ; BSR set to: 0
  2176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  2177  000A16  0E00               	movlw	low _dbuf
  2178  000A18  2592               	addwf	efgtoa@n& (0+255),w,b
  2179  000A1A  6E01               	movwf	strcpy@dest^0,c
  2180  000A1C  0E01               	movlw	high _dbuf
  2181  000A1E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2182  000A20  6E02               	movwf	(strcpy@dest+1)^0,c
  2183  000A22  0E0A               	movlw	low STR_6
  2184  000A24  6E03               	movwf	strcpy@src^0,c
  2185  000A26  0E08               	movlw	high STR_6
  2186  000A28  6E04               	movwf	(strcpy@src+1)^0,c
  2187  000A2A  EC4E  F018         	call	_strcpy	;wreg free
  2188                           
  2189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
  2190  000A2E  EFBB  F004         	goto	l3315
  2191  000A32                     l3331:
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  2195  000A32  0E00               	movlw	low _dbuf
  2196  000A34  2592               	addwf	efgtoa@n& (0+255),w,b
  2197  000A36  6E01               	movwf	strcpy@dest^0,c
  2198  000A38  0E01               	movlw	high _dbuf
  2199  000A3A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2200  000A3C  6E02               	movwf	(strcpy@dest+1)^0,c
  2201  000A3E  0E12               	movlw	low STR_7
  2202  000A40  6E03               	movwf	strcpy@src^0,c
  2203  000A42  0E08               	movlw	high STR_7
  2204  000A44  6E04               	movwf	(strcpy@src+1)^0,c
  2205  000A46  EC4E  F018         	call	_strcpy	;wreg free
  2206  000A4A  EFBB  F004         	goto	l3315
  2207  000A4E                     l3339:
  2208                           
  2209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  2210  000A4E  0E00               	movlw	0
  2211  000A50  0100               	movlb	0	; () banked
  2212  000A52  6F94               	movwf	efgtoa@u& (0+255),b
  2213  000A54  0E00               	movlw	0
  2214  000A56  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2215  000A58  0E80               	movlw	128
  2216  000A5A  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2217  000A5C  0E3F               	movlw	63
  2218  000A5E  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2219                           
  2220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  2221  000A60  0E00               	movlw	0
  2222  000A62  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2223  000A64  0E00               	movlw	0
  2224  000A66  6F90               	movwf	efgtoa@e& (0+255),b
  2225  000A68                     
  2226                           ; BSR set to: 0
  2227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  2228  000A68  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  2229  000A6C  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2230  000A70  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2231  000A74  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2232  000A78  0E00               	movlw	0
  2233  000A7A  6E05               	movwf	___fleq@ff2^0,c
  2234  000A7C  0E00               	movlw	0
  2235  000A7E  6E06               	movwf	(___fleq@ff2+1)^0,c
  2236  000A80  0E00               	movlw	0
  2237  000A82  6E07               	movwf	(___fleq@ff2+2)^0,c
  2238  000A84  0E00               	movlw	0
  2239  000A86  6E08               	movwf	(___fleq@ff2+3)^0,c
  2240  000A88  EC98  F017         	call	___fleq	;wreg free
  2241  000A8C  B0D8               	btfsc	status,0,c
  2242  000A8E  EF4B  F005         	goto	u3931
  2243  000A92  EF4D  F005         	goto	u3930
  2244  000A96                     u3931:
  2245  000A96  EFD0  F005         	goto	l3357
  2246  000A9A                     u3930:
  2247  000A9A  EF6C  F005         	goto	l3349
  2248  000A9E                     l3345:
  2249                           
  2250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
  2251  000A9E  C094  F001         	movff	efgtoa@u,___flmul@b
  2252  000AA2  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2253  000AA6  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2254  000AAA  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2255  000AAE  0E00               	movlw	0
  2256  000AB0  6E05               	movwf	___flmul@a^0,c
  2257  000AB2  0E00               	movlw	0
  2258  000AB4  6E06               	movwf	(___flmul@a+1)^0,c
  2259  000AB6  0E20               	movlw	32
  2260  000AB8  6E07               	movwf	(___flmul@a+2)^0,c
  2261  000ABA  0E41               	movlw	65
  2262  000ABC  6E08               	movwf	(___flmul@a+3)^0,c
  2263  000ABE  EC76  F00E         	call	___flmul	;wreg free
  2264  000AC2  C001  F094         	movff	?___flmul,efgtoa@u
  2265  000AC6  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  2266  000ACA  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  2267  000ACE  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  2268  000AD2                     
  2269                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
  2270  000AD2  0100               	movlb	0	; () banked
  2271  000AD4  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2272  000AD6  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2273  000AD8                     l3349:
  2274                           
  2275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
  2276  000AD8  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  2277  000ADC  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2278  000AE0  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2279  000AE4  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2280  000AE8  0E00               	movlw	0
  2281  000AEA  6E05               	movwf	___flmul@a^0,c
  2282  000AEC  0E00               	movlw	0
  2283  000AEE  6E06               	movwf	(___flmul@a+1)^0,c
  2284  000AF0  0E20               	movlw	32
  2285  000AF2  6E07               	movwf	(___flmul@a+2)^0,c
  2286  000AF4  0E41               	movlw	65
  2287  000AF6  6E08               	movwf	(___flmul@a+3)^0,c
  2288  000AF8  C094  F001         	movff	efgtoa@u,___flmul@b
  2289  000AFC  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2290  000B00  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2291  000B04  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2292  000B08  EC76  F00E         	call	___flmul	;wreg free
  2293  000B0C  C001  F01E         	movff	?___flmul,___flge@ff2
  2294  000B10  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  2295  000B14  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  2296  000B18  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  2297  000B1C  ECAC  F014         	call	___flge	;wreg free
  2298  000B20  B0D8               	btfsc	status,0,c
  2299  000B22  EF95  F005         	goto	u3941
  2300  000B26  EF97  F005         	goto	u3940
  2301  000B2A                     u3941:
  2302  000B2A  EF4F  F005         	goto	l3345
  2303  000B2E                     u3940:
  2304  000B2E  EFB7  F005         	goto	l3355
  2305  000B32                     l3351:
  2306                           
  2307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
  2308  000B32  C094  F001         	movff	efgtoa@u,___fldiv@b
  2309  000B36  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2310  000B3A  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2311  000B3E  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2312  000B42  0E00               	movlw	0
  2313  000B44  6E05               	movwf	___fldiv@a^0,c
  2314  000B46  0E00               	movlw	0
  2315  000B48  6E06               	movwf	(___fldiv@a+1)^0,c
  2316  000B4A  0E20               	movlw	32
  2317  000B4C  6E07               	movwf	(___fldiv@a+2)^0,c
  2318  000B4E  0E41               	movlw	65
  2319  000B50  6E08               	movwf	(___fldiv@a+3)^0,c
  2320  000B52  EC8B  F010         	call	___fldiv	;wreg free
  2321  000B56  C001  F094         	movff	?___fldiv,efgtoa@u
  2322  000B5A  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  2323  000B5E  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  2324  000B62  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  2325  000B66                     
  2326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
  2327  000B66  0100               	movlb	0	; () banked
  2328  000B68  0790               	decf	efgtoa@e& (0+255),f,b
  2329  000B6A  A0D8               	btfss	status,0,c
  2330  000B6C  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  2331  000B6E                     l3355:
  2332                           
  2333                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
  2334  000B6E  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  2335  000B72  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  2336  000B76  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  2337  000B7A  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  2338  000B7E  C094  F01E         	movff	efgtoa@u,___flge@ff2
  2339  000B82  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  2340  000B86  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  2341  000B8A  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  2342  000B8E  ECAC  F014         	call	___flge	;wreg free
  2343  000B92  A0D8               	btfss	status,0,c
  2344  000B94  EFCE  F005         	goto	u3951
  2345  000B98  EFD0  F005         	goto	u3950
  2346  000B9C                     u3951:
  2347  000B9C  EF99  F005         	goto	l3351
  2348  000BA0                     u3950:
  2349  000BA0                     l3357:
  2350                           
  2351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
  2352  000BA0  C034  F007         	movff	efgtoa@c,tolower@c
  2353  000BA4  6A08               	clrf	(tolower@c+1)^0,c
  2354  000BA6  EC1E  F018         	call	_tolower	;wreg free
  2355  000BAA  5007               	movf	?_tolower^0,w,c
  2356  000BAC  0100               	movlb	0	; () banked
  2357  000BAE  6F81               	movwf	efgtoa@mode& (0+255),b
  2358  000BB0                     
  2359                           ; BSR set to: 0
  2360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
  2361  000BB0  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  2362  000BB4                     
  2363                           ; BSR set to: 0
  2364                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
  2365  000BB4  0E67               	movlw	103
  2366  000BB6  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2367  000BB8  A4D8               	btfss	status,2,c
  2368  000BBA  EFE1  F005         	goto	u3961
  2369  000BBE  EFE3  F005         	goto	u3960
  2370  000BC2                     u3961:
  2371  000BC2  EF09  F006         	goto	l3371
  2372  000BC6                     u3960:
  2373  000BC6                     
  2374                           ; BSR set to: 0
  2375                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
  2376  000BC6  51BA               	movf	_prec& (0+255),w,b
  2377  000BC8  11BB               	iorwf	(_prec+1)& (0+255),w,b
  2378  000BCA  A4D8               	btfss	status,2,c
  2379  000BCC  EFEA  F005         	goto	u3971
  2380  000BD0  EFEC  F005         	goto	u3970
  2381  000BD4                     u3971:
  2382  000BD4  EFF0  F005         	goto	l3367
  2383  000BD8                     u3970:
  2384  000BD8                     
  2385                           ; BSR set to: 0
  2386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  2387  000BD8  0E00               	movlw	0
  2388  000BDA  6FBB               	movwf	(_prec+1)& (0+255),b
  2389  000BDC  0E01               	movlw	1
  2390  000BDE  6FBA               	movwf	_prec& (0+255),b
  2391  000BE0                     l3367:
  2392                           
  2393                           ; BSR set to: 0
  2394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
  2395  000BE0  BFBB               	btfsc	(_prec+1)& (0+255),7,b
  2396  000BE2  EFFD  F005         	goto	u3980
  2397  000BE6  51BB               	movf	(_prec+1)& (0+255),w,b
  2398  000BE8  E106               	bnz	u3981
  2399  000BEA  05BA               	decf	_prec& (0+255),w,b
  2400  000BEC  B0D8               	btfsc	status,0,c
  2401  000BEE  EFFB  F005         	goto	u3981
  2402  000BF2  EFFD  F005         	goto	u3980
  2403  000BF6                     u3981:
  2404  000BF6  EF03  F006         	goto	l180
  2405  000BFA                     u3980:
  2406  000BFA                     l3369:
  2407                           
  2408                           ; BSR set to: 0
  2409  000BFA  0E00               	movlw	0
  2410  000BFC  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  2411  000BFE  0E06               	movlw	6
  2412  000C00  6F7C               	movwf	efgtoa@p& (0+255),b
  2413  000C02  EF12  F006         	goto	l3377
  2414  000C06                     l180:
  2415                           
  2416                           ; BSR set to: 0
  2417  000C06  C0BA  F07C         	movff	_prec,efgtoa@p
  2418  000C0A  C0BB  F07D         	movff	_prec+1,efgtoa@p+1
  2419  000C0E  EF12  F006         	goto	l3377
  2420  000C12                     l3371:
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
  2424  000C12  BFBB               	btfsc	(_prec+1)& (0+255),7,b
  2425  000C14  EF0E  F006         	goto	u3991
  2426  000C18  EF10  F006         	goto	u3990
  2427  000C1C                     u3991:
  2428  000C1C  EFFD  F005         	goto	l3369
  2429  000C20                     u3990:
  2430  000C20  EF03  F006         	goto	l180
  2431  000C24                     l3377:
  2432                           
  2433                           ; BSR set to: 0
  2434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
  2435  000C24  0E67               	movlw	103
  2436  000C26  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2437  000C28  A4D8               	btfss	status,2,c
  2438  000C2A  EF19  F006         	goto	u4001
  2439  000C2E  EF1B  F006         	goto	u4000
  2440  000C32                     u4001:
  2441  000C32  EF4A  F006         	goto	l3387
  2442  000C36                     u4000:
  2443  000C36                     
  2444                           ; BSR set to: 0
  2445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  2446  000C36  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  2447  000C38  EF29  F006         	goto	u4010
  2448  000C3C  0EFC               	movlw	252
  2449  000C3E  5D90               	subwf	efgtoa@e& (0+255),w,b
  2450  000C40  0EFF               	movlw	255
  2451  000C42  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2452  000C44  A0D8               	btfss	status,0,c
  2453  000C46  EF27  F006         	goto	u4011
  2454  000C4A  EF29  F006         	goto	u4010
  2455  000C4E                     u4011:
  2456  000C4E  EF48  F006         	goto	l3385
  2457  000C52                     u4010:
  2458  000C52                     
  2459                           ; BSR set to: 0
  2460  000C52  0EFF               	movlw	255
  2461  000C54  6E35               	movwf	??_efgtoa^0,c
  2462  000C56  0EFF               	movlw	255
  2463  000C58  6E36               	movwf	(??_efgtoa+1)^0,c
  2464  000C5A  C07C  F037         	movff	efgtoa@p,??_efgtoa+2
  2465  000C5E  C07D  F038         	movff	efgtoa@p+1,??_efgtoa+3
  2466  000C62  5035               	movf	??_efgtoa^0,w,c
  2467  000C64  2637               	addwf	(??_efgtoa+2)^0,f,c
  2468  000C66  5036               	movf	(??_efgtoa+1)^0,w,c
  2469  000C68  2238               	addwfc	(??_efgtoa+3)^0,f,c
  2470  000C6A  5190               	movf	efgtoa@e& (0+255),w,b
  2471  000C6C  5C37               	subwf	(??_efgtoa+2)^0,w,c
  2472  000C6E  5038               	movf	(??_efgtoa+3)^0,w,c
  2473  000C70  0A80               	xorlw	128
  2474  000C72  6E39               	movwf	(??_efgtoa+4)^0,c
  2475  000C74  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2476  000C76  0A80               	xorlw	128
  2477  000C78  5839               	subwfb	(??_efgtoa+4)^0,w,c
  2478  000C7A  A0D8               	btfss	status,0,c
  2479  000C7C  EF42  F006         	goto	u4021
  2480  000C80  EF44  F006         	goto	u4020
  2481  000C84                     u4021:
  2482  000C84  EF48  F006         	goto	l3385
  2483  000C88                     u4020:
  2484  000C88                     
  2485                           ; BSR set to: 0
  2486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
  2487  000C88  0E66               	movlw	102
  2488  000C8A  6F7E               	movwf	efgtoa@nmode& (0+255),b
  2489                           
  2490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 392:         } else {
  2491  000C8C  EF4A  F006         	goto	l3387
  2492  000C90                     l3385:
  2493                           
  2494                           ; BSR set to: 0
  2495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
  2496  000C90  0E65               	movlw	101
  2497  000C92  6F7E               	movwf	efgtoa@nmode& (0+255),b
  2498  000C94                     l3387:
  2499                           
  2500                           ; BSR set to: 0
  2501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
  2502  000C94  C07C  F074         	movff	efgtoa@p,efgtoa@m
  2503  000C98  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  2504  000C9C                     
  2505                           ; BSR set to: 0
  2506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  2507  000C9C  0E67               	movlw	103
  2508  000C9E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2509  000CA0  A4D8               	btfss	status,2,c
  2510  000CA2  EF55  F006         	goto	u4031
  2511  000CA6  EF57  F006         	goto	u4030
  2512  000CAA                     u4031:
  2513  000CAA  EF67  F006         	goto	l3395
  2514  000CAE                     u4030:
  2515  000CAE                     
  2516                           ; BSR set to: 0
  2517  000CAE  0E66               	movlw	102
  2518  000CB0  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2519  000CB2  A4D8               	btfss	status,2,c
  2520  000CB4  EF5E  F006         	goto	u4041
  2521  000CB8  EF60  F006         	goto	u4040
  2522  000CBC                     u4041:
  2523  000CBC  EF69  F006         	goto	l3397
  2524  000CC0                     u4040:
  2525  000CC0                     
  2526                           ; BSR set to: 0
  2527  000CC0  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2528  000CC2  EF67  F006         	goto	u4050
  2529  000CC6  EF65  F006         	goto	u4051
  2530  000CCA                     u4051:
  2531  000CCA  EF69  F006         	goto	l3397
  2532  000CCE                     u4050:
  2533  000CCE                     l3395:
  2534                           
  2535                           ; BSR set to: 0
  2536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
  2537  000CCE  4B74               	infsnz	efgtoa@m& (0+255),f,b
  2538  000CD0  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  2539  000CD2                     l3397:
  2540                           
  2541                           ; BSR set to: 0
  2542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
  2543  000CD2  0E66               	movlw	102
  2544  000CD4  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2545  000CD6  A4D8               	btfss	status,2,c
  2546  000CD8  EF70  F006         	goto	u4061
  2547  000CDC  EF72  F006         	goto	u4060
  2548  000CE0                     u4061:
  2549  000CE0  EF92  F006         	goto	l3407
  2550  000CE4                     u4060:
  2551  000CE4                     
  2552                           ; BSR set to: 0
  2553                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
  2554  000CE4  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2555  000CE6  EF79  F006         	goto	u4070
  2556  000CEA  EF77  F006         	goto	u4071
  2557  000CEE                     u4071:
  2558  000CEE  EF85  F006         	goto	l3403
  2559  000CF2                     u4070:
  2560  000CF2                     
  2561                           ; BSR set to: 0
  2562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
  2563  000CF2  0E00               	movlw	0
  2564  000CF4  6F94               	movwf	efgtoa@u& (0+255),b
  2565  000CF6  0E00               	movlw	0
  2566  000CF8  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2567  000CFA  0E80               	movlw	128
  2568  000CFC  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2569  000CFE  0E3F               	movlw	63
  2570  000D00  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2571                           
  2572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
  2573  000D02  0E00               	movlw	0
  2574  000D04  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2575  000D06  0E00               	movlw	0
  2576  000D08  6F90               	movwf	efgtoa@e& (0+255),b
  2577  000D0A                     l3403:
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
  2581  000D0A  0E67               	movlw	103
  2582  000D0C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2583  000D0E  B4D8               	btfsc	status,2,c
  2584  000D10  EF8C  F006         	goto	u4081
  2585  000D14  EF8E  F006         	goto	u4080
  2586  000D18                     u4081:
  2587  000D18  EF92  F006         	goto	l3407
  2588  000D1C                     u4080:
  2589  000D1C                     
  2590                           ; BSR set to: 0
  2591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
  2592  000D1C  5190               	movf	efgtoa@e& (0+255),w,b
  2593  000D1E  2774               	addwf	efgtoa@m& (0+255),f,b
  2594  000D20  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2595  000D22  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2596  000D24                     l3407:
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  2600  000D24  0E00               	movlw	0
  2601  000D26  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  2602  000D28  0E00               	movlw	0
  2603  000D2A  6F8A               	movwf	efgtoa@i& (0+255),b
  2604  000D2C                     
  2605                           ; BSR set to: 0
  2606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
  2607  000D2C  C08C  F082         	movff	efgtoa@g,efgtoa@h
  2608  000D30  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  2609  000D34  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  2610  000D38  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  2611  000D3C                     
  2612                           ; BSR set to: 0
  2613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  2614  000D3C  C094  F060         	movff	efgtoa@u,efgtoa@ou
  2615  000D40  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  2616  000D44  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  2617  000D48  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  2618                           
  2619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  2620  000D4C  EF23  F007         	goto	l3421
  2621  000D50                     l3413:
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
  2625  000D50  C082  F001         	movff	efgtoa@h,___fldiv@b
  2626  000D54  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2627  000D58  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2628  000D5C  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2629  000D60  C094  F005         	movff	efgtoa@u,___fldiv@a
  2630  000D64  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2631  000D68  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2632  000D6C  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2633  000D70  EC8B  F010         	call	___fldiv	;wreg free
  2634  000D74  C001  F01A         	movff	?___fldiv,floorf@x
  2635  000D78  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2636  000D7C  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2637  000D80  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2638  000D84  EC58  F012         	call	_floorf	;wreg free
  2639  000D88  C01A  F086         	movff	?_floorf,efgtoa@l
  2640  000D8C  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  2641  000D90  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  2642  000D94  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  2643                           
  2644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
  2645  000D98  C086  F001         	movff	efgtoa@l,___fltol@f1
  2646  000D9C  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2647  000DA0  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2648  000DA4  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2649  000DA8  EC29  F014         	call	___fltol	;wreg free
  2650  000DAC  C001  F078         	movff	?___fltol,efgtoa@d
  2651  000DB0  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  2652  000DB4                     
  2653                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
  2654  000DB4  C082  F01A         	movff	efgtoa@h,___flsub@b
  2655  000DB8  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  2656  000DBC  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  2657  000DC0  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  2658  000DC4  C094  F005         	movff	efgtoa@u,___flmul@a
  2659  000DC8  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  2660  000DCC  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  2661  000DD0  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  2662  000DD4  C086  F001         	movff	efgtoa@l,___flmul@b
  2663  000DD8  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  2664  000DDC  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  2665  000DE0  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  2666  000DE4  EC76  F00E         	call	___flmul	;wreg free
  2667  000DE8  C001  F01E         	movff	?___flmul,___flsub@a
  2668  000DEC  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  2669  000DF0  C003  F020         	movff	?___flmul+2,___flsub@a+2
  2670  000DF4  C004  F021         	movff	?___flmul+3,___flsub@a+3
  2671  000DF8  EC43  F019         	call	___flsub	;wreg free
  2672  000DFC  C01A  F082         	movff	?___flsub,efgtoa@h
  2673  000E00  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  2674  000E04  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  2675  000E08  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  2676  000E0C                     
  2677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
  2678  000E0C  C094  F001         	movff	efgtoa@u,___fldiv@b
  2679  000E10  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2680  000E14  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2681  000E18  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2682  000E1C  0E00               	movlw	0
  2683  000E1E  6E05               	movwf	___fldiv@a^0,c
  2684  000E20  0E00               	movlw	0
  2685  000E22  6E06               	movwf	(___fldiv@a+1)^0,c
  2686  000E24  0E20               	movlw	32
  2687  000E26  6E07               	movwf	(___fldiv@a+2)^0,c
  2688  000E28  0E41               	movlw	65
  2689  000E2A  6E08               	movwf	(___fldiv@a+3)^0,c
  2690  000E2C  EC8B  F010         	call	___fldiv	;wreg free
  2691  000E30  C001  F094         	movff	?___fldiv,efgtoa@u
  2692  000E34  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  2693  000E38  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  2694  000E3C  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  2695  000E40                     
  2696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
  2697  000E40  0100               	movlb	0	; () banked
  2698  000E42  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  2699  000E44  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  2700  000E46                     l3421:
  2701                           
  2702                           ; BSR set to: 0
  2703                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  2704  000E46  5174               	movf	efgtoa@m& (0+255),w,b
  2705  000E48  5D8A               	subwf	efgtoa@i& (0+255),w,b
  2706  000E4A  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  2707  000E4C  0A80               	xorlw	128
  2708  000E4E  6E35               	movwf	??_efgtoa^0,c
  2709  000E50  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  2710  000E52  0A80               	xorlw	128
  2711  000E54  5835               	subwfb	??_efgtoa^0,w,c
  2712  000E56  A0D8               	btfss	status,0,c
  2713  000E58  EF30  F007         	goto	u4091
  2714  000E5C  EF32  F007         	goto	u4090
  2715  000E60                     u4091:
  2716  000E60  EFA8  F006         	goto	l3413
  2717  000E64                     u4090:
  2718  000E64                     
  2719                           ; BSR set to: 0
  2720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  2721  000E64  C094  F001         	movff	efgtoa@u,___flmul@b
  2722  000E68  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  2723  000E6C  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  2724  000E70  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  2725  000E74  0E00               	movlw	0
  2726  000E76  6E05               	movwf	___flmul@a^0,c
  2727  000E78  0E00               	movlw	0
  2728  000E7A  6E06               	movwf	(___flmul@a+1)^0,c
  2729  000E7C  0EA0               	movlw	160
  2730  000E7E  6E07               	movwf	(___flmul@a+2)^0,c
  2731  000E80  0E40               	movlw	64
  2732  000E82  6E08               	movwf	(___flmul@a+3)^0,c
  2733  000E84  EC76  F00E         	call	___flmul	;wreg free
  2734  000E88  C001  F086         	movff	?___flmul,efgtoa@l
  2735  000E8C  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  2736  000E90  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  2737  000E94  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  2738  000E98                     
  2739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
  2740  000E98  C082  F01A         	movff	efgtoa@h,___flge@ff1
  2741  000E9C  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  2742  000EA0  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  2743  000EA4  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  2744  000EA8  C086  F01E         	movff	efgtoa@l,___flge@ff2
  2745  000EAC  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  2746  000EB0  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  2747  000EB4  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  2748  000EB8  ECAC  F014         	call	___flge	;wreg free
  2749  000EBC  B0D8               	btfsc	status,0,c
  2750  000EBE  EF63  F007         	goto	u4101
  2751  000EC2  EF65  F007         	goto	u4100
  2752  000EC6                     u4101:
  2753  000EC6  EF70  F007         	goto	l3429
  2754  000ECA                     u4100:
  2755  000ECA                     
  2756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
  2757  000ECA  0E00               	movlw	0
  2758  000ECC  0100               	movlb	0	; () banked
  2759  000ECE  6F86               	movwf	efgtoa@l& (0+255),b
  2760  000ED0  0E00               	movlw	0
  2761  000ED2  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  2762  000ED4  0E00               	movlw	0
  2763  000ED6  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  2764  000ED8  0E00               	movlw	0
  2765  000EDA  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  2766                           
  2767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
  2768  000EDC  EF99  F007         	goto	l3435
  2769  000EE0                     l3429:
  2770                           
  2771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
  2772  000EE0  C082  F001         	movff	efgtoa@h,___fleq@ff1
  2773  000EE4  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2774  000EE8  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2775  000EEC  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2776  000EF0  C086  F005         	movff	efgtoa@l,___fleq@ff2
  2777  000EF4  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2778  000EF8  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2779  000EFC  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2780  000F00  EC98  F017         	call	___fleq	;wreg free
  2781  000F04  A0D8               	btfss	status,0,c
  2782  000F06  EF87  F007         	goto	u4111
  2783  000F0A  EF89  F007         	goto	u4110
  2784  000F0E                     u4111:
  2785  000F0E  EF99  F007         	goto	l3435
  2786  000F12                     u4110:
  2787  000F12  0100               	movlb	0	; () banked
  2788  000F14  B178               	btfsc	efgtoa@d& (0+255),0,b
  2789  000F16  EF8F  F007         	goto	u4121
  2790  000F1A  EF91  F007         	goto	u4120
  2791  000F1E                     u4121:
  2792  000F1E  EF99  F007         	goto	l3435
  2793  000F22                     u4120:
  2794  000F22                     
  2795                           ; BSR set to: 0
  2796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
  2797  000F22  0E00               	movlw	0
  2798  000F24  6F86               	movwf	efgtoa@l& (0+255),b
  2799  000F26  0E00               	movlw	0
  2800  000F28  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  2801  000F2A  0E00               	movlw	0
  2802  000F2C  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  2803  000F2E  0E00               	movlw	0
  2804  000F30  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  2805  000F32                     l3435:
  2806                           
  2807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  2808  000F32  C08C  F001         	movff	efgtoa@g,___fladd@b
  2809  000F36  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  2810  000F3A  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  2811  000F3E  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  2812  000F42  C086  F005         	movff	efgtoa@l,___fladd@a
  2813  000F46  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  2814  000F4A  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  2815  000F4E  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  2816  000F52  ECE6  F009         	call	___fladd	;wreg free
  2817  000F56  C001  F082         	movff	?___fladd,efgtoa@h
  2818  000F5A  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  2819  000F5E  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  2820  000F62  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  2821  000F66                     
  2822                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  2823  000F66  C060  F094         	movff	efgtoa@ou,efgtoa@u
  2824  000F6A  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  2825  000F6E  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  2826  000F72  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  2827  000F76                     
  2828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  2829  000F76  0E65               	movlw	101
  2830  000F78  0100               	movlb	0	; () banked
  2831  000F7A  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2832  000F7C  B4D8               	btfsc	status,2,c
  2833  000F7E  EFC3  F007         	goto	u4131
  2834  000F82  EFC5  F007         	goto	u4130
  2835  000F86                     u4131:
  2836  000F86  EFCB  F007         	goto	l3443
  2837  000F8A                     u4130:
  2838  000F8A                     
  2839                           ; BSR set to: 0
  2840  000F8A  C090  F076         	movff	efgtoa@e,efgtoa@ne
  2841  000F8E  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  2842  000F92  EFCF  F007         	goto	l206
  2843  000F96                     l3443:
  2844                           
  2845                           ; BSR set to: 0
  2846  000F96  0E00               	movlw	0
  2847  000F98  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  2848  000F9A  0E00               	movlw	0
  2849  000F9C  6F76               	movwf	efgtoa@ne& (0+255),b
  2850  000F9E                     l206:
  2851                           
  2852                           ; BSR set to: 0
  2853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  2854  000F9E  0E00               	movlw	0
  2855  000FA0  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  2856  000FA2  0E00               	movlw	0
  2857  000FA4  6F72               	movwf	efgtoa@pp& (0+255),b
  2858                           
  2859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  2860  000FA6  0E00               	movlw	0
  2861  000FA8  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  2862  000FAA  0E00               	movlw	0
  2863  000FAC  6F70               	movwf	efgtoa@t& (0+255),b
  2864                           
  2865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  2866  000FAE  0E00               	movlw	0
  2867  000FB0  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  2868  000FB2  0E00               	movlw	0
  2869  000FB4  6F8A               	movwf	efgtoa@i& (0+255),b
  2870                           
  2871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  2872  000FB6  EFCB  F008         	goto	l3493
  2873  000FBA                     l3445:
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
  2877  000FBA  C082  F001         	movff	efgtoa@h,___fldiv@b
  2878  000FBE  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2879  000FC2  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2880  000FC6  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2881  000FCA  C094  F005         	movff	efgtoa@u,___fldiv@a
  2882  000FCE  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2883  000FD2  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2884  000FD6  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2885  000FDA  EC8B  F010         	call	___fldiv	;wreg free
  2886  000FDE  C001  F01A         	movff	?___fldiv,floorf@x
  2887  000FE2  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2888  000FE6  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2889  000FEA  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2890  000FEE  EC58  F012         	call	_floorf	;wreg free
  2891  000FF2  C01A  F086         	movff	?_floorf,efgtoa@l
  2892  000FF6  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  2893  000FFA  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  2894  000FFE  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  2895                           
  2896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
  2897  001002  C086  F001         	movff	efgtoa@l,___fltol@f1
  2898  001006  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2899  00100A  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2900  00100E  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2901  001012  EC29  F014         	call	___fltol	;wreg free
  2902  001016  C001  F078         	movff	?___fltol,efgtoa@d
  2903  00101A  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  2904  00101E                     
  2905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  2906  00101E  B85E               	btfsc	_flags^0,4,c
  2907  001020  EF14  F008         	goto	u4141
  2908  001024  EF16  F008         	goto	u4140
  2909  001028                     u4141:
  2910  001028  EF34  F008         	goto	l3457
  2911  00102C                     u4140:
  2912  00102C  0100               	movlb	0	; () banked
  2913  00102E  5178               	movf	efgtoa@d& (0+255),w,b
  2914  001030  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  2915  001032  A4D8               	btfss	status,2,c
  2916  001034  EF1E  F008         	goto	u4151
  2917  001038  EF20  F008         	goto	u4150
  2918  00103C                     u4151:
  2919  00103C  EF34  F008         	goto	l3457
  2920  001040                     u4150:
  2921  001040                     
  2922                           ; BSR set to: 0
  2923  001040  0E67               	movlw	103
  2924  001042  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2925  001044  A4D8               	btfss	status,2,c
  2926  001046  EF27  F008         	goto	u4161
  2927  00104A  EF29  F008         	goto	u4160
  2928  00104E                     u4161:
  2929  00104E  EF34  F008         	goto	l3457
  2930  001052                     u4160:
  2931  001052                     
  2932                           ; BSR set to: 0
  2933  001052  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2934  001054  EF30  F008         	goto	u4170
  2935  001058  EF2E  F008         	goto	u4171
  2936  00105C                     u4171:
  2937  00105C  EF34  F008         	goto	l3457
  2938  001060                     u4170:
  2939  001060                     
  2940                           ; BSR set to: 0
  2941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
  2942  001060  4B70               	infsnz	efgtoa@t& (0+255),f,b
  2943  001062  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  2944                           
  2945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
  2946  001064  EF7F  F008         	goto	l3485
  2947  001068                     l3457:
  2948                           
  2949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
  2950  001068  0100               	movlb	0	; () banked
  2951  00106A  5172               	movf	efgtoa@pp& (0+255),w,b
  2952  00106C  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  2953  00106E  A4D8               	btfss	status,2,c
  2954  001070  EF3C  F008         	goto	u4181
  2955  001074  EF3E  F008         	goto	u4180
  2956  001078                     u4181:
  2957  001078  EF68  F008         	goto	l3477
  2958  00107C                     u4180:
  2959  00107C                     
  2960                           ; BSR set to: 0
  2961  00107C  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2962  00107E  EF45  F008         	goto	u4190
  2963  001082  EF43  F008         	goto	u4191
  2964  001086                     u4191:
  2965  001086  EF68  F008         	goto	l3477
  2966  00108A                     u4190:
  2967  00108A                     
  2968                           ; BSR set to: 0
  2969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
  2970  00108A  0E00               	movlw	low _dbuf
  2971  00108C  2592               	addwf	efgtoa@n& (0+255),w,b
  2972  00108E  6ED9               	movwf	fsr2l,c
  2973  001090  0E01               	movlw	high _dbuf
  2974  001092  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2975  001094  6EDA               	movwf	fsr2h,c
  2976  001096  0E2E               	movlw	46
  2977  001098  6EDF               	movwf	indf2,c
  2978  00109A                     
  2979                           ; BSR set to: 0
  2980  00109A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2981  00109C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2982  00109E                     
  2983                           ; BSR set to: 0
  2984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
  2985  00109E  077F               	decf	efgtoa@w& (0+255),f,b
  2986  0010A0  A0D8               	btfss	status,0,c
  2987  0010A2  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2988  0010A4                     
  2989                           ; BSR set to: 0
  2990                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
  2991  0010A4  0E00               	movlw	0
  2992  0010A6  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  2993  0010A8  0E01               	movlw	1
  2994  0010AA  6F72               	movwf	efgtoa@pp& (0+255),b
  2995  0010AC  EF68  F008         	goto	l3477
  2996  0010B0                     l3469:
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
  3000  0010B0  0E00               	movlw	low _dbuf
  3001  0010B2  2592               	addwf	efgtoa@n& (0+255),w,b
  3002  0010B4  6ED9               	movwf	fsr2l,c
  3003  0010B6  0E01               	movlw	high _dbuf
  3004  0010B8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3005  0010BA  6EDA               	movwf	fsr2h,c
  3006  0010BC  0E30               	movlw	48
  3007  0010BE  6EDF               	movwf	indf2,c
  3008  0010C0                     
  3009                           ; BSR set to: 0
  3010  0010C0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3011  0010C2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3012  0010C4                     
  3013                           ; BSR set to: 0
  3014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
  3015  0010C4  077F               	decf	efgtoa@w& (0+255),f,b
  3016  0010C6  A0D8               	btfss	status,0,c
  3017  0010C8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3018  0010CA                     
  3019                           ; BSR set to: 0
  3020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
  3021  0010CA  0770               	decf	efgtoa@t& (0+255),f,b
  3022  0010CC  A0D8               	btfss	status,0,c
  3023  0010CE  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  3024  0010D0                     l3477:
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
  3028  0010D0  5170               	movf	efgtoa@t& (0+255),w,b
  3029  0010D2  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3030  0010D4  A4D8               	btfss	status,2,c
  3031  0010D6  EF6F  F008         	goto	u4201
  3032  0010DA  EF71  F008         	goto	u4200
  3033  0010DE                     u4201:
  3034  0010DE  EF58  F008         	goto	l3469
  3035  0010E2                     u4200:
  3036  0010E2                     
  3037                           ; BSR set to: 0
  3038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
  3039  0010E2  0E00               	movlw	low _dbuf
  3040  0010E4  2592               	addwf	efgtoa@n& (0+255),w,b
  3041  0010E6  6ED9               	movwf	fsr2l,c
  3042  0010E8  0E01               	movlw	high _dbuf
  3043  0010EA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3044  0010EC  6EDA               	movwf	fsr2h,c
  3045  0010EE  5178               	movf	efgtoa@d& (0+255),w,b
  3046  0010F0  0F30               	addlw	48
  3047  0010F2  6EDF               	movwf	indf2,c
  3048  0010F4                     
  3049                           ; BSR set to: 0
  3050  0010F4  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3051  0010F6  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3052  0010F8                     
  3053                           ; BSR set to: 0
  3054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
  3055  0010F8  077F               	decf	efgtoa@w& (0+255),f,b
  3056  0010FA  A0D8               	btfss	status,0,c
  3057  0010FC  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3058  0010FE                     l3485:
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
  3062  0010FE  C082  F01A         	movff	efgtoa@h,___flsub@b
  3063  001102  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  3064  001106  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  3065  00110A  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  3066  00110E  C094  F005         	movff	efgtoa@u,___flmul@a
  3067  001112  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  3068  001116  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  3069  00111A  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  3070  00111E  C086  F001         	movff	efgtoa@l,___flmul@b
  3071  001122  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  3072  001126  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  3073  00112A  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  3074  00112E  EC76  F00E         	call	___flmul	;wreg free
  3075  001132  C001  F01E         	movff	?___flmul,___flsub@a
  3076  001136  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  3077  00113A  C003  F020         	movff	?___flmul+2,___flsub@a+2
  3078  00113E  C004  F021         	movff	?___flmul+3,___flsub@a+3
  3079  001142  EC43  F019         	call	___flsub	;wreg free
  3080  001146  C01A  F082         	movff	?___flsub,efgtoa@h
  3081  00114A  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  3082  00114E  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  3083  001152  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  3084  001156                     
  3085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
  3086  001156  C094  F001         	movff	efgtoa@u,___fldiv@b
  3087  00115A  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3088  00115E  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3089  001162  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3090  001166  0E00               	movlw	0
  3091  001168  6E05               	movwf	___fldiv@a^0,c
  3092  00116A  0E00               	movlw	0
  3093  00116C  6E06               	movwf	(___fldiv@a+1)^0,c
  3094  00116E  0E20               	movlw	32
  3095  001170  6E07               	movwf	(___fldiv@a+2)^0,c
  3096  001172  0E41               	movlw	65
  3097  001174  6E08               	movwf	(___fldiv@a+3)^0,c
  3098  001176  EC8B  F010         	call	___fldiv	;wreg free
  3099  00117A  C001  F094         	movff	?___fldiv,efgtoa@u
  3100  00117E  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3101  001182  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3102  001186  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3103  00118A                     
  3104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
  3105  00118A  0100               	movlb	0	; () banked
  3106  00118C  0776               	decf	efgtoa@ne& (0+255),f,b
  3107  00118E  A0D8               	btfss	status,0,c
  3108  001190  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  3109  001192                     
  3110                           ; BSR set to: 0
  3111                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
  3112  001192  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3113  001194  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3114  001196                     l3493:
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3118  001196  5174               	movf	efgtoa@m& (0+255),w,b
  3119  001198  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3120  00119A  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3121  00119C  0A80               	xorlw	128
  3122  00119E  6E35               	movwf	??_efgtoa^0,c
  3123  0011A0  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3124  0011A2  0A80               	xorlw	128
  3125  0011A4  5835               	subwfb	??_efgtoa^0,w,c
  3126  0011A6  B0D8               	btfsc	status,0,c
  3127  0011A8  EFD8  F008         	goto	u4211
  3128  0011AC  EFDA  F008         	goto	u4210
  3129  0011B0                     u4211:
  3130  0011B0  EFE8  F008         	goto	l3497
  3131  0011B4                     u4210:
  3132  0011B4                     
  3133                           ; BSR set to: 0
  3134  0011B4  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3135  0011B6  EFE6  F008         	goto	u4221
  3136  0011BA  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3137  0011BC  E109               	bnz	u4220
  3138  0011BE  0E4B               	movlw	75
  3139  0011C0  5D92               	subwf	efgtoa@n& (0+255),w,b
  3140  0011C2  A0D8               	btfss	status,0,c
  3141  0011C4  EFE6  F008         	goto	u4221
  3142  0011C8  EFE8  F008         	goto	u4220
  3143  0011CC                     u4221:
  3144  0011CC  EFDD  F007         	goto	l3445
  3145  0011D0                     u4220:
  3146  0011D0                     l3497:
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
  3150  0011D0  5172               	movf	efgtoa@pp& (0+255),w,b
  3151  0011D2  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3152  0011D4  A4D8               	btfss	status,2,c
  3153  0011D6  EFEF  F008         	goto	u4231
  3154  0011DA  EFF1  F008         	goto	u4230
  3155  0011DE                     u4231:
  3156  0011DE  EF02  F009         	goto	l3505
  3157  0011E2                     u4230:
  3158  0011E2                     
  3159                           ; BSR set to: 0
  3160  0011E2  A85E               	btfss	_flags^0,4,c
  3161  0011E4  EFF6  F008         	goto	u4241
  3162  0011E8  EFF8  F008         	goto	u4240
  3163  0011EC                     u4241:
  3164  0011EC  EF02  F009         	goto	l3505
  3165  0011F0                     u4240:
  3166  0011F0                     
  3167                           ; BSR set to: 0
  3168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
  3169  0011F0  0E00               	movlw	low _dbuf
  3170  0011F2  2592               	addwf	efgtoa@n& (0+255),w,b
  3171  0011F4  6ED9               	movwf	fsr2l,c
  3172  0011F6  0E01               	movlw	high _dbuf
  3173  0011F8  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3174  0011FA  6EDA               	movwf	fsr2h,c
  3175  0011FC  0E2E               	movlw	46
  3176  0011FE  6EDF               	movwf	indf2,c
  3177  001200                     
  3178                           ; BSR set to: 0
  3179  001200  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3180  001202  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3181  001204                     l3505:
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
  3185  001204  0E00               	movlw	low _dbuf
  3186  001206  2592               	addwf	efgtoa@n& (0+255),w,b
  3187  001208  6ED9               	movwf	fsr2l,c
  3188  00120A  0E01               	movlw	high _dbuf
  3189  00120C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3190  00120E  6EDA               	movwf	fsr2h,c
  3191  001210  0E00               	movlw	0
  3192  001212  6EDF               	movwf	indf2,c
  3193  001214                     
  3194                           ; BSR set to: 0
  3195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
  3196  001214  0E65               	movlw	101
  3197  001216  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3198  001218  A4D8               	btfss	status,2,c
  3199  00121A  EF11  F009         	goto	u4251
  3200  00121E  EF13  F009         	goto	u4250
  3201  001222                     u4251:
  3202  001222  EFC0  F004         	goto	l3317
  3203  001226                     u4250:
  3204  001226                     
  3205                           ; BSR set to: 0
  3206                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
  3207  001226  0E00               	movlw	0
  3208  001228  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3209  00122A  0E4F               	movlw	79
  3210  00122C  6F8A               	movwf	efgtoa@i& (0+255),b
  3211  00122E                     
  3212                           ; BSR set to: 0
  3213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
  3214  00122E  0E00               	movlw	low _dbuf
  3215  001230  258A               	addwf	efgtoa@i& (0+255),w,b
  3216  001232  6ED9               	movwf	fsr2l,c
  3217  001234  0E01               	movlw	high _dbuf
  3218  001236  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3219  001238  6EDA               	movwf	fsr2h,c
  3220  00123A  0E00               	movlw	0
  3221  00123C  6EDF               	movwf	indf2,c
  3222  00123E                     
  3223                           ; BSR set to: 0
  3224                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
  3225  00123E  0E00               	movlw	0
  3226  001240  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3227  001242  0E00               	movlw	0
  3228  001244  6F7A               	movwf	efgtoa@sign& (0+255),b
  3229  001246                     
  3230                           ; BSR set to: 0
  3231                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
  3232  001246  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3233  001248  EF2A  F009         	goto	u4260
  3234  00124C  EF28  F009         	goto	u4261
  3235  001250                     u4261:
  3236  001250  EF32  F009         	goto	l3521
  3237  001254                     u4260:
  3238  001254                     
  3239                           ; BSR set to: 0
  3240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
  3241  001254  0E00               	movlw	0
  3242  001256  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3243  001258  0E01               	movlw	1
  3244  00125A  6F7A               	movwf	efgtoa@sign& (0+255),b
  3245  00125C                     
  3246                           ; BSR set to: 0
  3247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
  3248  00125C  6D90               	negf	efgtoa@e& (0+255),b
  3249  00125E  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3250  001260  B0D8               	btfsc	status,0,c
  3251  001262  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3252  001264                     l3521:
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
  3256  001264  0E00               	movlw	0
  3257  001266  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3258  001268  0E02               	movlw	2
  3259  00126A  6F7C               	movwf	efgtoa@p& (0+255),b
  3260                           
  3261                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  3262  00126C  EF63  F009         	goto	l3533
  3263  001270                     l3523:
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
  3267  001270  078A               	decf	efgtoa@i& (0+255),f,b
  3268  001272  A0D8               	btfss	status,0,c
  3269  001274  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3270  001276                     
  3271                           ; BSR set to: 0
  3272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
  3273  001276  0E00               	movlw	low _dbuf
  3274  001278  258A               	addwf	efgtoa@i& (0+255),w,b
  3275  00127A  6ED9               	movwf	fsr2l,c
  3276  00127C  0E01               	movlw	high _dbuf
  3277  00127E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3278  001280  6EDA               	movwf	fsr2h,c
  3279  001282  C090  F001         	movff	efgtoa@e,___awmod@dividend
  3280  001286  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3281  00128A  0E00               	movlw	0
  3282  00128C  6E04               	movwf	(___awmod@divisor+1)^0,c
  3283  00128E  0E0A               	movlw	10
  3284  001290  6E03               	movwf	___awmod@divisor^0,c
  3285  001292  EC40  F017         	call	___awmod	;wreg free
  3286  001296  5001               	movf	?___awmod^0,w,c
  3287  001298  0F30               	addlw	48
  3288  00129A  6EDF               	movwf	indf2,c
  3289  00129C                     
  3290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
  3291  00129C  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  3292  0012A0  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3293  0012A4  0E00               	movlw	0
  3294  0012A6  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3295  0012A8  0E0A               	movlw	10
  3296  0012AA  6E03               	movwf	___awdiv@divisor^0,c
  3297  0012AC  EC7D  F016         	call	___awdiv	;wreg free
  3298  0012B0  C001  F090         	movff	?___awdiv,efgtoa@e
  3299  0012B4  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  3300  0012B8                     
  3301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
  3302  0012B8  0100               	movlb	0	; () banked
  3303  0012BA  077C               	decf	efgtoa@p& (0+255),f,b
  3304  0012BC  A0D8               	btfss	status,0,c
  3305  0012BE  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3306  0012C0                     
  3307                           ; BSR set to: 0
  3308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
  3309  0012C0  077F               	decf	efgtoa@w& (0+255),f,b
  3310  0012C2  A0D8               	btfss	status,0,c
  3311  0012C4  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3312  0012C6                     l3533:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  3316  0012C6  5190               	movf	efgtoa@e& (0+255),w,b
  3317  0012C8  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3318  0012CA  A4D8               	btfss	status,2,c
  3319  0012CC  EF6A  F009         	goto	u4271
  3320  0012D0  EF6C  F009         	goto	u4270
  3321  0012D4                     u4271:
  3322  0012D4  EF38  F009         	goto	l3523
  3323  0012D8                     u4270:
  3324  0012D8                     
  3325                           ; BSR set to: 0
  3326  0012D8  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3327  0012DA  EF79  F009         	goto	u4280
  3328  0012DE  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  3329  0012E0  E106               	bnz	u4281
  3330  0012E2  057C               	decf	efgtoa@p& (0+255),w,b
  3331  0012E4  B0D8               	btfsc	status,0,c
  3332  0012E6  EF77  F009         	goto	u4281
  3333  0012EA  EF79  F009         	goto	u4280
  3334  0012EE                     u4281:
  3335  0012EE  EF38  F009         	goto	l3523
  3336  0012F2                     u4280:
  3337  0012F2                     
  3338                           ; BSR set to: 0
  3339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
  3340  0012F2  078A               	decf	efgtoa@i& (0+255),f,b
  3341  0012F4  A0D8               	btfss	status,0,c
  3342  0012F6  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3343  0012F8                     
  3344                           ; BSR set to: 0
  3345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
  3346  0012F8  517A               	movf	efgtoa@sign& (0+255),w,b
  3347  0012FA  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3348  0012FC  A4D8               	btfss	status,2,c
  3349  0012FE  EF83  F009         	goto	u4291
  3350  001302  EF85  F009         	goto	u4290
  3351  001306                     u4291:
  3352  001306  EF8B  F009         	goto	l3543
  3353  00130A                     u4290:
  3354  00130A                     
  3355                           ; BSR set to: 0
  3356  00130A  0E00               	movlw	0
  3357  00130C  6F6B               	movwf	(_efgtoa$291+1)& (0+255),b
  3358  00130E  0E2B               	movlw	43
  3359  001310  6F6A               	movwf	_efgtoa$291& (0+255),b
  3360  001312  EF8F  F009         	goto	l3545
  3361  001316                     l3543:
  3362                           
  3363                           ; BSR set to: 0
  3364  001316  0E00               	movlw	0
  3365  001318  6F6B               	movwf	(_efgtoa$291+1)& (0+255),b
  3366  00131A  0E2D               	movlw	45
  3367  00131C  6F6A               	movwf	_efgtoa$291& (0+255),b
  3368  00131E                     l3545:
  3369                           
  3370                           ; BSR set to: 0
  3371  00131E  0E00               	movlw	low _dbuf
  3372  001320  258A               	addwf	efgtoa@i& (0+255),w,b
  3373  001322  6ED9               	movwf	fsr2l,c
  3374  001324  0E01               	movlw	high _dbuf
  3375  001326  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3376  001328  6EDA               	movwf	fsr2h,c
  3377  00132A  C06A  FFDF         	movff	_efgtoa$291,indf2
  3378  00132E                     
  3379                           ; BSR set to: 0
  3380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
  3381  00132E  077F               	decf	efgtoa@w& (0+255),f,b
  3382  001330  A0D8               	btfss	status,0,c
  3383  001332  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3384  001334                     
  3385                           ; BSR set to: 0
  3386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3387  001334  078A               	decf	efgtoa@i& (0+255),f,b
  3388  001336  A0D8               	btfss	status,0,c
  3389  001338  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3390  00133A                     
  3391                           ; BSR set to: 0
  3392  00133A  0EBF               	movlw	191
  3393  00133C  6E35               	movwf	??_efgtoa^0,c
  3394  00133E  0EFF               	movlw	255
  3395  001340  6E36               	movwf	(??_efgtoa+1)^0,c
  3396  001342  5034               	movf	efgtoa@c^0,w,c
  3397  001344  6E37               	movwf	(??_efgtoa+2)^0,c
  3398  001346  6A38               	clrf	(??_efgtoa+3)^0,c
  3399  001348  5035               	movf	??_efgtoa^0,w,c
  3400  00134A  2637               	addwf	(??_efgtoa+2)^0,f,c
  3401  00134C  5036               	movf	(??_efgtoa+1)^0,w,c
  3402  00134E  2238               	addwfc	(??_efgtoa+3)^0,f,c
  3403  001350  5038               	movf	(??_efgtoa+3)^0,w,c
  3404  001352  E10A               	bnz	u4300
  3405  001354  0E1A               	movlw	26
  3406  001356  5C37               	subwf	(??_efgtoa+2)^0,w,c
  3407  001358  A0D8               	btfss	status,0,c
  3408  00135A  EFB1  F009         	goto	u4301
  3409  00135E  EFB4  F009         	goto	u4300
  3410  001362                     u4301:
  3411  001362  0E01               	movlw	1
  3412  001364  EFB5  F009         	goto	u4310
  3413  001368                     u4300:
  3414  001368  0E00               	movlw	0
  3415  00136A                     u4310:
  3416  00136A  6F6E               	movwf	_efgtoa$293& (0+255),b
  3417  00136C  6B6F               	clrf	(_efgtoa$293+1)& (0+255),b
  3418  00136E                     
  3419                           ; BSR set to: 0
  3420  00136E  516E               	movf	_efgtoa$293& (0+255),w,b
  3421  001370  116F               	iorwf	(_efgtoa$293+1)& (0+255),w,b
  3422  001372  A4D8               	btfss	status,2,c
  3423  001374  EFBE  F009         	goto	u4321
  3424  001378  EFC0  F009         	goto	u4320
  3425  00137C                     u4321:
  3426  00137C  EFC6  F009         	goto	l3559
  3427  001380                     u4320:
  3428  001380                     
  3429                           ; BSR set to: 0
  3430  001380  0E00               	movlw	0
  3431  001382  6F6D               	movwf	(_efgtoa$292+1)& (0+255),b
  3432  001384  0E65               	movlw	101
  3433  001386  6F6C               	movwf	_efgtoa$292& (0+255),b
  3434  001388  EFCA  F009         	goto	l3561
  3435  00138C                     l3559:
  3436                           
  3437                           ; BSR set to: 0
  3438  00138C  0E00               	movlw	0
  3439  00138E  6F6D               	movwf	(_efgtoa$292+1)& (0+255),b
  3440  001390  0E45               	movlw	69
  3441  001392  6F6C               	movwf	_efgtoa$292& (0+255),b
  3442  001394                     l3561:
  3443                           
  3444                           ; BSR set to: 0
  3445  001394  0E00               	movlw	low _dbuf
  3446  001396  258A               	addwf	efgtoa@i& (0+255),w,b
  3447  001398  6ED9               	movwf	fsr2l,c
  3448  00139A  0E01               	movlw	high _dbuf
  3449  00139C  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3450  00139E  6EDA               	movwf	fsr2h,c
  3451  0013A0  C06C  FFDF         	movff	_efgtoa$292,indf2
  3452  0013A4                     
  3453                           ; BSR set to: 0
  3454                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
  3455  0013A4  077F               	decf	efgtoa@w& (0+255),f,b
  3456  0013A6  A0D8               	btfss	status,0,c
  3457  0013A8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3458  0013AA                     
  3459                           ; BSR set to: 0
  3460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  3461  0013AA  0E00               	movlw	low _dbuf
  3462  0013AC  2592               	addwf	efgtoa@n& (0+255),w,b
  3463  0013AE  6E01               	movwf	strcpy@dest^0,c
  3464  0013B0  0E01               	movlw	high _dbuf
  3465  0013B2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3466  0013B4  6E02               	movwf	(strcpy@dest+1)^0,c
  3467  0013B6  0E00               	movlw	low _dbuf
  3468  0013B8  258A               	addwf	efgtoa@i& (0+255),w,b
  3469  0013BA  6E03               	movwf	strcpy@src^0,c
  3470  0013BC  0E01               	movlw	high _dbuf
  3471  0013BE  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3472  0013C0  6E04               	movwf	(strcpy@src+1)^0,c
  3473  0013C2  EC4E  F018         	call	_strcpy	;wreg free
  3474  0013C6  EFC0  F004         	goto	l3317
  3475  0013CA                     l162:
  3476  0013CA  0012               	return		;funcret
  3477  0013CC                     __end_of_efgtoa:
  3478                           	opt callstack 0
  3479                           
  3480 ;; *************** function _tolower *****************
  3481 ;; Defined at:
  3482 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;  c               2    6[COMRAM] int 
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  2    6[COMRAM] int 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3496 ;;      Params:         2       0       0       0       0       0       0       0       0
  3497 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3498 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3499 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3500 ;;Total ram usage:        8 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    1
  3503 ;; This function calls:
  3504 ;;		_isupper
  3505 ;; This function is called by:
  3506 ;;		_efgtoa
  3507 ;;		_vfpfcnvrt
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           	psect	text6
  3512  00303C                     __ptext6:
  3513                           	opt callstack 0
  3514  00303C                     _tolower:
  3515                           	opt callstack 26
  3516  00303C  0EBF               	movlw	191
  3517  00303E  6E09               	movwf	??_tolower^0,c
  3518  003040  0EFF               	movlw	255
  3519  003042  6E0A               	movwf	(??_tolower+1)^0,c
  3520  003044  C007  F00B         	movff	tolower@c,??_tolower+2
  3521  003048  C008  F00C         	movff	tolower@c+1,??_tolower+3
  3522  00304C  5009               	movf	??_tolower^0,w,c
  3523  00304E  260B               	addwf	(??_tolower+2)^0,f,c
  3524  003050  500A               	movf	(??_tolower+1)^0,w,c
  3525  003052  220C               	addwfc	(??_tolower+3)^0,f,c
  3526  003054  500C               	movf	(??_tolower+3)^0,w,c
  3527  003056  E10A               	bnz	u2920
  3528  003058  0E1A               	movlw	26
  3529  00305A  5C0B               	subwf	(??_tolower+2)^0,w,c
  3530  00305C  A0D8               	btfss	status,0,c
  3531  00305E  EF33  F018         	goto	u2921
  3532  003062  EF36  F018         	goto	u2920
  3533  003066                     u2921:
  3534  003066  0E01               	movlw	1
  3535  003068  EF37  F018         	goto	u2930
  3536  00306C                     u2920:
  3537  00306C  0E00               	movlw	0
  3538  00306E                     u2930:
  3539  00306E  6E0D               	movwf	_tolower$898^0,c
  3540  003070  6A0E               	clrf	(_tolower$898+1)^0,c
  3541  003072  500D               	movf	_tolower$898^0,w,c
  3542  003074  100E               	iorwf	(_tolower$898+1)^0,w,c
  3543  003076  B4D8               	btfsc	status,2,c
  3544  003078  EF40  F018         	goto	u2941
  3545  00307C  EF42  F018         	goto	u2940
  3546  003080                     u2941:
  3547  003080  EF49  F018         	goto	l1071
  3548  003084                     u2940:
  3549  003084  0E20               	movlw	32
  3550  003086  1007               	iorwf	tolower@c^0,w,c
  3551  003088  6E07               	movwf	?_tolower^0,c
  3552  00308A  5008               	movf	(tolower@c+1)^0,w,c
  3553  00308C  6E08               	movwf	(?_tolower+1)^0,c
  3554  00308E  EF4D  F018         	goto	l1076
  3555  003092                     l1071:
  3556  003092  C007  F007         	movff	tolower@c,?_tolower
  3557  003096  C008  F008         	movff	tolower@c+1,?_tolower+1
  3558  00309A                     l1076:
  3559  00309A  0012               	return		;funcret
  3560  00309C                     __end_of_tolower:
  3561                           	opt callstack 0
  3562                           
  3563 ;; *************** function _isupper *****************
  3564 ;; Defined at:
  3565 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  c               2    0[COMRAM] int 
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;		None
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  2    0[COMRAM] int 
  3572 ;; Registers used:
  3573 ;;		wreg, status,2, status,0
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3579 ;;      Params:         2       0       0       0       0       0       0       0       0
  3580 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3581 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3582 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3583 ;;Total ram usage:        6 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; This function calls:
  3586 ;;		Nothing
  3587 ;; This function is called by:
  3588 ;;		_efgtoa
  3589 ;;		_vfpfcnvrt
  3590 ;;		_tolower
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           	psect	text7
  3595  003350                     __ptext7:
  3596                           	opt callstack 0
  3597  003350                     _isupper:
  3598                           	opt callstack 26
  3599  003350  0EBF               	movlw	191
  3600  003352  6E03               	movwf	??_isupper^0,c
  3601  003354  0EFF               	movlw	255
  3602  003356  6E04               	movwf	(??_isupper+1)^0,c
  3603  003358  C001  F005         	movff	isupper@c,??_isupper+2
  3604  00335C  C002  F006         	movff	isupper@c+1,??_isupper+3
  3605  003360  5003               	movf	??_isupper^0,w,c
  3606  003362  2605               	addwf	(??_isupper+2)^0,f,c
  3607  003364  5004               	movf	(??_isupper+1)^0,w,c
  3608  003366  2206               	addwfc	(??_isupper+3)^0,f,c
  3609  003368  5006               	movf	(??_isupper+3)^0,w,c
  3610  00336A  E10A               	bnz	u2380
  3611  00336C  0E1A               	movlw	26
  3612  00336E  5C05               	subwf	(??_isupper+2)^0,w,c
  3613  003370  A0D8               	btfss	status,0,c
  3614  003372  EFBD  F019         	goto	u2381
  3615  003376  EFC0  F019         	goto	u2380
  3616  00337A                     u2381:
  3617  00337A  0E01               	movlw	1
  3618  00337C  EFC1  F019         	goto	u2390
  3619  003380                     u2380:
  3620  003380  0E00               	movlw	0
  3621  003382                     u2390:
  3622  003382  6E01               	movwf	?_isupper^0,c
  3623  003384  6A02               	clrf	(?_isupper+1)^0,c
  3624  003386  0012               	return		;funcret
  3625  003388                     __end_of_isupper:
  3626                           	opt callstack 0
  3627                           
  3628 ;; *************** function _strcpy *****************
  3629 ;; Defined at:
  3630 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3633 ;;		 -> dbuf(80), 
  3634 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3635 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  3636 ;;		 -> dbuf(80), 
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;  d               2    8[COMRAM] PTR unsigned char 
  3639 ;;		 -> dbuf(80), 
  3640 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3641 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  3642 ;;		 -> dbuf(80), 
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  2    0[COMRAM] PTR unsigned char 
  3645 ;; Registers used:
  3646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3652 ;;      Params:         4       0       0       0       0       0       0       0       0
  3653 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3654 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3655 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3656 ;;Total ram usage:       10 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; This function calls:
  3659 ;;		Nothing
  3660 ;; This function is called by:
  3661 ;;		_efgtoa
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           	psect	text8
  3666  00309C                     __ptext8:
  3667                           	opt callstack 0
  3668  00309C                     _strcpy:
  3669                           	opt callstack 26
  3670  00309C  C003  F007         	movff	strcpy@src,strcpy@s
  3671  0030A0  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  3672  0030A4  C001  F009         	movff	strcpy@dest,strcpy@d
  3673  0030A8  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3674  0030AC                     l2747:
  3675  0030AC  5007               	movf	strcpy@s^0,w,c
  3676  0030AE  6E05               	movwf	??_strcpy^0,c
  3677  0030B0  5008               	movf	(strcpy@s+1)^0,w,c
  3678  0030B2  6E06               	movwf	(??_strcpy+1)^0,c
  3679  0030B4  4A07               	infsnz	strcpy@s^0,f,c
  3680  0030B6  2A08               	incf	(strcpy@s+1)^0,f,c
  3681  0030B8  C005  FFF6         	movff	??_strcpy,tblptrl
  3682  0030BC  C006  FFF7         	movff	??_strcpy+1,tblptrh
  3683  0030C0  6AF8               	clrf	tblptru,c
  3684  0030C2  C009  FFD9         	movff	strcpy@d,fsr2l
  3685  0030C6  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3686  0030CA  4A09               	infsnz	strcpy@d^0,f,c
  3687  0030CC  2A0A               	incf	(strcpy@d+1)^0,f,c
  3688  0030CE  0E07               	movlw	(high __ramtop+-1)
  3689  0030D0  64F7               	cpfsgt	tblptrh,c
  3690  0030D2  D003               	bra	u2907
  3691  0030D4  0008               	tblrd		*
  3692  0030D6  50F5               	movf	tablat,w,c
  3693  0030D8  D005               	bra	u2900
  3694  0030DA                     u2907:
  3695  0030DA  CFF6 FFE1          	movff	tblptrl,fsr1l
  3696  0030DE  CFF7 FFE2          	movff	tblptrh,fsr1h
  3697  0030E2  50E7               	movf	indf1,w,c
  3698  0030E4                     u2900:
  3699  0030E4  6EDF               	movwf	indf2,c
  3700  0030E6  50DF               	movf	indf2,w,c
  3701  0030E8  A4D8               	btfss	status,2,c
  3702  0030EA  EF79  F018         	goto	u2911
  3703  0030EE  EF7B  F018         	goto	u2910
  3704  0030F2                     u2911:
  3705  0030F2  EF56  F018         	goto	l2747
  3706  0030F6                     u2910:
  3707  0030F6  0012               	return		;funcret
  3708  0030F8                     __end_of_strcpy:
  3709                           	opt callstack 0
  3710                           
  3711 ;; *************** function _pad *****************
  3712 ;; Defined at:
  3713 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3716 ;;		 -> sprintf@f(6), 
  3717 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3718 ;;		 -> dbuf(80), 
  3719 ;;  p               2   20[COMRAM] int 
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;  w               2   25[COMRAM] int 
  3722 ;;  i               2   23[COMRAM] int 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  2   16[COMRAM] int 
  3725 ;; Registers used:
  3726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3732 ;;      Params:         6       0       0       0       0       0       0       0       0
  3733 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3734 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3735 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3736 ;;Total ram usage:       11 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    3
  3739 ;; This function calls:
  3740 ;;		_fputc
  3741 ;;		_fputs
  3742 ;;		_strlen
  3743 ;; This function is called by:
  3744 ;;		_efgtoa
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           	psect	text9
  3749  002DBE                     __ptext9:
  3750                           	opt callstack 0
  3751  002DBE                     _pad:
  3752                           	opt callstack 23
  3753  002DBE                     
  3754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  3755  002DBE  A05E               	btfss	_flags^0,0,c
  3756  002DC0  EFE4  F016         	goto	u2791
  3757  002DC4  EFE6  F016         	goto	u2790
  3758  002DC8                     u2791:
  3759  002DC8  EFF0  F016         	goto	l2705
  3760  002DCC                     u2790:
  3761  002DCC                     
  3762                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  3763  002DCC  C013  F00A         	movff	pad@buf,fputs@s
  3764  002DD0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3765  002DD4  C011  F00C         	movff	pad@fp,fputs@fp
  3766  002DD8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3767  002DDC  EC66  F019         	call	_fputs	;wreg free
  3768  002DE0                     l2705:
  3769                           
  3770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  3771  002DE0  BE16               	btfsc	(pad@p+1)^0,7,c
  3772  002DE2  EFF5  F016         	goto	u2801
  3773  002DE6  EFF7  F016         	goto	u2800
  3774  002DEA                     u2801:
  3775  002DEA  EFFD  F016         	goto	l2709
  3776  002DEE                     u2800:
  3777  002DEE  C015  F01A         	movff	pad@p,pad@w
  3778  002DF2  C016  F01B         	movff	pad@p+1,pad@w+1
  3779  002DF6  EF01  F017         	goto	l139
  3780  002DFA                     l2709:
  3781  002DFA  0E00               	movlw	0
  3782  002DFC  6E1B               	movwf	(pad@w+1)^0,c
  3783  002DFE  0E00               	movlw	0
  3784  002E00  6E1A               	movwf	pad@w^0,c
  3785  002E02                     l139:
  3786                           
  3787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  3788  002E02  0E00               	movlw	0
  3789  002E04  6E19               	movwf	(pad@i+1)^0,c
  3790  002E06  0E00               	movlw	0
  3791  002E08  6E18               	movwf	pad@i^0,c
  3792                           
  3793                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  3794  002E0A  EF13  F017         	goto	l2715
  3795  002E0E                     l2711:
  3796                           
  3797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  3798  002E0E  0E00               	movlw	0
  3799  002E10  6E02               	movwf	(fputc@c+1)^0,c
  3800  002E12  0E20               	movlw	32
  3801  002E14  6E01               	movwf	fputc@c^0,c
  3802  002E16  C011  F003         	movff	pad@fp,fputc@fp
  3803  002E1A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3804  002E1E  EC18  F016         	call	_fputc	;wreg free
  3805  002E22                     
  3806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
  3807  002E22  4A18               	infsnz	pad@i^0,f,c
  3808  002E24  2A19               	incf	(pad@i+1)^0,f,c
  3809  002E26                     l2715:
  3810                           
  3811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  3812  002E26  501A               	movf	pad@w^0,w,c
  3813  002E28  5C18               	subwf	pad@i^0,w,c
  3814  002E2A  5019               	movf	(pad@i+1)^0,w,c
  3815  002E2C  0A80               	xorlw	128
  3816  002E2E  6E17               	movwf	??_pad^0,c
  3817  002E30  501B               	movf	(pad@w+1)^0,w,c
  3818  002E32  0A80               	xorlw	128
  3819  002E34  5817               	subwfb	??_pad^0,w,c
  3820  002E36  A0D8               	btfss	status,0,c
  3821  002E38  EF20  F017         	goto	u2811
  3822  002E3C  EF22  F017         	goto	u2810
  3823  002E40                     u2811:
  3824  002E40  EF07  F017         	goto	l2711
  3825  002E44                     u2810:
  3826  002E44                     
  3827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  3828  002E44  B05E               	btfsc	_flags^0,0,c
  3829  002E46  EF27  F017         	goto	u2821
  3830  002E4A  EF29  F017         	goto	u2820
  3831  002E4E                     u2821:
  3832  002E4E  EF33  F017         	goto	l2719
  3833  002E52                     u2820:
  3834  002E52                     
  3835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  3836  002E52  C013  F00A         	movff	pad@buf,fputs@s
  3837  002E56  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3838  002E5A  C011  F00C         	movff	pad@fp,fputs@fp
  3839  002E5E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3840  002E62  EC66  F019         	call	_fputs	;wreg free
  3841  002E66                     l2719:
  3842                           
  3843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  3844  002E66  C013  F001         	movff	pad@buf,strlen@s
  3845  002E6A  C014  F002         	movff	pad@buf+1,strlen@s+1
  3846  002E6E  ECFC  F019         	call	_strlen	;wreg free
  3847  002E72  501A               	movf	pad@w^0,w,c
  3848  002E74  2401               	addwf	?_strlen^0,w,c
  3849  002E76  6E11               	movwf	?_pad^0,c
  3850  002E78  501B               	movf	(pad@w+1)^0,w,c
  3851  002E7A  2002               	addwfc	(?_strlen+1)^0,w,c
  3852  002E7C  6E12               	movwf	(?_pad+1)^0,c
  3853  002E7E  0012               	return		;funcret
  3854  002E80                     __end_of_pad:
  3855                           	opt callstack 0
  3856                           
  3857 ;; *************** function _strlen *****************
  3858 ;; Defined at:
  3859 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3862 ;;		 -> dbuf(80), 
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3865 ;;		 -> dbuf(80), 
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  2    0[COMRAM] unsigned int 
  3868 ;; Registers used:
  3869 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3875 ;;      Params:         2       0       0       0       0       0       0       0       0
  3876 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3877 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3878 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3879 ;;Total ram usage:        4 bytes
  3880 ;; Hardware stack levels used:    1
  3881 ;; This function calls:
  3882 ;;		Nothing
  3883 ;; This function is called by:
  3884 ;;		_pad
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text10
  3889  0033F8                     __ptext10:
  3890                           	opt callstack 0
  3891  0033F8                     _strlen:
  3892                           	opt callstack 25
  3893  0033F8  C001  F003         	movff	strlen@s,strlen@a
  3894  0033FC  C002  F004         	movff	strlen@s+1,strlen@a+1
  3895  003400  EF04  F01A         	goto	l2489
  3896  003404                     l2487:
  3897  003404  4A01               	infsnz	strlen@s^0,f,c
  3898  003406  2A02               	incf	(strlen@s+1)^0,f,c
  3899  003408                     l2489:
  3900  003408  C001  FFD9         	movff	strlen@s,fsr2l
  3901  00340C  C002  FFDA         	movff	strlen@s+1,fsr2h
  3902  003410  50DF               	movf	indf2,w,c
  3903  003412  A4D8               	btfss	status,2,c
  3904  003414  EF0E  F01A         	goto	u2371
  3905  003418  EF10  F01A         	goto	u2370
  3906  00341C                     u2371:
  3907  00341C  EF02  F01A         	goto	l2487
  3908  003420                     u2370:
  3909  003420  5003               	movf	strlen@a^0,w,c
  3910  003422  5C01               	subwf	strlen@s^0,w,c
  3911  003424  6E01               	movwf	?_strlen^0,c
  3912  003426  5004               	movf	(strlen@a+1)^0,w,c
  3913  003428  5802               	subwfb	(strlen@s+1)^0,w,c
  3914  00342A  6E02               	movwf	(?_strlen+1)^0,c
  3915  00342C  0012               	return		;funcret
  3916  00342E                     __end_of_strlen:
  3917                           	opt callstack 0
  3918                           
  3919 ;; *************** function _fputs *****************
  3920 ;; Defined at:
  3921 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3924 ;;		 -> dbuf(80), 
  3925 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3926 ;;		 -> sprintf@f(6), 
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;  i               2   14[COMRAM] int 
  3929 ;;  c               1   13[COMRAM] unsigned char 
  3930 ;; Return value:  Size  Location     Type
  3931 ;;                  2    9[COMRAM] int 
  3932 ;; Registers used:
  3933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3934 ;; Tracked objects:
  3935 ;;		On entry : 0/0
  3936 ;;		On exit  : 0/0
  3937 ;;		Unchanged: 0/0
  3938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3939 ;;      Params:         4       0       0       0       0       0       0       0       0
  3940 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3941 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3942 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3943 ;;Total ram usage:        7 bytes
  3944 ;; Hardware stack levels used:    1
  3945 ;; Hardware stack levels required when called:    2
  3946 ;; This function calls:
  3947 ;;		_fputc
  3948 ;; This function is called by:
  3949 ;;		_pad
  3950 ;; This function uses a non-reentrant model
  3951 ;;
  3952                           
  3953                           	psect	text11
  3954  0032CC                     __ptext11:
  3955                           	opt callstack 0
  3956  0032CC                     _fputs:
  3957                           	opt callstack 23
  3958  0032CC  0E00               	movlw	0
  3959  0032CE  6E10               	movwf	(fputs@i+1)^0,c
  3960  0032D0  0E00               	movlw	0
  3961  0032D2  6E0F               	movwf	fputs@i^0,c
  3962  0032D4  EF77  F019         	goto	l2483
  3963  0032D8                     l2479:
  3964  0032D8  C00E  F001         	movff	fputs@c,fputc@c
  3965  0032DC  6A02               	clrf	(fputc@c+1)^0,c
  3966  0032DE  C00C  F003         	movff	fputs@fp,fputc@fp
  3967  0032E2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3968  0032E6  EC18  F016         	call	_fputc	;wreg free
  3969  0032EA  4A0F               	infsnz	fputs@i^0,f,c
  3970  0032EC  2A10               	incf	(fputs@i+1)^0,f,c
  3971  0032EE                     l2483:
  3972  0032EE  500F               	movf	fputs@i^0,w,c
  3973  0032F0  240A               	addwf	fputs@s^0,w,c
  3974  0032F2  6ED9               	movwf	fsr2l,c
  3975  0032F4  5010               	movf	(fputs@i+1)^0,w,c
  3976  0032F6  200B               	addwfc	(fputs@s+1)^0,w,c
  3977  0032F8  6EDA               	movwf	fsr2h,c
  3978  0032FA  50DF               	movf	indf2,w,c
  3979  0032FC  6E0E               	movwf	fputs@c^0,c
  3980  0032FE  500E               	movf	fputs@c^0,w,c
  3981  003300  A4D8               	btfss	status,2,c
  3982  003302  EF85  F019         	goto	u2361
  3983  003306  EF87  F019         	goto	u2360
  3984  00330A                     u2361:
  3985  00330A  EF6C  F019         	goto	l2479
  3986  00330E                     u2360:
  3987  00330E  0012               	return		;funcret
  3988  003310                     __end_of_fputs:
  3989                           	opt callstack 0
  3990                           
  3991 ;; *************** function _fputc *****************
  3992 ;; Defined at:
  3993 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;  c               2    0[COMRAM] int 
  3996 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3997 ;;		 -> sprintf@f(6), 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;		None
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  2    0[COMRAM] int 
  4002 ;; Registers used:
  4003 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4009 ;;      Params:         4       0       0       0       0       0       0       0       0
  4010 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4011 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4012 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4013 ;;Total ram usage:        9 bytes
  4014 ;; Hardware stack levels used:    1
  4015 ;; Hardware stack levels required when called:    1
  4016 ;; This function calls:
  4017 ;;		_putch
  4018 ;; This function is called by:
  4019 ;;		_pad
  4020 ;;		_vfpfcnvrt
  4021 ;;		_fputs
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           	psect	text12
  4026  002C30                     __ptext12:
  4027                           	opt callstack 0
  4028  002C30                     _fputc:
  4029                           	opt callstack 26
  4030  002C30  5003               	movf	fputc@fp^0,w,c
  4031  002C32  1004               	iorwf	(fputc@fp+1)^0,w,c
  4032  002C34  B4D8               	btfsc	status,2,c
  4033  002C36  EF1F  F016         	goto	u2321
  4034  002C3A  EF21  F016         	goto	u2320
  4035  002C3E                     u2321:
  4036  002C3E  EF2A  F016         	goto	l2467
  4037  002C42                     u2320:
  4038  002C42  5003               	movf	fputc@fp^0,w,c
  4039  002C44  1004               	iorwf	(fputc@fp+1)^0,w,c
  4040  002C46  A4D8               	btfss	status,2,c
  4041  002C48  EF28  F016         	goto	u2331
  4042  002C4C  EF2A  F016         	goto	u2330
  4043  002C50                     u2331:
  4044  002C50  EF2F  F016         	goto	l2469
  4045  002C54                     u2330:
  4046  002C54                     l2467:
  4047  002C54  5001               	movf	fputc@c^0,w,c
  4048  002C56  EC9E  F01A         	call	_putch
  4049  002C5A  EF7C  F016         	goto	l1027
  4050  002C5E                     l2469:
  4051  002C5E  EE20 F004          	lfsr	2,4
  4052  002C62  5003               	movf	fputc@fp^0,w,c
  4053  002C64  26D9               	addwf	fsr2l,f,c
  4054  002C66  5004               	movf	(fputc@fp+1)^0,w,c
  4055  002C68  22DA               	addwfc	fsr2h,f,c
  4056  002C6A  50DE               	movf	postinc2,w,c
  4057  002C6C  10DE               	iorwf	postinc2,w,c
  4058  002C6E  B4D8               	btfsc	status,2,c
  4059  002C70  EF3C  F016         	goto	u2341
  4060  002C74  EF3E  F016         	goto	u2340
  4061  002C78                     u2341:
  4062  002C78  EF59  F016         	goto	l2473
  4063  002C7C                     u2340:
  4064  002C7C  EE20 F004          	lfsr	2,4
  4065  002C80  5003               	movf	fputc@fp^0,w,c
  4066  002C82  26D9               	addwf	fsr2l,f,c
  4067  002C84  5004               	movf	(fputc@fp+1)^0,w,c
  4068  002C86  22DA               	addwfc	fsr2h,f,c
  4069  002C88  EE10 F002          	lfsr	1,2
  4070  002C8C  5003               	movf	fputc@fp^0,w,c
  4071  002C8E  26E1               	addwf	fsr1l,f,c
  4072  002C90  5004               	movf	(fputc@fp+1)^0,w,c
  4073  002C92  22E2               	addwfc	fsr1h,f,c
  4074  002C94  50DE               	movf	postinc2,w,c
  4075  002C96  5CE6               	subwf	postinc1,w,c
  4076  002C98  50E6               	movf	postinc1,w,c
  4077  002C9A  0A80               	xorlw	128
  4078  002C9C  6E09               	movwf	(??_fputc+4)^0,c
  4079  002C9E  50DE               	movf	postinc2,w,c
  4080  002CA0  0A80               	xorlw	128
  4081  002CA2  5809               	subwfb	(??_fputc+4)^0,w,c
  4082  002CA4  B0D8               	btfsc	status,0,c
  4083  002CA6  EF57  F016         	goto	u2351
  4084  002CAA  EF59  F016         	goto	u2350
  4085  002CAE                     u2351:
  4086  002CAE  EF7C  F016         	goto	l1027
  4087  002CB2                     u2350:
  4088  002CB2                     l2473:
  4089  002CB2  EE20 F002          	lfsr	2,2
  4090  002CB6  5003               	movf	fputc@fp^0,w,c
  4091  002CB8  26D9               	addwf	fsr2l,f,c
  4092  002CBA  5004               	movf	(fputc@fp+1)^0,w,c
  4093  002CBC  22DA               	addwfc	fsr2h,f,c
  4094  002CBE  CFDE F005          	movff	postinc2,??_fputc
  4095  002CC2  CFDD F006          	movff	postdec2,??_fputc+1
  4096  002CC6  C003  FFD9         	movff	fputc@fp,fsr2l
  4097  002CCA  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4098  002CCE  CFDE F007          	movff	postinc2,??_fputc+2
  4099  002CD2  CFDD F008          	movff	postdec2,??_fputc+3
  4100  002CD6  5005               	movf	??_fputc^0,w,c
  4101  002CD8  2407               	addwf	(??_fputc+2)^0,w,c
  4102  002CDA  6ED9               	movwf	fsr2l,c
  4103  002CDC  5006               	movf	(??_fputc+1)^0,w,c
  4104  002CDE  2008               	addwfc	(??_fputc+3)^0,w,c
  4105  002CE0  6EDA               	movwf	fsr2h,c
  4106  002CE2  C001  FFDF         	movff	fputc@c,indf2
  4107  002CE6  EE20 F002          	lfsr	2,2
  4108  002CEA  5003               	movf	fputc@fp^0,w,c
  4109  002CEC  26D9               	addwf	fsr2l,f,c
  4110  002CEE  5004               	movf	(fputc@fp+1)^0,w,c
  4111  002CF0  22DA               	addwfc	fsr2h,f,c
  4112  002CF2  2ADE               	incf	postinc2,f,c
  4113  002CF4  0E00               	movlw	0
  4114  002CF6  22DD               	addwfc	postdec2,f,c
  4115  002CF8                     l1027:
  4116  002CF8  0012               	return		;funcret
  4117  002CFA                     __end_of_fputc:
  4118                           	opt callstack 0
  4119                           
  4120 ;; *************** function _putch *****************
  4121 ;; Defined at:
  4122 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/putch.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  c               1    wreg     unsigned char 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;  c               1    0[COMRAM] unsigned char 
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1    wreg      void 
  4129 ;; Registers used:
  4130 ;;		wreg
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4136 ;;      Params:         0       0       0       0       0       0       0       0       0
  4137 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4138 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4139 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4140 ;;Total ram usage:        0 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; This function calls:
  4143 ;;		Nothing
  4144 ;; This function is called by:
  4145 ;;		_fputc
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149                           	psect	text13
  4150  00353C                     __ptext13:
  4151                           	opt callstack 0
  4152  00353C                     _putch:
  4153                           	opt callstack 26
  4154  00353C  0012               	return		;funcret
  4155  00353E                     __end_of_putch:
  4156                           	opt callstack 0
  4157                           
  4158 ;; *************** function _floorf *****************
  4159 ;; Defined at:
  4160 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  x               4   25[COMRAM] float 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;  u               4   41[COMRAM] struct .
  4165 ;;  m               4   35[COMRAM] unsigned long 
  4166 ;;  e               2   39[COMRAM] int 
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  4   25[COMRAM] float 
  4169 ;; Registers used:
  4170 ;;		wreg, status,2, status,0
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4176 ;;      Params:         4       0       0       0       0       0       0       0       0
  4177 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4178 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4179 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4180 ;;Total ram usage:       20 bytes
  4181 ;; Hardware stack levels used:    1
  4182 ;; This function calls:
  4183 ;;		Nothing
  4184 ;; This function is called by:
  4185 ;;		_efgtoa
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text14
  4190  0024B0                     __ptext14:
  4191                           	opt callstack 0
  4192  0024B0                     _floorf:
  4193                           	opt callstack 26
  4194  0024B0  C0AE  F02A         	movff	floorf@F524,floorf@u
  4195  0024B4  C0AF  F02B         	movff	floorf@F524+1,floorf@u+1
  4196  0024B8  C0B0  F02C         	movff	floorf@F524+2,floorf@u+2
  4197  0024BC  C0B1  F02D         	movff	floorf@F524+3,floorf@u+3
  4198  0024C0  C01A  F02A         	movff	floorf@x,floorf@u
  4199  0024C4  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4200  0024C8  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4201  0024CC  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4202  0024D0  0E81               	movlw	129
  4203  0024D2  6E1E               	movwf	??_floorf^0,c
  4204  0024D4  0EFF               	movlw	255
  4205  0024D6  6E1F               	movwf	(??_floorf+1)^0,c
  4206  0024D8  C02A  F020         	movff	floorf@u,??_floorf+2
  4207  0024DC  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4208  0024E0  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4209  0024E4  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4210  0024E8  0E18               	movlw	24
  4211  0024EA  EF7C  F012         	goto	u2950
  4212  0024EE                     u2955:
  4213  0024EE  90D8               	bcf	status,0,c
  4214  0024F0  3223               	rrcf	(??_floorf+5)^0,f,c
  4215  0024F2  3222               	rrcf	(??_floorf+4)^0,f,c
  4216  0024F4  3221               	rrcf	(??_floorf+3)^0,f,c
  4217  0024F6  3220               	rrcf	(??_floorf+2)^0,f,c
  4218  0024F8                     u2950:
  4219  0024F8  2EE8               	decfsz	wreg,f,c
  4220  0024FA  EF77  F012         	goto	u2955
  4221  0024FE  5020               	movf	(??_floorf+2)^0,w,c
  4222  002500  241E               	addwf	??_floorf^0,w,c
  4223  002502  6E28               	movwf	floorf@e^0,c
  4224  002504  0E00               	movlw	0
  4225  002506  201F               	addwfc	(??_floorf+1)^0,w,c
  4226  002508  6E29               	movwf	(floorf@e+1)^0,c
  4227  00250A  BE29               	btfsc	(floorf@e+1)^0,7,c
  4228  00250C  EF91  F012         	goto	u2961
  4229  002510  5029               	movf	(floorf@e+1)^0,w,c
  4230  002512  E109               	bnz	u2960
  4231  002514  0E17               	movlw	23
  4232  002516  5C28               	subwf	floorf@e^0,w,c
  4233  002518  A0D8               	btfss	status,0,c
  4234  00251A  EF91  F012         	goto	u2961
  4235  00251E  EF93  F012         	goto	u2960
  4236  002522                     u2961:
  4237  002522  EF9D  F012         	goto	l2765
  4238  002526                     u2960:
  4239  002526                     l2763:
  4240  002526  C01A  F01A         	movff	floorf@x,?_floorf
  4241  00252A  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4242  00252E  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4243  002532  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4244  002536  EF60  F013         	goto	l988
  4245  00253A                     l2765:
  4246  00253A  BE29               	btfsc	(floorf@e+1)^0,7,c
  4247  00253C  EFA2  F012         	goto	u2971
  4248  002540  EFA4  F012         	goto	u2970
  4249  002544                     u2971:
  4250  002544  EF14  F013         	goto	l2775
  4251  002548                     u2970:
  4252  002548  C028  F01E         	movff	floorf@e,??_floorf
  4253  00254C  0EFF               	movlw	255
  4254  00254E  6E1F               	movwf	(??_floorf+1)^0,c
  4255  002550  0EFF               	movlw	255
  4256  002552  6E20               	movwf	(??_floorf+2)^0,c
  4257  002554  0E7F               	movlw	127
  4258  002556  6E21               	movwf	(??_floorf+3)^0,c
  4259  002558  0E00               	movlw	0
  4260  00255A  6E22               	movwf	(??_floorf+4)^0,c
  4261  00255C                     u2985:
  4262  00255C  661E               	tstfsz	??_floorf^0,c
  4263  00255E  EFB3  F012         	goto	u2986
  4264  002562  EFBB  F012         	goto	u2987
  4265  002566                     u2986:
  4266  002566  3422               	rlcf	(??_floorf+4)^0,w,c
  4267  002568  3222               	rrcf	(??_floorf+4)^0,f,c
  4268  00256A  3221               	rrcf	(??_floorf+3)^0,f,c
  4269  00256C  3220               	rrcf	(??_floorf+2)^0,f,c
  4270  00256E  321F               	rrcf	(??_floorf+1)^0,f,c
  4271  002570  2E1E               	decfsz	??_floorf^0,f,c
  4272  002572  EFAE  F012         	goto	u2985
  4273  002576                     u2987:
  4274  002576  C01F  F024         	movff	??_floorf+1,floorf@m
  4275  00257A  C020  F025         	movff	??_floorf+2,floorf@m+1
  4276  00257E  C021  F026         	movff	??_floorf+3,floorf@m+2
  4277  002582  C022  F027         	movff	??_floorf+4,floorf@m+3
  4278  002586  5024               	movf	floorf@m^0,w,c
  4279  002588  142A               	andwf	floorf@u^0,w,c
  4280  00258A  6E1E               	movwf	??_floorf^0,c
  4281  00258C  5025               	movf	(floorf@m+1)^0,w,c
  4282  00258E  142B               	andwf	(floorf@u+1)^0,w,c
  4283  002590  6E1F               	movwf	(??_floorf+1)^0,c
  4284  002592  5026               	movf	(floorf@m+2)^0,w,c
  4285  002594  142C               	andwf	(floorf@u+2)^0,w,c
  4286  002596  6E20               	movwf	(??_floorf+2)^0,c
  4287  002598  5027               	movf	(floorf@m+3)^0,w,c
  4288  00259A  142D               	andwf	(floorf@u+3)^0,w,c
  4289  00259C  6E21               	movwf	(??_floorf+3)^0,c
  4290  00259E  501E               	movf	??_floorf^0,w,c
  4291  0025A0  101F               	iorwf	(??_floorf+1)^0,w,c
  4292  0025A2  1020               	iorwf	(??_floorf+2)^0,w,c
  4293  0025A4  1021               	iorwf	(??_floorf+3)^0,w,c
  4294  0025A6  A4D8               	btfss	status,2,c
  4295  0025A8  EFD8  F012         	goto	u2991
  4296  0025AC  EFDA  F012         	goto	u2990
  4297  0025B0                     u2991:
  4298  0025B0  EFDC  F012         	goto	l2771
  4299  0025B4                     u2990:
  4300  0025B4  EF93  F012         	goto	l2763
  4301  0025B8                     l2771:
  4302  0025B8  C02A  F01E         	movff	floorf@u,??_floorf
  4303  0025BC  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4304  0025C0  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4305  0025C4  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4306  0025C8  0E20               	movlw	32
  4307  0025CA  EFEC  F012         	goto	u3000
  4308  0025CE                     u3005:
  4309  0025CE  90D8               	bcf	status,0,c
  4310  0025D0  3221               	rrcf	(??_floorf+3)^0,f,c
  4311  0025D2  3220               	rrcf	(??_floorf+2)^0,f,c
  4312  0025D4  321F               	rrcf	(??_floorf+1)^0,f,c
  4313  0025D6  321E               	rrcf	??_floorf^0,f,c
  4314  0025D8                     u3000:
  4315  0025D8  2EE8               	decfsz	wreg,f,c
  4316  0025DA  EFE7  F012         	goto	u3005
  4317  0025DE  501E               	movf	??_floorf^0,w,c
  4318  0025E0  101F               	iorwf	(??_floorf+1)^0,w,c
  4319  0025E2  1020               	iorwf	(??_floorf+2)^0,w,c
  4320  0025E4  1021               	iorwf	(??_floorf+3)^0,w,c
  4321  0025E6  B4D8               	btfsc	status,2,c
  4322  0025E8  EFF8  F012         	goto	u3011
  4323  0025EC  EFFA  F012         	goto	u3010
  4324  0025F0                     u3011:
  4325  0025F0  EF02  F013         	goto	l991
  4326  0025F4                     u3010:
  4327  0025F4  5024               	movf	floorf@m^0,w,c
  4328  0025F6  262A               	addwf	floorf@u^0,f,c
  4329  0025F8  5025               	movf	(floorf@m+1)^0,w,c
  4330  0025FA  222B               	addwfc	(floorf@u+1)^0,f,c
  4331  0025FC  5026               	movf	(floorf@m+2)^0,w,c
  4332  0025FE  222C               	addwfc	(floorf@u+2)^0,f,c
  4333  002600  5027               	movf	(floorf@m+3)^0,w,c
  4334  002602  222D               	addwfc	(floorf@u+3)^0,f,c
  4335  002604                     l991:
  4336  002604  1C24               	comf	floorf@m^0,w,c
  4337  002606  6E1E               	movwf	??_floorf^0,c
  4338  002608  1C25               	comf	(floorf@m+1)^0,w,c
  4339  00260A  6E1F               	movwf	(??_floorf+1)^0,c
  4340  00260C  1C26               	comf	(floorf@m+2)^0,w,c
  4341  00260E  6E20               	movwf	(??_floorf+2)^0,c
  4342  002610  1C27               	comf	(floorf@m+3)^0,w,c
  4343  002612  6E21               	movwf	(??_floorf+3)^0,c
  4344  002614  501E               	movf	??_floorf^0,w,c
  4345  002616  162A               	andwf	floorf@u^0,f,c
  4346  002618  501F               	movf	(??_floorf+1)^0,w,c
  4347  00261A  162B               	andwf	(floorf@u+1)^0,f,c
  4348  00261C  5020               	movf	(??_floorf+2)^0,w,c
  4349  00261E  162C               	andwf	(floorf@u+2)^0,f,c
  4350  002620  5021               	movf	(??_floorf+3)^0,w,c
  4351  002622  162D               	andwf	(floorf@u+3)^0,f,c
  4352  002624  EF58  F013         	goto	l2783
  4353  002628                     l2775:
  4354  002628  C02A  F01E         	movff	floorf@u,??_floorf
  4355  00262C  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4356  002630  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4357  002634  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4358  002638  0E20               	movlw	32
  4359  00263A  EF24  F013         	goto	u3020
  4360  00263E                     u3025:
  4361  00263E  90D8               	bcf	status,0,c
  4362  002640  3221               	rrcf	(??_floorf+3)^0,f,c
  4363  002642  3220               	rrcf	(??_floorf+2)^0,f,c
  4364  002644  321F               	rrcf	(??_floorf+1)^0,f,c
  4365  002646  321E               	rrcf	??_floorf^0,f,c
  4366  002648                     u3020:
  4367  002648  2EE8               	decfsz	wreg,f,c
  4368  00264A  EF1F  F013         	goto	u3025
  4369  00264E  501E               	movf	??_floorf^0,w,c
  4370  002650  101F               	iorwf	(??_floorf+1)^0,w,c
  4371  002652  1020               	iorwf	(??_floorf+2)^0,w,c
  4372  002654  1021               	iorwf	(??_floorf+3)^0,w,c
  4373  002656  A4D8               	btfss	status,2,c
  4374  002658  EF30  F013         	goto	u3031
  4375  00265C  EF32  F013         	goto	u3030
  4376  002660                     u3031:
  4377  002660  EF3C  F013         	goto	l2779
  4378  002664                     u3030:
  4379  002664  0E00               	movlw	0
  4380  002666  6E2A               	movwf	floorf@u^0,c
  4381  002668  0E00               	movlw	0
  4382  00266A  6E2B               	movwf	(floorf@u+1)^0,c
  4383  00266C  0E00               	movlw	0
  4384  00266E  6E2C               	movwf	(floorf@u+2)^0,c
  4385  002670  0E00               	movlw	0
  4386  002672  6E2D               	movwf	(floorf@u+3)^0,c
  4387  002674  EF58  F013         	goto	l2783
  4388  002678                     l2779:
  4389  002678  90D8               	bcf	status,0,c
  4390  00267A  342A               	rlcf	floorf@u^0,w,c
  4391  00267C  6E1E               	movwf	??_floorf^0,c
  4392  00267E  342B               	rlcf	(floorf@u+1)^0,w,c
  4393  002680  6E1F               	movwf	(??_floorf+1)^0,c
  4394  002682  342C               	rlcf	(floorf@u+2)^0,w,c
  4395  002684  6E20               	movwf	(??_floorf+2)^0,c
  4396  002686  342D               	rlcf	(floorf@u+3)^0,w,c
  4397  002688  6E21               	movwf	(??_floorf+3)^0,c
  4398  00268A  501E               	movf	??_floorf^0,w,c
  4399  00268C  101F               	iorwf	(??_floorf+1)^0,w,c
  4400  00268E  1020               	iorwf	(??_floorf+2)^0,w,c
  4401  002690  1021               	iorwf	(??_floorf+3)^0,w,c
  4402  002692  B4D8               	btfsc	status,2,c
  4403  002694  EF4E  F013         	goto	u3041
  4404  002698  EF50  F013         	goto	u3040
  4405  00269C                     u3041:
  4406  00269C  EF58  F013         	goto	l2783
  4407  0026A0                     u3040:
  4408  0026A0  0E00               	movlw	0
  4409  0026A2  6E2A               	movwf	floorf@u^0,c
  4410  0026A4  0E00               	movlw	0
  4411  0026A6  6E2B               	movwf	(floorf@u+1)^0,c
  4412  0026A8  0E80               	movlw	128
  4413  0026AA  6E2C               	movwf	(floorf@u+2)^0,c
  4414  0026AC  0EBF               	movlw	191
  4415  0026AE  6E2D               	movwf	(floorf@u+3)^0,c
  4416  0026B0                     l2783:
  4417  0026B0  C02A  F01A         	movff	floorf@u,?_floorf
  4418  0026B4  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4419  0026B8  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4420  0026BC  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4421  0026C0                     l988:
  4422  0026C0  0012               	return		;funcret
  4423  0026C2                     __end_of_floorf:
  4424                           	opt callstack 0
  4425                           
  4426 ;; *************** function ___fpclassifyf *****************
  4427 ;; Defined at:
  4428 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  x               4    0[COMRAM] float 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  u               4   10[COMRAM] struct .
  4433 ;;  e               2    8[COMRAM] int 
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  2    0[COMRAM] int 
  4436 ;; Registers used:
  4437 ;;		wreg, status,2, status,0
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4443 ;;      Params:         4       0       0       0       0       0       0       0       0
  4444 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4445 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4446 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4447 ;;Total ram usage:       14 bytes
  4448 ;; Hardware stack levels used:    1
  4449 ;; This function calls:
  4450 ;;		Nothing
  4451 ;; This function is called by:
  4452 ;;		_efgtoa
  4453 ;; This function uses a non-reentrant model
  4454 ;;
  4455                           
  4456                           	psect	text15
  4457  002A5C                     __ptext15:
  4458                           	opt callstack 0
  4459  002A5C                     ___fpclassifyf:
  4460                           	opt callstack 26
  4461  002A5C  C0B2  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4462  002A60  C0B3  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4463  002A64  C0B4  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4464  002A68  C0B5  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4465  002A6C  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4466  002A70  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4467  002A74  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4468  002A78  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4469  002A7C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4470  002A80  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4471  002A84  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4472  002A88  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4473  002A8C  0E18               	movlw	24
  4474  002A8E  EF4E  F015         	goto	u2830
  4475  002A92                     u2835:
  4476  002A92  90D8               	bcf	status,0,c
  4477  002A94  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4478  002A96  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4479  002A98  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4480  002A9A  3205               	rrcf	??___fpclassifyf^0,f,c
  4481  002A9C                     u2830:
  4482  002A9C  2EE8               	decfsz	wreg,f,c
  4483  002A9E  EF49  F015         	goto	u2835
  4484  002AA2  5005               	movf	??___fpclassifyf^0,w,c
  4485  002AA4  6E09               	movwf	___fpclassifyf@e^0,c
  4486  002AA6  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4487  002AA8  5009               	movf	___fpclassifyf@e^0,w,c
  4488  002AAA  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4489  002AAC  A4D8               	btfss	status,2,c
  4490  002AAE  EF5B  F015         	goto	u2841
  4491  002AB2  EF5D  F015         	goto	u2840
  4492  002AB6                     u2841:
  4493  002AB6  EF7D  F015         	goto	l2735
  4494  002ABA                     u2840:
  4495  002ABA  90D8               	bcf	status,0,c
  4496  002ABC  340B               	rlcf	___fpclassifyf@u^0,w,c
  4497  002ABE  6E05               	movwf	??___fpclassifyf^0,c
  4498  002AC0  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4499  002AC2  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4500  002AC4  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4501  002AC6  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4502  002AC8  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4503  002ACA  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4504  002ACC  5005               	movf	??___fpclassifyf^0,w,c
  4505  002ACE  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4506  002AD0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4507  002AD2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4508  002AD4  A4D8               	btfss	status,2,c
  4509  002AD6  EF6F  F015         	goto	u2851
  4510  002ADA  EF71  F015         	goto	u2850
  4511  002ADE                     u2851:
  4512  002ADE  EF77  F015         	goto	l2731
  4513  002AE2                     u2850:
  4514  002AE2  0E00               	movlw	0
  4515  002AE4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4516  002AE6  0E02               	movlw	2
  4517  002AE8  6E01               	movwf	?___fpclassifyf^0,c
  4518  002AEA  EFAC  F015         	goto	l950
  4519  002AEE                     l2731:
  4520  002AEE  0E00               	movlw	0
  4521  002AF0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4522  002AF2  0E03               	movlw	3
  4523  002AF4  6E01               	movwf	?___fpclassifyf^0,c
  4524  002AF6  EFAC  F015         	goto	l950
  4525  002AFA                     l2735:
  4526  002AFA  2809               	incf	___fpclassifyf@e^0,w,c
  4527  002AFC  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4528  002AFE  A4D8               	btfss	status,2,c
  4529  002B00  EF84  F015         	goto	u2861
  4530  002B04  EF86  F015         	goto	u2860
  4531  002B08                     u2861:
  4532  002B08  EFA8  F015         	goto	l2741
  4533  002B0C                     u2860:
  4534  002B0C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4535  002B10  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4536  002B14  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4537  002B18  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4538  002B1C  0E09               	movlw	9
  4539  002B1E                     u2875:
  4540  002B1E  90D8               	bcf	status,0,c
  4541  002B20  3605               	rlcf	??___fpclassifyf^0,f,c
  4542  002B22  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4543  002B24  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4544  002B26  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4545  002B28  2EE8               	decfsz	wreg,f,c
  4546  002B2A  EF8F  F015         	goto	u2875
  4547  002B2E  5005               	movf	??___fpclassifyf^0,w,c
  4548  002B30  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4549  002B32  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4550  002B34  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4551  002B36  B4D8               	btfsc	status,2,c
  4552  002B38  EFA0  F015         	goto	u2881
  4553  002B3C  EFA3  F015         	goto	u2880
  4554  002B40                     u2881:
  4555  002B40  0E01               	movlw	1
  4556  002B42  EFA4  F015         	goto	u2890
  4557  002B46                     u2880:
  4558  002B46  0E00               	movlw	0
  4559  002B48                     u2890:
  4560  002B48  6E01               	movwf	?___fpclassifyf^0,c
  4561  002B4A  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4562  002B4C  EFAC  F015         	goto	l950
  4563  002B50                     l2741:
  4564  002B50  0E00               	movlw	0
  4565  002B52  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4566  002B54  0E04               	movlw	4
  4567  002B56  6E01               	movwf	?___fpclassifyf^0,c
  4568  002B58                     l950:
  4569  002B58  0012               	return		;funcret
  4570  002B5A                     __end_of___fpclassifyf:
  4571                           	opt callstack 0
  4572                           
  4573 ;; *************** function ___fltol *****************
  4574 ;; Defined at:
  4575 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  f1              4    0[COMRAM] int 
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;  exp1            1    9[COMRAM] unsigned char 
  4580 ;;  sign1           1    8[COMRAM] unsigned char 
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  4    0[COMRAM] long 
  4583 ;; Registers used:
  4584 ;;		wreg, status,2, status,0
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4590 ;;      Params:         4       0       0       0       0       0       0       0       0
  4591 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4592 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4593 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4594 ;;Total ram usage:       10 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; This function calls:
  4597 ;;		Nothing
  4598 ;; This function is called by:
  4599 ;;		_efgtoa
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           	psect	text16
  4604  002852                     __ptext16:
  4605                           	opt callstack 0
  4606  002852                     ___fltol:
  4607                           	opt callstack 26
  4608  002852  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4609  002854  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4610  002856  6E0A               	movwf	___fltol@exp1^0,c
  4611  002858  500A               	movf	___fltol@exp1^0,w,c
  4612  00285A  A4D8               	btfss	status,2,c
  4613  00285C  EF32  F014         	goto	u3701
  4614  002860  EF34  F014         	goto	u3700
  4615  002864                     u3701:
  4616  002864  EF3E  F014         	goto	l3203
  4617  002868                     u3700:
  4618  002868                     l3199:
  4619  002868  0E00               	movlw	0
  4620  00286A  6E01               	movwf	?___fltol^0,c
  4621  00286C  0E00               	movlw	0
  4622  00286E  6E02               	movwf	(?___fltol+1)^0,c
  4623  002870  0E00               	movlw	0
  4624  002872  6E03               	movwf	(?___fltol+2)^0,c
  4625  002874  0E00               	movlw	0
  4626  002876  6E04               	movwf	(?___fltol+3)^0,c
  4627  002878  EFAB  F014         	goto	l566
  4628  00287C                     l3203:
  4629  00287C  C001  F005         	movff	___fltol@f1,??___fltol
  4630  002880  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4631  002884  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4632  002888  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4633  00288C  0E20               	movlw	32
  4634  00288E  EF4E  F014         	goto	u3710
  4635  002892                     u3715:
  4636  002892  90D8               	bcf	status,0,c
  4637  002894  3208               	rrcf	(??___fltol+3)^0,f,c
  4638  002896  3207               	rrcf	(??___fltol+2)^0,f,c
  4639  002898  3206               	rrcf	(??___fltol+1)^0,f,c
  4640  00289A  3205               	rrcf	??___fltol^0,f,c
  4641  00289C                     u3710:
  4642  00289C  2EE8               	decfsz	wreg,f,c
  4643  00289E  EF49  F014         	goto	u3715
  4644  0028A2  5005               	movf	??___fltol^0,w,c
  4645  0028A4  6E09               	movwf	___fltol@sign1^0,c
  4646  0028A6  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4647  0028A8  0EFF               	movlw	255
  4648  0028AA  1601               	andwf	___fltol@f1^0,f,c
  4649  0028AC  0EFF               	movlw	255
  4650  0028AE  1602               	andwf	(___fltol@f1+1)^0,f,c
  4651  0028B0  0EFF               	movlw	255
  4652  0028B2  1603               	andwf	(___fltol@f1+2)^0,f,c
  4653  0028B4  0E00               	movlw	0
  4654  0028B6  1604               	andwf	(___fltol@f1+3)^0,f,c
  4655  0028B8  0E96               	movlw	150
  4656  0028BA  5E0A               	subwf	___fltol@exp1^0,f,c
  4657  0028BC  BE0A               	btfsc	___fltol@exp1^0,7,c
  4658  0028BE  EF65  F014         	goto	u3720
  4659  0028C2  EF63  F014         	goto	u3721
  4660  0028C6                     u3721:
  4661  0028C6  EF7B  F014         	goto	l3223
  4662  0028CA                     u3720:
  4663  0028CA  500A               	movf	___fltol@exp1^0,w,c
  4664  0028CC  0A80               	xorlw	128
  4665  0028CE  0F97               	addlw	151
  4666  0028D0  B0D8               	btfsc	status,0,c
  4667  0028D2  EF6D  F014         	goto	u3731
  4668  0028D6  EF6F  F014         	goto	u3730
  4669  0028DA                     u3731:
  4670  0028DA  EF71  F014         	goto	l3219
  4671  0028DE                     u3730:
  4672  0028DE  EF34  F014         	goto	l3199
  4673  0028E2                     l3219:
  4674  0028E2  90D8               	bcf	status,0,c
  4675  0028E4  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4676  0028E6  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4677  0028E8  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4678  0028EA  3201               	rrcf	___fltol@f1^0,f,c
  4679  0028EC  3E0A               	incfsz	___fltol@exp1^0,f,c
  4680  0028EE  EF71  F014         	goto	l3219
  4681  0028F2  EF93  F014         	goto	l3233
  4682  0028F6                     l3223:
  4683  0028F6  0E1F               	movlw	31
  4684  0028F8  640A               	cpfsgt	___fltol@exp1^0,c
  4685  0028FA  EF81  F014         	goto	u3741
  4686  0028FE  EF83  F014         	goto	u3740
  4687  002902                     u3741:
  4688  002902  EF8B  F014         	goto	l3231
  4689  002906                     u3740:
  4690  002906  EF34  F014         	goto	l3199
  4691  00290A                     l3229:
  4692  00290A  90D8               	bcf	status,0,c
  4693  00290C  3601               	rlcf	___fltol@f1^0,f,c
  4694  00290E  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4695  002910  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4696  002912  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4697  002914  060A               	decf	___fltol@exp1^0,f,c
  4698  002916                     l3231:
  4699  002916  500A               	movf	___fltol@exp1^0,w,c
  4700  002918  A4D8               	btfss	status,2,c
  4701  00291A  EF91  F014         	goto	u3751
  4702  00291E  EF93  F014         	goto	u3750
  4703  002922                     u3751:
  4704  002922  EF85  F014         	goto	l3229
  4705  002926                     u3750:
  4706  002926                     l3233:
  4707  002926  5009               	movf	___fltol@sign1^0,w,c
  4708  002928  B4D8               	btfsc	status,2,c
  4709  00292A  EF99  F014         	goto	u3761
  4710  00292E  EF9B  F014         	goto	u3760
  4711  002932                     u3761:
  4712  002932  EFA3  F014         	goto	l3237
  4713  002936                     u3760:
  4714  002936  1E04               	comf	(___fltol@f1+3)^0,f,c
  4715  002938  1E03               	comf	(___fltol@f1+2)^0,f,c
  4716  00293A  1E02               	comf	(___fltol@f1+1)^0,f,c
  4717  00293C  6C01               	negf	___fltol@f1^0,c
  4718  00293E  0E00               	movlw	0
  4719  002940  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4720  002942  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4721  002944  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4722  002946                     l3237:
  4723  002946  C001  F001         	movff	___fltol@f1,?___fltol
  4724  00294A  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4725  00294E  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4726  002952  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4727  002956                     l566:
  4728  002956  0012               	return		;funcret
  4729  002958                     __end_of___fltol:
  4730                           	opt callstack 0
  4731                           
  4732 ;; *************** function ___flsub *****************
  4733 ;; Defined at:
  4734 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  b               4   25[COMRAM] long 
  4737 ;;  a               4   29[COMRAM] long 
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;		None
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  4   25[COMRAM] long 
  4742 ;; Registers used:
  4743 ;;		wreg, status,2, status,0, cstack
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4749 ;;      Params:         8       0       0       0       0       0       0       0       0
  4750 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4751 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4752 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4753 ;;Total ram usage:        8 bytes
  4754 ;; Hardware stack levels used:    1
  4755 ;; Hardware stack levels required when called:    1
  4756 ;; This function calls:
  4757 ;;		___fladd
  4758 ;; This function is called by:
  4759 ;;		_efgtoa
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           	psect	text17
  4764  003286                     __ptext17:
  4765                           	opt callstack 0
  4766  003286                     ___flsub:
  4767                           	opt callstack 25
  4768  003286  0E00               	movlw	0
  4769  003288  1A1E               	xorwf	___flsub@a^0,f,c
  4770  00328A  0E00               	movlw	0
  4771  00328C  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  4772  00328E  0E00               	movlw	0
  4773  003290  1A20               	xorwf	(___flsub@a+2)^0,f,c
  4774  003292  0E80               	movlw	128
  4775  003294  1A21               	xorwf	(___flsub@a+3)^0,f,c
  4776  003296  C01A  F001         	movff	___flsub@b,___fladd@b
  4777  00329A  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  4778  00329E  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  4779  0032A2  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  4780  0032A6  C01E  F005         	movff	___flsub@a,___fladd@a
  4781  0032AA  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  4782  0032AE  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  4783  0032B2  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  4784  0032B6  ECE6  F009         	call	___fladd	;wreg free
  4785  0032BA  C001  F01A         	movff	?___fladd,?___flsub
  4786  0032BE  C002  F01B         	movff	?___fladd+1,?___flsub+1
  4787  0032C2  C003  F01C         	movff	?___fladd+2,?___flsub+2
  4788  0032C6  C004  F01D         	movff	?___fladd+3,?___flsub+3
  4789  0032CA  0012               	return		;funcret
  4790  0032CC                     __end_of___flsub:
  4791                           	opt callstack 0
  4792                           
  4793 ;; *************** function ___fladd *****************
  4794 ;; Defined at:
  4795 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
  4796 ;; Parameters:    Size  Location     Type
  4797 ;;  b               4    0[COMRAM] long 
  4798 ;;  a               4    4[COMRAM] long 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  grs             1   15[COMRAM] unsigned char 
  4801 ;;  bexp            1   14[COMRAM] unsigned char 
  4802 ;;  aexp            1   13[COMRAM] unsigned char 
  4803 ;;  signs           1   12[COMRAM] unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  4    0[COMRAM] unsigned char 
  4806 ;; Registers used:
  4807 ;;		wreg, status,2, status,0
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4813 ;;      Params:         8       0       0       0       0       0       0       0       0
  4814 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4815 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4816 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4817 ;;Total ram usage:       16 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_efgtoa
  4823 ;;		___flsub
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text18
  4828  0013CC                     __ptext18:
  4829                           	opt callstack 0
  4830  0013CC                     ___fladd:
  4831                           	opt callstack 25
  4832  0013CC  5004               	movf	(___fladd@b+3)^0,w,c
  4833  0013CE  0B80               	andlw	128
  4834  0013D0  6E0D               	movwf	___fladd@signs^0,c
  4835  0013D2  5004               	movf	(___fladd@b+3)^0,w,c
  4836  0013D4  2404               	addwf	(___fladd@b+3)^0,w,c
  4837  0013D6  6E0F               	movwf	___fladd@bexp^0,c
  4838  0013D8  AE03               	btfss	(___fladd@b+2)^0,7,c
  4839  0013DA  EFF1  F009         	goto	u2401
  4840  0013DE  EFF3  F009         	goto	u2400
  4841  0013E2                     u2401:
  4842  0013E2  EFF4  F009         	goto	l2505
  4843  0013E6                     u2400:
  4844  0013E6  800F               	bsf	___fladd@bexp^0,0,c
  4845  0013E8                     l2505:
  4846  0013E8  500F               	movf	___fladd@bexp^0,w,c
  4847  0013EA  B4D8               	btfsc	status,2,c
  4848  0013EC  EFFA  F009         	goto	u2411
  4849  0013F0  EFFC  F009         	goto	u2410
  4850  0013F4                     u2411:
  4851  0013F4  EF11  F00A         	goto	l2515
  4852  0013F8                     u2410:
  4853  0013F8  280F               	incf	___fladd@bexp^0,w,c
  4854  0013FA  A4D8               	btfss	status,2,c
  4855  0013FC  EF02  F00A         	goto	u2421
  4856  001400  EF04  F00A         	goto	u2420
  4857  001404                     u2421:
  4858  001404  EF0C  F00A         	goto	l2511
  4859  001408                     u2420:
  4860  001408  0E00               	movlw	0
  4861  00140A  6E01               	movwf	___fladd@b^0,c
  4862  00140C  0E00               	movlw	0
  4863  00140E  6E02               	movwf	(___fladd@b+1)^0,c
  4864  001410  0E00               	movlw	0
  4865  001412  6E03               	movwf	(___fladd@b+2)^0,c
  4866  001414  0E00               	movlw	0
  4867  001416  6E04               	movwf	(___fladd@b+3)^0,c
  4868  001418                     l2511:
  4869  001418  8E03               	bsf	(___fladd@b+2)^0,7,c
  4870  00141A  0E00               	movlw	0
  4871  00141C  6E04               	movwf	(___fladd@b+3)^0,c
  4872  00141E  EF19  F00A         	goto	l2517
  4873  001422                     l2515:
  4874  001422  0E00               	movlw	0
  4875  001424  6E01               	movwf	___fladd@b^0,c
  4876  001426  0E00               	movlw	0
  4877  001428  6E02               	movwf	(___fladd@b+1)^0,c
  4878  00142A  0E00               	movlw	0
  4879  00142C  6E03               	movwf	(___fladd@b+2)^0,c
  4880  00142E  0E00               	movlw	0
  4881  001430  6E04               	movwf	(___fladd@b+3)^0,c
  4882  001432                     l2517:
  4883  001432  5008               	movf	(___fladd@a+3)^0,w,c
  4884  001434  0B80               	andlw	128
  4885  001436  6E0E               	movwf	___fladd@aexp^0,c
  4886  001438  500D               	movf	___fladd@signs^0,w,c
  4887  00143A  180E               	xorwf	___fladd@aexp^0,w,c
  4888  00143C  B4D8               	btfsc	status,2,c
  4889  00143E  EF23  F00A         	goto	u2431
  4890  001442  EF25  F00A         	goto	u2430
  4891  001446                     u2431:
  4892  001446  EF26  F00A         	goto	l2523
  4893  00144A                     u2430:
  4894  00144A  8C0D               	bsf	___fladd@signs^0,6,c
  4895  00144C                     l2523:
  4896  00144C  5008               	movf	(___fladd@a+3)^0,w,c
  4897  00144E  2408               	addwf	(___fladd@a+3)^0,w,c
  4898  001450  6E0E               	movwf	___fladd@aexp^0,c
  4899  001452  AE07               	btfss	(___fladd@a+2)^0,7,c
  4900  001454  EF2E  F00A         	goto	u2441
  4901  001458  EF30  F00A         	goto	u2440
  4902  00145C                     u2441:
  4903  00145C  EF31  F00A         	goto	l2529
  4904  001460                     u2440:
  4905  001460  800E               	bsf	___fladd@aexp^0,0,c
  4906  001462                     l2529:
  4907  001462  500E               	movf	___fladd@aexp^0,w,c
  4908  001464  B4D8               	btfsc	status,2,c
  4909  001466  EF37  F00A         	goto	u2451
  4910  00146A  EF39  F00A         	goto	u2450
  4911  00146E                     u2451:
  4912  00146E  EF4E  F00A         	goto	l2539
  4913  001472                     u2450:
  4914  001472  280E               	incf	___fladd@aexp^0,w,c
  4915  001474  A4D8               	btfss	status,2,c
  4916  001476  EF3F  F00A         	goto	u2461
  4917  00147A  EF41  F00A         	goto	u2460
  4918  00147E                     u2461:
  4919  00147E  EF49  F00A         	goto	l2535
  4920  001482                     u2460:
  4921  001482  0E00               	movlw	0
  4922  001484  6E05               	movwf	___fladd@a^0,c
  4923  001486  0E00               	movlw	0
  4924  001488  6E06               	movwf	(___fladd@a+1)^0,c
  4925  00148A  0E00               	movlw	0
  4926  00148C  6E07               	movwf	(___fladd@a+2)^0,c
  4927  00148E  0E00               	movlw	0
  4928  001490  6E08               	movwf	(___fladd@a+3)^0,c
  4929  001492                     l2535:
  4930  001492  8E07               	bsf	(___fladd@a+2)^0,7,c
  4931  001494  0E00               	movlw	0
  4932  001496  6E08               	movwf	(___fladd@a+3)^0,c
  4933  001498  EF56  F00A         	goto	l2541
  4934  00149C                     l2539:
  4935  00149C  0E00               	movlw	0
  4936  00149E  6E05               	movwf	___fladd@a^0,c
  4937  0014A0  0E00               	movlw	0
  4938  0014A2  6E06               	movwf	(___fladd@a+1)^0,c
  4939  0014A4  0E00               	movlw	0
  4940  0014A6  6E07               	movwf	(___fladd@a+2)^0,c
  4941  0014A8  0E00               	movlw	0
  4942  0014AA  6E08               	movwf	(___fladd@a+3)^0,c
  4943  0014AC                     l2541:
  4944  0014AC  500F               	movf	___fladd@bexp^0,w,c
  4945  0014AE  5C0E               	subwf	___fladd@aexp^0,w,c
  4946  0014B0  B0D8               	btfsc	status,0,c
  4947  0014B2  EF5D  F00A         	goto	u2471
  4948  0014B6  EF5F  F00A         	goto	u2470
  4949  0014BA                     u2471:
  4950  0014BA  EF86  F00A         	goto	l2577
  4951  0014BE                     u2470:
  4952  0014BE  AC0D               	btfss	___fladd@signs^0,6,c
  4953  0014C0  EF64  F00A         	goto	u2481
  4954  0014C4  EF66  F00A         	goto	u2480
  4955  0014C8                     u2481:
  4956  0014C8  EF68  F00A         	goto	l2547
  4957  0014CC                     u2480:
  4958  0014CC  0E80               	movlw	128
  4959  0014CE  1A0D               	xorwf	___fladd@signs^0,f,c
  4960  0014D0                     l2547:
  4961  0014D0  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  4962  0014D4  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  4963  0014D8  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  4964  0014DC  C001  F010         	movff	___fladd@b,___fladd@grs
  4965  0014E0  C005  F001         	movff	___fladd@a,___fladd@b
  4966  0014E4  C010  F005         	movff	___fladd@grs,___fladd@a
  4967  0014E8  C002  F010         	movff	___fladd@b+1,___fladd@grs
  4968  0014EC  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  4969  0014F0  C010  F006         	movff	___fladd@grs,___fladd@a+1
  4970  0014F4  C003  F010         	movff	___fladd@b+2,___fladd@grs
  4971  0014F8  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  4972  0014FC  C010  F007         	movff	___fladd@grs,___fladd@a+2
  4973  001500  C004  F010         	movff	___fladd@b+3,___fladd@grs
  4974  001504  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  4975  001508  C010  F008         	movff	___fladd@grs,___fladd@a+3
  4976  00150C                     l2577:
  4977  00150C  0E00               	movlw	0
  4978  00150E  6E10               	movwf	___fladd@grs^0,c
  4979  001510  500F               	movf	___fladd@bexp^0,w,c
  4980  001512  C00E  F009         	movff	___fladd@aexp,??___fladd
  4981  001516  6A0A               	clrf	(??___fladd+1)^0,c
  4982  001518  5E09               	subwf	??___fladd^0,f,c
  4983  00151A  0E00               	movlw	0
  4984  00151C  5A0A               	subwfb	(??___fladd+1)^0,f,c
  4985  00151E  BE0A               	btfsc	(??___fladd+1)^0,7,c
  4986  001520  EF9B  F00A         	goto	u2491
  4987  001524  500A               	movf	(??___fladd+1)^0,w,c
  4988  001526  E109               	bnz	u2490
  4989  001528  0E1A               	movlw	26
  4990  00152A  5C09               	subwf	??___fladd^0,w,c
  4991  00152C  A0D8               	btfss	status,0,c
  4992  00152E  EF9B  F00A         	goto	u2491
  4993  001532  EF9D  F00A         	goto	u2490
  4994  001536                     u2491:
  4995  001536  EFD4  F00A         	goto	l798
  4996  00153A                     u2490:
  4997  00153A  5001               	movf	___fladd@b^0,w,c
  4998  00153C  1002               	iorwf	(___fladd@b+1)^0,w,c
  4999  00153E  1003               	iorwf	(___fladd@b+2)^0,w,c
  5000  001540  1004               	iorwf	(___fladd@b+3)^0,w,c
  5001  001542  A4D8               	btfss	status,2,c
  5002  001544  EFA6  F00A         	goto	u2501
  5003  001548  EFA9  F00A         	goto	u2500
  5004  00154C                     u2501:
  5005  00154C  0E01               	movlw	1
  5006  00154E  EFAA  F00A         	goto	u2510
  5007  001552                     u2500:
  5008  001552  0E00               	movlw	0
  5009  001554                     u2510:
  5010  001554  6E10               	movwf	___fladd@grs^0,c
  5011  001556  0E00               	movlw	0
  5012  001558  6E01               	movwf	___fladd@b^0,c
  5013  00155A  0E00               	movlw	0
  5014  00155C  6E02               	movwf	(___fladd@b+1)^0,c
  5015  00155E  0E00               	movlw	0
  5016  001560  6E03               	movwf	(___fladd@b+2)^0,c
  5017  001562  0E00               	movlw	0
  5018  001564  6E04               	movwf	(___fladd@b+3)^0,c
  5019  001566  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5020  00156A  EFDD  F00A         	goto	l797
  5021  00156E                     l799:
  5022  00156E  A010               	btfss	___fladd@grs^0,0,c
  5023  001570  EFBC  F00A         	goto	u2521
  5024  001574  EFBE  F00A         	goto	u2520
  5025  001578                     u2521:
  5026  001578  EFC4  F00A         	goto	l2589
  5027  00157C                     u2520:
  5028  00157C  90D8               	bcf	status,0,c
  5029  00157E  3010               	rrcf	___fladd@grs^0,w,c
  5030  001580  0901               	iorlw	1
  5031  001582  6E10               	movwf	___fladd@grs^0,c
  5032  001584  EFC6  F00A         	goto	l2591
  5033  001588                     l2589:
  5034  001588  90D8               	bcf	status,0,c
  5035  00158A  3210               	rrcf	___fladd@grs^0,f,c
  5036  00158C                     l2591:
  5037  00158C  A001               	btfss	___fladd@b^0,0,c
  5038  00158E  EFCB  F00A         	goto	u2531
  5039  001592  EFCD  F00A         	goto	u2530
  5040  001596                     u2531:
  5041  001596  EFCE  F00A         	goto	l2595
  5042  00159A                     u2530:
  5043  00159A  8E10               	bsf	___fladd@grs^0,7,c
  5044  00159C                     l2595:
  5045  00159C  3404               	rlcf	(___fladd@b+3)^0,w,c
  5046  00159E  3204               	rrcf	(___fladd@b+3)^0,f,c
  5047  0015A0  3203               	rrcf	(___fladd@b+2)^0,f,c
  5048  0015A2  3202               	rrcf	(___fladd@b+1)^0,f,c
  5049  0015A4  3201               	rrcf	___fladd@b^0,f,c
  5050  0015A6  2A0F               	incf	___fladd@bexp^0,f,c
  5051  0015A8                     l798:
  5052  0015A8  500E               	movf	___fladd@aexp^0,w,c
  5053  0015AA  5C0F               	subwf	___fladd@bexp^0,w,c
  5054  0015AC  A0D8               	btfss	status,0,c
  5055  0015AE  EFDB  F00A         	goto	u2541
  5056  0015B2  EFDD  F00A         	goto	u2540
  5057  0015B6                     u2541:
  5058  0015B6  EFB7  F00A         	goto	l799
  5059  0015BA                     u2540:
  5060  0015BA                     l797:
  5061  0015BA  BC0D               	btfsc	___fladd@signs^0,6,c
  5062  0015BC  EFE2  F00A         	goto	u2551
  5063  0015C0  EFE4  F00A         	goto	u2550
  5064  0015C4                     u2551:
  5065  0015C4  EF24  F00B         	goto	l2623
  5066  0015C8                     u2550:
  5067  0015C8  500F               	movf	___fladd@bexp^0,w,c
  5068  0015CA  A4D8               	btfss	status,2,c
  5069  0015CC  EFEA  F00A         	goto	u2561
  5070  0015D0  EFEC  F00A         	goto	u2560
  5071  0015D4                     u2561:
  5072  0015D4  EFF6  F00A         	goto	l2605
  5073  0015D8                     u2560:
  5074  0015D8  0E00               	movlw	0
  5075  0015DA  6E01               	movwf	?___fladd^0,c
  5076  0015DC  0E00               	movlw	0
  5077  0015DE  6E02               	movwf	(?___fladd+1)^0,c
  5078  0015E0  0E00               	movlw	0
  5079  0015E2  6E03               	movwf	(?___fladd+2)^0,c
  5080  0015E4  0E00               	movlw	0
  5081  0015E6  6E04               	movwf	(?___fladd+3)^0,c
  5082  0015E8  EF45  F00C         	goto	l806
  5083  0015EC                     l2605:
  5084  0015EC  5005               	movf	___fladd@a^0,w,c
  5085  0015EE  2601               	addwf	___fladd@b^0,f,c
  5086  0015F0  5006               	movf	(___fladd@a+1)^0,w,c
  5087  0015F2  2202               	addwfc	(___fladd@b+1)^0,f,c
  5088  0015F4  5007               	movf	(___fladd@a+2)^0,w,c
  5089  0015F6  2203               	addwfc	(___fladd@b+2)^0,f,c
  5090  0015F8  5008               	movf	(___fladd@a+3)^0,w,c
  5091  0015FA  2204               	addwfc	(___fladd@b+3)^0,f,c
  5092  0015FC  A004               	btfss	(___fladd@b+3)^0,0,c
  5093  0015FE  EF03  F00B         	goto	u2571
  5094  001602  EF05  F00B         	goto	u2570
  5095  001606                     u2571:
  5096  001606  EFB1  F00B         	goto	l2659
  5097  00160A                     u2570:
  5098  00160A  A010               	btfss	___fladd@grs^0,0,c
  5099  00160C  EF0A  F00B         	goto	u2581
  5100  001610  EF0C  F00B         	goto	u2580
  5101  001614                     u2581:
  5102  001614  EF12  F00B         	goto	l2613
  5103  001618                     u2580:
  5104  001618  90D8               	bcf	status,0,c
  5105  00161A  3010               	rrcf	___fladd@grs^0,w,c
  5106  00161C  0901               	iorlw	1
  5107  00161E  6E10               	movwf	___fladd@grs^0,c
  5108  001620  EF14  F00B         	goto	l2615
  5109  001624                     l2613:
  5110  001624  90D8               	bcf	status,0,c
  5111  001626  3210               	rrcf	___fladd@grs^0,f,c
  5112  001628                     l2615:
  5113  001628  A001               	btfss	___fladd@b^0,0,c
  5114  00162A  EF19  F00B         	goto	u2591
  5115  00162E  EF1B  F00B         	goto	u2590
  5116  001632                     u2591:
  5117  001632  EF1C  F00B         	goto	l2619
  5118  001636                     u2590:
  5119  001636  8E10               	bsf	___fladd@grs^0,7,c
  5120  001638                     l2619:
  5121  001638  3404               	rlcf	(___fladd@b+3)^0,w,c
  5122  00163A  3204               	rrcf	(___fladd@b+3)^0,f,c
  5123  00163C  3203               	rrcf	(___fladd@b+2)^0,f,c
  5124  00163E  3202               	rrcf	(___fladd@b+1)^0,f,c
  5125  001640  3201               	rrcf	___fladd@b^0,f,c
  5126  001642  2A0F               	incf	___fladd@bexp^0,f,c
  5127  001644  EFB1  F00B         	goto	l2659
  5128  001648                     l2623:
  5129  001648  5005               	movf	___fladd@a^0,w,c
  5130  00164A  5C01               	subwf	___fladd@b^0,w,c
  5131  00164C  5006               	movf	(___fladd@a+1)^0,w,c
  5132  00164E  5802               	subwfb	(___fladd@b+1)^0,w,c
  5133  001650  5007               	movf	(___fladd@a+2)^0,w,c
  5134  001652  5803               	subwfb	(___fladd@b+2)^0,w,c
  5135  001654  5004               	movf	(___fladd@b+3)^0,w,c
  5136  001656  0A80               	xorlw	128
  5137  001658  6E09               	movwf	??___fladd^0,c
  5138  00165A  5008               	movf	(___fladd@a+3)^0,w,c
  5139  00165C  0A80               	xorlw	128
  5140  00165E  5809               	subwfb	??___fladd^0,w,c
  5141  001660  B0D8               	btfsc	status,0,c
  5142  001662  EF35  F00B         	goto	u2601
  5143  001666  EF37  F00B         	goto	u2600
  5144  00166A                     u2601:
  5145  00166A  EF62  F00B         	goto	l2633
  5146  00166E                     u2600:
  5147  00166E  5001               	movf	___fladd@b^0,w,c
  5148  001670  5C05               	subwf	___fladd@a^0,w,c
  5149  001672  6E09               	movwf	??___fladd^0,c
  5150  001674  5002               	movf	(___fladd@b+1)^0,w,c
  5151  001676  5806               	subwfb	(___fladd@a+1)^0,w,c
  5152  001678  6E0A               	movwf	(??___fladd+1)^0,c
  5153  00167A  5003               	movf	(___fladd@b+2)^0,w,c
  5154  00167C  5807               	subwfb	(___fladd@a+2)^0,w,c
  5155  00167E  6E0B               	movwf	(??___fladd+2)^0,c
  5156  001680  5004               	movf	(___fladd@b+3)^0,w,c
  5157  001682  5808               	subwfb	(___fladd@a+3)^0,w,c
  5158  001684  6E0C               	movwf	(??___fladd+3)^0,c
  5159  001686  0EFF               	movlw	255
  5160  001688  2409               	addwf	??___fladd^0,w,c
  5161  00168A  6E01               	movwf	___fladd@b^0,c
  5162  00168C  0EFF               	movlw	255
  5163  00168E  200A               	addwfc	(??___fladd+1)^0,w,c
  5164  001690  6E02               	movwf	(___fladd@b+1)^0,c
  5165  001692  0EFF               	movlw	255
  5166  001694  200B               	addwfc	(??___fladd+2)^0,w,c
  5167  001696  6E03               	movwf	(___fladd@b+2)^0,c
  5168  001698  0EFF               	movlw	255
  5169  00169A  200C               	addwfc	(??___fladd+3)^0,w,c
  5170  00169C  6E04               	movwf	(___fladd@b+3)^0,c
  5171  00169E  0E80               	movlw	128
  5172  0016A0  1A0D               	xorwf	___fladd@signs^0,f,c
  5173  0016A2  6C10               	negf	___fladd@grs^0,c
  5174  0016A4  5010               	movf	___fladd@grs^0,w,c
  5175  0016A6  A4D8               	btfss	status,2,c
  5176  0016A8  EF58  F00B         	goto	u2611
  5177  0016AC  EF5A  F00B         	goto	u2610
  5178  0016B0                     u2611:
  5179  0016B0  EF6A  F00B         	goto	l814
  5180  0016B4                     u2610:
  5181  0016B4  0E01               	movlw	1
  5182  0016B6  2601               	addwf	___fladd@b^0,f,c
  5183  0016B8  0E00               	movlw	0
  5184  0016BA  2202               	addwfc	(___fladd@b+1)^0,f,c
  5185  0016BC  2203               	addwfc	(___fladd@b+2)^0,f,c
  5186  0016BE  2204               	addwfc	(___fladd@b+3)^0,f,c
  5187  0016C0  EF6A  F00B         	goto	l814
  5188  0016C4                     l2633:
  5189  0016C4  5005               	movf	___fladd@a^0,w,c
  5190  0016C6  5E01               	subwf	___fladd@b^0,f,c
  5191  0016C8  5006               	movf	(___fladd@a+1)^0,w,c
  5192  0016CA  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5193  0016CC  5007               	movf	(___fladd@a+2)^0,w,c
  5194  0016CE  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5195  0016D0  5008               	movf	(___fladd@a+3)^0,w,c
  5196  0016D2  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5197  0016D4                     l814:
  5198  0016D4  5001               	movf	___fladd@b^0,w,c
  5199  0016D6  1002               	iorwf	(___fladd@b+1)^0,w,c
  5200  0016D8  1003               	iorwf	(___fladd@b+2)^0,w,c
  5201  0016DA  1004               	iorwf	(___fladd@b+3)^0,w,c
  5202  0016DC  A4D8               	btfss	status,2,c
  5203  0016DE  EF73  F00B         	goto	u2621
  5204  0016E2  EF75  F00B         	goto	u2620
  5205  0016E6                     u2621:
  5206  0016E6  EFAA  F00B         	goto	l2657
  5207  0016EA                     u2620:
  5208  0016EA  5010               	movf	___fladd@grs^0,w,c
  5209  0016EC  A4D8               	btfss	status,2,c
  5210  0016EE  EF7B  F00B         	goto	u2631
  5211  0016F2  EF7D  F00B         	goto	u2630
  5212  0016F6                     u2631:
  5213  0016F6  EFAA  F00B         	goto	l2657
  5214  0016FA                     u2630:
  5215  0016FA  0E00               	movlw	0
  5216  0016FC  6E01               	movwf	?___fladd^0,c
  5217  0016FE  0E00               	movlw	0
  5218  001700  6E02               	movwf	(?___fladd+1)^0,c
  5219  001702  0E00               	movlw	0
  5220  001704  6E03               	movwf	(?___fladd+2)^0,c
  5221  001706  0E00               	movlw	0
  5222  001708  6E04               	movwf	(?___fladd+3)^0,c
  5223  00170A  EF45  F00C         	goto	l806
  5224  00170E                     l2641:
  5225  00170E  90D8               	bcf	status,0,c
  5226  001710  3601               	rlcf	___fladd@b^0,f,c
  5227  001712  3602               	rlcf	(___fladd@b+1)^0,f,c
  5228  001714  3603               	rlcf	(___fladd@b+2)^0,f,c
  5229  001716  3604               	rlcf	(___fladd@b+3)^0,f,c
  5230  001718  AE10               	btfss	___fladd@grs^0,7,c
  5231  00171A  EF91  F00B         	goto	u2641
  5232  00171E  EF93  F00B         	goto	u2640
  5233  001722                     u2641:
  5234  001722  EF94  F00B         	goto	l2647
  5235  001726                     u2640:
  5236  001726  8001               	bsf	___fladd@b^0,0,c
  5237  001728                     l2647:
  5238  001728  A010               	btfss	___fladd@grs^0,0,c
  5239  00172A  EF99  F00B         	goto	u2651
  5240  00172E  EF9B  F00B         	goto	u2650
  5241  001732                     u2651:
  5242  001732  EF9F  F00B         	goto	l2651
  5243  001736                     u2650:
  5244  001736  80D8               	bsf	status,0,c
  5245  001738  3610               	rlcf	___fladd@grs^0,f,c
  5246  00173A  EFA1  F00B         	goto	l2653
  5247  00173E                     l2651:
  5248  00173E  90D8               	bcf	status,0,c
  5249  001740  3610               	rlcf	___fladd@grs^0,f,c
  5250  001742                     l2653:
  5251  001742  500F               	movf	___fladd@bexp^0,w,c
  5252  001744  B4D8               	btfsc	status,2,c
  5253  001746  EFA7  F00B         	goto	u2661
  5254  00174A  EFA9  F00B         	goto	u2660
  5255  00174E                     u2661:
  5256  00174E  EFAA  F00B         	goto	l2657
  5257  001752                     u2660:
  5258  001752  060F               	decf	___fladd@bexp^0,f,c
  5259  001754                     l2657:
  5260  001754  AE03               	btfss	(___fladd@b+2)^0,7,c
  5261  001756  EFAF  F00B         	goto	u2671
  5262  00175A  EFB1  F00B         	goto	u2670
  5263  00175E                     u2671:
  5264  00175E  EF87  F00B         	goto	l2641
  5265  001762                     u2670:
  5266  001762                     l2659:
  5267  001762  0E00               	movlw	0
  5268  001764  6E0E               	movwf	___fladd@aexp^0,c
  5269  001766  AE10               	btfss	___fladd@grs^0,7,c
  5270  001768  EFB8  F00B         	goto	u2681
  5271  00176C  EFBA  F00B         	goto	u2680
  5272  001770                     u2681:
  5273  001770  EFD2  F00B         	goto	l823
  5274  001774                     u2680:
  5275  001774  C010  F009         	movff	___fladd@grs,??___fladd
  5276  001778  0E7F               	movlw	127
  5277  00177A  1609               	andwf	??___fladd^0,f,c
  5278  00177C  B4D8               	btfsc	status,2,c
  5279  00177E  EFC3  F00B         	goto	u2691
  5280  001782  EFC5  F00B         	goto	u2690
  5281  001786                     u2691:
  5282  001786  EFC9  F00B         	goto	l824
  5283  00178A                     u2690:
  5284  00178A                     l2665:
  5285  00178A  0E01               	movlw	1
  5286  00178C  6E0E               	movwf	___fladd@aexp^0,c
  5287  00178E  EFD2  F00B         	goto	l823
  5288  001792                     l824:
  5289  001792  A001               	btfss	___fladd@b^0,0,c
  5290  001794  EFCE  F00B         	goto	u2701
  5291  001798  EFD0  F00B         	goto	u2700
  5292  00179C                     u2701:
  5293  00179C  EFD2  F00B         	goto	l823
  5294  0017A0                     u2700:
  5295  0017A0  EFC5  F00B         	goto	l2665
  5296  0017A4                     l823:
  5297  0017A4  500E               	movf	___fladd@aexp^0,w,c
  5298  0017A6  B4D8               	btfsc	status,2,c
  5299  0017A8  EFD8  F00B         	goto	u2711
  5300  0017AC  EFDA  F00B         	goto	u2710
  5301  0017B0                     u2711:
  5302  0017B0  EF05  F00C         	goto	l2677
  5303  0017B4                     u2710:
  5304  0017B4  0E01               	movlw	1
  5305  0017B6  2601               	addwf	___fladd@b^0,f,c
  5306  0017B8  0E00               	movlw	0
  5307  0017BA  2202               	addwfc	(___fladd@b+1)^0,f,c
  5308  0017BC  2203               	addwfc	(___fladd@b+2)^0,f,c
  5309  0017BE  2204               	addwfc	(___fladd@b+3)^0,f,c
  5310  0017C0  A004               	btfss	(___fladd@b+3)^0,0,c
  5311  0017C2  EFE5  F00B         	goto	u2721
  5312  0017C6  EFE7  F00B         	goto	u2720
  5313  0017CA                     u2721:
  5314  0017CA  EF05  F00C         	goto	l2677
  5315  0017CE                     u2720:
  5316  0017CE  C001  F009         	movff	___fladd@b,??___fladd
  5317  0017D2  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5318  0017D6  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5319  0017DA  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5320  0017DE  340C               	rlcf	(??___fladd+3)^0,w,c
  5321  0017E0  320C               	rrcf	(??___fladd+3)^0,f,c
  5322  0017E2  320B               	rrcf	(??___fladd+2)^0,f,c
  5323  0017E4  320A               	rrcf	(??___fladd+1)^0,f,c
  5324  0017E6  3209               	rrcf	??___fladd^0,f,c
  5325  0017E8  C009  F001         	movff	??___fladd,___fladd@b
  5326  0017EC  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5327  0017F0  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5328  0017F4  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5329  0017F8  280F               	incf	___fladd@bexp^0,w,c
  5330  0017FA  B4D8               	btfsc	status,2,c
  5331  0017FC  EF02  F00C         	goto	u2731
  5332  001800  EF04  F00C         	goto	u2730
  5333  001804                     u2731:
  5334  001804  EF05  F00C         	goto	l2677
  5335  001808                     u2730:
  5336  001808  2A0F               	incf	___fladd@bexp^0,f,c
  5337  00180A                     l2677:
  5338  00180A  280F               	incf	___fladd@bexp^0,w,c
  5339  00180C  B4D8               	btfsc	status,2,c
  5340  00180E  EF0B  F00C         	goto	u2741
  5341  001812  EF0D  F00C         	goto	u2740
  5342  001816                     u2741:
  5343  001816  EF15  F00C         	goto	l2681
  5344  00181A                     u2740:
  5345  00181A  500F               	movf	___fladd@bexp^0,w,c
  5346  00181C  A4D8               	btfss	status,2,c
  5347  00181E  EF13  F00C         	goto	u2751
  5348  001822  EF15  F00C         	goto	u2750
  5349  001826                     u2751:
  5350  001826  EF27  F00C         	goto	l2685
  5351  00182A                     u2750:
  5352  00182A                     l2681:
  5353  00182A  0E00               	movlw	0
  5354  00182C  6E01               	movwf	___fladd@b^0,c
  5355  00182E  0E00               	movlw	0
  5356  001830  6E02               	movwf	(___fladd@b+1)^0,c
  5357  001832  0E00               	movlw	0
  5358  001834  6E03               	movwf	(___fladd@b+2)^0,c
  5359  001836  0E00               	movlw	0
  5360  001838  6E04               	movwf	(___fladd@b+3)^0,c
  5361  00183A  500F               	movf	___fladd@bexp^0,w,c
  5362  00183C  A4D8               	btfss	status,2,c
  5363  00183E  EF23  F00C         	goto	u2761
  5364  001842  EF25  F00C         	goto	u2760
  5365  001846                     u2761:
  5366  001846  EF27  F00C         	goto	l2685
  5367  00184A                     u2760:
  5368  00184A  0E00               	movlw	0
  5369  00184C  6E0D               	movwf	___fladd@signs^0,c
  5370  00184E                     l2685:
  5371  00184E  A00F               	btfss	___fladd@bexp^0,0,c
  5372  001850  EF2C  F00C         	goto	u2771
  5373  001854  EF2E  F00C         	goto	u2770
  5374  001858                     u2771:
  5375  001858  EF31  F00C         	goto	l2689
  5376  00185C                     u2770:
  5377  00185C  8E03               	bsf	(___fladd@b+2)^0,7,c
  5378  00185E  EF32  F00C         	goto	l2691
  5379  001862                     l2689:
  5380  001862  9E03               	bcf	(___fladd@b+2)^0,7,c
  5381  001864                     l2691:
  5382  001864  90D8               	bcf	status,0,c
  5383  001866  300F               	rrcf	___fladd@bexp^0,w,c
  5384  001868  6E04               	movwf	(___fladd@b+3)^0,c
  5385  00186A  AE0D               	btfss	___fladd@signs^0,7,c
  5386  00186C  EF3A  F00C         	goto	u2781
  5387  001870  EF3C  F00C         	goto	u2780
  5388  001874                     u2781:
  5389  001874  EF3D  F00C         	goto	l2697
  5390  001878                     u2780:
  5391  001878  8E04               	bsf	(___fladd@b+3)^0,7,c
  5392  00187A                     l2697:
  5393  00187A  C001  F001         	movff	___fladd@b,?___fladd
  5394  00187E  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5395  001882  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5396  001886  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5397  00188A                     l806:
  5398  00188A  0012               	return		;funcret
  5399  00188C                     __end_of___fladd:
  5400                           	opt callstack 0
  5401                           
  5402 ;; *************** function ___flneg *****************
  5403 ;; Defined at:
  5404 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;  f1              4    0[COMRAM] unsigned char 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;		None
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  4    0[COMRAM] unsigned char 
  5411 ;; Registers used:
  5412 ;;		wreg, status,2, status,0
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5418 ;;      Params:         4       0       0       0       0       0       0       0       0
  5419 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5420 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5421 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5422 ;;Total ram usage:        4 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; This function calls:
  5425 ;;		Nothing
  5426 ;; This function is called by:
  5427 ;;		_efgtoa
  5428 ;; This function uses a non-reentrant model
  5429 ;;
  5430                           
  5431                           	psect	text19
  5432  003388                     __ptext19:
  5433                           	opt callstack 0
  5434  003388                     ___flneg:
  5435                           	opt callstack 26
  5436  003388  5001               	movf	___flneg@f1^0,w,c
  5437  00338A  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5438  00338C  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5439  00338E  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5440  003390  B4D8               	btfsc	status,2,c
  5441  003392  EFCD  F019         	goto	u3691
  5442  003396  EFCF  F019         	goto	u3690
  5443  00339A                     u3691:
  5444  00339A  EFD7  F019         	goto	l3193
  5445  00339E                     u3690:
  5446  00339E  0E00               	movlw	0
  5447  0033A0  1A01               	xorwf	___flneg@f1^0,f,c
  5448  0033A2  0E00               	movlw	0
  5449  0033A4  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5450  0033A6  0E00               	movlw	0
  5451  0033A8  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5452  0033AA  0E80               	movlw	128
  5453  0033AC  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5454  0033AE                     l3193:
  5455  0033AE  C001  F001         	movff	___flneg@f1,?___flneg
  5456  0033B2  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5457  0033B6  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5458  0033BA  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5459  0033BE  0012               	return		;funcret
  5460  0033C0                     __end_of___flneg:
  5461                           	opt callstack 0
  5462                           
  5463 ;; *************** function ___flmul *****************
  5464 ;; Defined at:
  5465 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;  b               4    0[COMRAM] unsigned char 
  5468 ;;  a               4    4[COMRAM] unsigned char 
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  prod            4   19[COMRAM] struct .
  5471 ;;  grs             4   13[COMRAM] unsigned long 
  5472 ;;  temp            2   23[COMRAM] struct .
  5473 ;;  bexp            1   18[COMRAM] unsigned char 
  5474 ;;  aexp            1   17[COMRAM] unsigned char 
  5475 ;;  sign            1   12[COMRAM] unsigned char 
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  4    0[COMRAM] unsigned char 
  5478 ;; Registers used:
  5479 ;;		wreg, status,2, status,0, prodl, prodh
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5485 ;;      Params:         8       0       0       0       0       0       0       0       0
  5486 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5487 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5488 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5489 ;;Total ram usage:       25 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; This function calls:
  5492 ;;		Nothing
  5493 ;; This function is called by:
  5494 ;;		_efgtoa
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           	psect	text20
  5499  001CEC                     __ptext20:
  5500                           	opt callstack 0
  5501  001CEC                     ___flmul:
  5502                           	opt callstack 26
  5503  001CEC  5004               	movf	(___flmul@b+3)^0,w,c
  5504  001CEE  0B80               	andlw	128
  5505  001CF0  6E0D               	movwf	___flmul@sign^0,c
  5506  001CF2  5004               	movf	(___flmul@b+3)^0,w,c
  5507  001CF4  2404               	addwf	(___flmul@b+3)^0,w,c
  5508  001CF6  6E13               	movwf	___flmul@bexp^0,c
  5509  001CF8  AE03               	btfss	(___flmul@b+2)^0,7,c
  5510  001CFA  EF81  F00E         	goto	u3301
  5511  001CFE  EF83  F00E         	goto	u3300
  5512  001D02                     u3301:
  5513  001D02  EF84  F00E         	goto	l2941
  5514  001D06                     u3300:
  5515  001D06  8013               	bsf	___flmul@bexp^0,0,c
  5516  001D08                     l2941:
  5517  001D08  5013               	movf	___flmul@bexp^0,w,c
  5518  001D0A  B4D8               	btfsc	status,2,c
  5519  001D0C  EF8A  F00E         	goto	u3311
  5520  001D10  EF8C  F00E         	goto	u3310
  5521  001D14                     u3311:
  5522  001D14  EF9F  F00E         	goto	l2949
  5523  001D18                     u3310:
  5524  001D18  2813               	incf	___flmul@bexp^0,w,c
  5525  001D1A  A4D8               	btfss	status,2,c
  5526  001D1C  EF92  F00E         	goto	u3321
  5527  001D20  EF94  F00E         	goto	u3320
  5528  001D24                     u3321:
  5529  001D24  EF9C  F00E         	goto	l2947
  5530  001D28                     u3320:
  5531  001D28  0E00               	movlw	0
  5532  001D2A  6E01               	movwf	___flmul@b^0,c
  5533  001D2C  0E00               	movlw	0
  5534  001D2E  6E02               	movwf	(___flmul@b+1)^0,c
  5535  001D30  0E00               	movlw	0
  5536  001D32  6E03               	movwf	(___flmul@b+2)^0,c
  5537  001D34  0E00               	movlw	0
  5538  001D36  6E04               	movwf	(___flmul@b+3)^0,c
  5539  001D38                     l2947:
  5540  001D38  8E03               	bsf	(___flmul@b+2)^0,7,c
  5541  001D3A  EFA7  F00E         	goto	l2951
  5542  001D3E                     l2949:
  5543  001D3E  0E00               	movlw	0
  5544  001D40  6E01               	movwf	___flmul@b^0,c
  5545  001D42  0E00               	movlw	0
  5546  001D44  6E02               	movwf	(___flmul@b+1)^0,c
  5547  001D46  0E00               	movlw	0
  5548  001D48  6E03               	movwf	(___flmul@b+2)^0,c
  5549  001D4A  0E00               	movlw	0
  5550  001D4C  6E04               	movwf	(___flmul@b+3)^0,c
  5551  001D4E                     l2951:
  5552  001D4E  5008               	movf	(___flmul@a+3)^0,w,c
  5553  001D50  0B80               	andlw	128
  5554  001D52  1A0D               	xorwf	___flmul@sign^0,f,c
  5555  001D54  5008               	movf	(___flmul@a+3)^0,w,c
  5556  001D56  2408               	addwf	(___flmul@a+3)^0,w,c
  5557  001D58  6E12               	movwf	___flmul@aexp^0,c
  5558  001D5A  AE07               	btfss	(___flmul@a+2)^0,7,c
  5559  001D5C  EFB2  F00E         	goto	u3331
  5560  001D60  EFB4  F00E         	goto	u3330
  5561  001D64                     u3331:
  5562  001D64  EFB5  F00E         	goto	l2959
  5563  001D68                     u3330:
  5564  001D68  8012               	bsf	___flmul@aexp^0,0,c
  5565  001D6A                     l2959:
  5566  001D6A  5012               	movf	___flmul@aexp^0,w,c
  5567  001D6C  B4D8               	btfsc	status,2,c
  5568  001D6E  EFBB  F00E         	goto	u3341
  5569  001D72  EFBD  F00E         	goto	u3340
  5570  001D76                     u3341:
  5571  001D76  EFD0  F00E         	goto	l2967
  5572  001D7A                     u3340:
  5573  001D7A  2812               	incf	___flmul@aexp^0,w,c
  5574  001D7C  A4D8               	btfss	status,2,c
  5575  001D7E  EFC3  F00E         	goto	u3351
  5576  001D82  EFC5  F00E         	goto	u3350
  5577  001D86                     u3351:
  5578  001D86  EFCD  F00E         	goto	l2965
  5579  001D8A                     u3350:
  5580  001D8A  0E00               	movlw	0
  5581  001D8C  6E05               	movwf	___flmul@a^0,c
  5582  001D8E  0E00               	movlw	0
  5583  001D90  6E06               	movwf	(___flmul@a+1)^0,c
  5584  001D92  0E00               	movlw	0
  5585  001D94  6E07               	movwf	(___flmul@a+2)^0,c
  5586  001D96  0E00               	movlw	0
  5587  001D98  6E08               	movwf	(___flmul@a+3)^0,c
  5588  001D9A                     l2965:
  5589  001D9A  8E07               	bsf	(___flmul@a+2)^0,7,c
  5590  001D9C  EFD8  F00E         	goto	l883
  5591  001DA0                     l2967:
  5592  001DA0  0E00               	movlw	0
  5593  001DA2  6E05               	movwf	___flmul@a^0,c
  5594  001DA4  0E00               	movlw	0
  5595  001DA6  6E06               	movwf	(___flmul@a+1)^0,c
  5596  001DA8  0E00               	movlw	0
  5597  001DAA  6E07               	movwf	(___flmul@a+2)^0,c
  5598  001DAC  0E00               	movlw	0
  5599  001DAE  6E08               	movwf	(___flmul@a+3)^0,c
  5600  001DB0                     l883:
  5601  001DB0  5012               	movf	___flmul@aexp^0,w,c
  5602  001DB2  B4D8               	btfsc	status,2,c
  5603  001DB4  EFDE  F00E         	goto	u3361
  5604  001DB8  EFE0  F00E         	goto	u3360
  5605  001DBC                     u3361:
  5606  001DBC  EFE8  F00E         	goto	l2971
  5607  001DC0                     u3360:
  5608  001DC0  5013               	movf	___flmul@bexp^0,w,c
  5609  001DC2  A4D8               	btfss	status,2,c
  5610  001DC4  EFE6  F00E         	goto	u3371
  5611  001DC8  EFE8  F00E         	goto	u3370
  5612  001DCC                     u3371:
  5613  001DCC  EFF2  F00E         	goto	l2975
  5614  001DD0                     u3370:
  5615  001DD0                     l2971:
  5616  001DD0  0E00               	movlw	0
  5617  001DD2  6E01               	movwf	?___flmul^0,c
  5618  001DD4  0E00               	movlw	0
  5619  001DD6  6E02               	movwf	(?___flmul+1)^0,c
  5620  001DD8  0E00               	movlw	0
  5621  001DDA  6E03               	movwf	(?___flmul+2)^0,c
  5622  001DDC  0E00               	movlw	0
  5623  001DDE  6E04               	movwf	(?___flmul+3)^0,c
  5624  001DE0  EF8A  F010         	goto	l887
  5625  001DE4                     l2975:
  5626  001DE4  5007               	movf	(___flmul@a+2)^0,w,c
  5627  001DE6  0201               	mulwf	___flmul@b^0,c
  5628  001DE8  CFF3 F018          	movff	prodl,___flmul@temp
  5629  001DEC  CFF4 F019          	movff	prodh,___flmul@temp+1
  5630  001DF0  5018               	movf	___flmul@temp^0,w,c
  5631  001DF2  6E0E               	movwf	___flmul@grs^0,c
  5632  001DF4  6A0F               	clrf	(___flmul@grs+1)^0,c
  5633  001DF6  6A10               	clrf	(___flmul@grs+2)^0,c
  5634  001DF8  6A11               	clrf	(___flmul@grs+3)^0,c
  5635  001DFA  5019               	movf	(___flmul@temp+1)^0,w,c
  5636  001DFC  6E14               	movwf	___flmul@prod^0,c
  5637  001DFE  6A15               	clrf	(___flmul@prod+1)^0,c
  5638  001E00  6A16               	clrf	(___flmul@prod+2)^0,c
  5639  001E02  6A17               	clrf	(___flmul@prod+3)^0,c
  5640  001E04  5006               	movf	(___flmul@a+1)^0,w,c
  5641  001E06  0202               	mulwf	(___flmul@b+1)^0,c
  5642  001E08  CFF3 F018          	movff	prodl,___flmul@temp
  5643  001E0C  CFF4 F019          	movff	prodh,___flmul@temp+1
  5644  001E10  5018               	movf	___flmul@temp^0,w,c
  5645  001E12  260E               	addwf	___flmul@grs^0,f,c
  5646  001E14  0E00               	movlw	0
  5647  001E16  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5648  001E18  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5649  001E1A  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5650  001E1C  5019               	movf	(___flmul@temp+1)^0,w,c
  5651  001E1E  2614               	addwf	___flmul@prod^0,f,c
  5652  001E20  0E00               	movlw	0
  5653  001E22  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5654  001E24  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5655  001E26  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5656  001E28  5005               	movf	___flmul@a^0,w,c
  5657  001E2A  0203               	mulwf	(___flmul@b+2)^0,c
  5658  001E2C  CFF3 F018          	movff	prodl,___flmul@temp
  5659  001E30  CFF4 F019          	movff	prodh,___flmul@temp+1
  5660  001E34  5018               	movf	___flmul@temp^0,w,c
  5661  001E36  260E               	addwf	___flmul@grs^0,f,c
  5662  001E38  0E00               	movlw	0
  5663  001E3A  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5664  001E3C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5665  001E3E  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5666  001E40  5019               	movf	(___flmul@temp+1)^0,w,c
  5667  001E42  2614               	addwf	___flmul@prod^0,f,c
  5668  001E44  0E00               	movlw	0
  5669  001E46  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5670  001E48  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5671  001E4A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5672  001E4C  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5673  001E50  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5674  001E54  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5675  001E58  6A0E               	clrf	___flmul@grs^0,c
  5676  001E5A  5005               	movf	___flmul@a^0,w,c
  5677  001E5C  0202               	mulwf	(___flmul@b+1)^0,c
  5678  001E5E  CFF3 F018          	movff	prodl,___flmul@temp
  5679  001E62  CFF4 F019          	movff	prodh,___flmul@temp+1
  5680  001E66  5018               	movf	___flmul@temp^0,w,c
  5681  001E68  260E               	addwf	___flmul@grs^0,f,c
  5682  001E6A  5019               	movf	(___flmul@temp+1)^0,w,c
  5683  001E6C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5684  001E6E  0E00               	movlw	0
  5685  001E70  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5686  001E72  0E00               	movlw	0
  5687  001E74  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5688  001E76  5006               	movf	(___flmul@a+1)^0,w,c
  5689  001E78  0201               	mulwf	___flmul@b^0,c
  5690  001E7A  CFF3 F018          	movff	prodl,___flmul@temp
  5691  001E7E  CFF4 F019          	movff	prodh,___flmul@temp+1
  5692  001E82  5018               	movf	___flmul@temp^0,w,c
  5693  001E84  260E               	addwf	___flmul@grs^0,f,c
  5694  001E86  5019               	movf	(___flmul@temp+1)^0,w,c
  5695  001E88  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5696  001E8A  0E00               	movlw	0
  5697  001E8C  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5698  001E8E  0E00               	movlw	0
  5699  001E90  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5700  001E92  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5701  001E96  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5702  001E9A  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5703  001E9E  6A0E               	clrf	___flmul@grs^0,c
  5704  001EA0  5005               	movf	___flmul@a^0,w,c
  5705  001EA2  0201               	mulwf	___flmul@b^0,c
  5706  001EA4  CFF3 F018          	movff	prodl,___flmul@temp
  5707  001EA8  CFF4 F019          	movff	prodh,___flmul@temp+1
  5708  001EAC  5018               	movf	___flmul@temp^0,w,c
  5709  001EAE  260E               	addwf	___flmul@grs^0,f,c
  5710  001EB0  5019               	movf	(___flmul@temp+1)^0,w,c
  5711  001EB2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  5712  001EB4  0E00               	movlw	0
  5713  001EB6  2210               	addwfc	(___flmul@grs+2)^0,f,c
  5714  001EB8  0E00               	movlw	0
  5715  001EBA  2211               	addwfc	(___flmul@grs+3)^0,f,c
  5716  001EBC  5007               	movf	(___flmul@a+2)^0,w,c
  5717  001EBE  0202               	mulwf	(___flmul@b+1)^0,c
  5718  001EC0  CFF3 F018          	movff	prodl,___flmul@temp
  5719  001EC4  CFF4 F019          	movff	prodh,___flmul@temp+1
  5720  001EC8  5018               	movf	___flmul@temp^0,w,c
  5721  001ECA  2614               	addwf	___flmul@prod^0,f,c
  5722  001ECC  5019               	movf	(___flmul@temp+1)^0,w,c
  5723  001ECE  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5724  001ED0  0E00               	movlw	0
  5725  001ED2  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5726  001ED4  0E00               	movlw	0
  5727  001ED6  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5728  001ED8  5006               	movf	(___flmul@a+1)^0,w,c
  5729  001EDA  0203               	mulwf	(___flmul@b+2)^0,c
  5730  001EDC  CFF3 F018          	movff	prodl,___flmul@temp
  5731  001EE0  CFF4 F019          	movff	prodh,___flmul@temp+1
  5732  001EE4  5018               	movf	___flmul@temp^0,w,c
  5733  001EE6  2614               	addwf	___flmul@prod^0,f,c
  5734  001EE8  5019               	movf	(___flmul@temp+1)^0,w,c
  5735  001EEA  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5736  001EEC  0E00               	movlw	0
  5737  001EEE  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5738  001EF0  0E00               	movlw	0
  5739  001EF2  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5740  001EF4  5007               	movf	(___flmul@a+2)^0,w,c
  5741  001EF6  0203               	mulwf	(___flmul@b+2)^0,c
  5742  001EF8  CFF3 F018          	movff	prodl,___flmul@temp
  5743  001EFC  CFF4 F019          	movff	prodh,___flmul@temp+1
  5744  001F00  5018               	movf	___flmul@temp^0,w,c
  5745  001F02  6E09               	movwf	??___flmul^0,c
  5746  001F04  5019               	movf	(___flmul@temp+1)^0,w,c
  5747  001F06  6E0A               	movwf	(??___flmul+1)^0,c
  5748  001F08  6A0B               	clrf	(??___flmul+2)^0,c
  5749  001F0A  6A0C               	clrf	(??___flmul+3)^0,c
  5750  001F0C  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  5751  001F10  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  5752  001F14  C009  F00A         	movff	??___flmul,??___flmul+1
  5753  001F18  6A09               	clrf	??___flmul^0,c
  5754  001F1A  5009               	movf	??___flmul^0,w,c
  5755  001F1C  2614               	addwf	___flmul@prod^0,f,c
  5756  001F1E  500A               	movf	(??___flmul+1)^0,w,c
  5757  001F20  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5758  001F22  500B               	movf	(??___flmul+2)^0,w,c
  5759  001F24  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5760  001F26  500C               	movf	(??___flmul+3)^0,w,c
  5761  001F28  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5762  001F2A  C00E  F009         	movff	___flmul@grs,??___flmul
  5763  001F2E  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  5764  001F32  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  5765  001F36  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  5766  001F3A  0E19               	movlw	25
  5767  001F3C  EFA5  F00F         	goto	u3380
  5768  001F40                     u3385:
  5769  001F40  90D8               	bcf	status,0,c
  5770  001F42  320C               	rrcf	(??___flmul+3)^0,f,c
  5771  001F44  320B               	rrcf	(??___flmul+2)^0,f,c
  5772  001F46  320A               	rrcf	(??___flmul+1)^0,f,c
  5773  001F48  3209               	rrcf	??___flmul^0,f,c
  5774  001F4A                     u3380:
  5775  001F4A  2EE8               	decfsz	wreg,f,c
  5776  001F4C  EFA0  F00F         	goto	u3385
  5777  001F50  5009               	movf	??___flmul^0,w,c
  5778  001F52  2614               	addwf	___flmul@prod^0,f,c
  5779  001F54  500A               	movf	(??___flmul+1)^0,w,c
  5780  001F56  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5781  001F58  500B               	movf	(??___flmul+2)^0,w,c
  5782  001F5A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5783  001F5C  500C               	movf	(??___flmul+3)^0,w,c
  5784  001F5E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5785  001F60  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  5786  001F64  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  5787  001F68  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  5788  001F6C  6A0E               	clrf	___flmul@grs^0,c
  5789  001F6E  5012               	movf	___flmul@aexp^0,w,c
  5790  001F70  C013  F009         	movff	___flmul@bexp,??___flmul
  5791  001F74  6A0A               	clrf	(??___flmul+1)^0,c
  5792  001F76  2609               	addwf	??___flmul^0,f,c
  5793  001F78  0E00               	movlw	0
  5794  001F7A  220A               	addwfc	(??___flmul+1)^0,f,c
  5795  001F7C  0E82               	movlw	130
  5796  001F7E  2409               	addwf	??___flmul^0,w,c
  5797  001F80  6E18               	movwf	___flmul@temp^0,c
  5798  001F82  0EFF               	movlw	255
  5799  001F84  200A               	addwfc	(??___flmul+1)^0,w,c
  5800  001F86  6E19               	movwf	(___flmul@temp+1)^0,c
  5801  001F88  EFDB  F00F         	goto	l3023
  5802  001F8C                     l3017:
  5803  001F8C  90D8               	bcf	status,0,c
  5804  001F8E  3614               	rlcf	___flmul@prod^0,f,c
  5805  001F90  3615               	rlcf	(___flmul@prod+1)^0,f,c
  5806  001F92  3616               	rlcf	(___flmul@prod+2)^0,f,c
  5807  001F94  3617               	rlcf	(___flmul@prod+3)^0,f,c
  5808  001F96  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5809  001F98  EFD0  F00F         	goto	u3391
  5810  001F9C  EFD2  F00F         	goto	u3390
  5811  001FA0                     u3391:
  5812  001FA0  EFD3  F00F         	goto	l890
  5813  001FA4                     u3390:
  5814  001FA4  8014               	bsf	___flmul@prod^0,0,c
  5815  001FA6                     l890:
  5816  001FA6  90D8               	bcf	status,0,c
  5817  001FA8  360E               	rlcf	___flmul@grs^0,f,c
  5818  001FAA  360F               	rlcf	(___flmul@grs+1)^0,f,c
  5819  001FAC  3610               	rlcf	(___flmul@grs+2)^0,f,c
  5820  001FAE  3611               	rlcf	(___flmul@grs+3)^0,f,c
  5821  001FB0  0618               	decf	___flmul@temp^0,f,c
  5822  001FB2  A0D8               	btfss	status,0,c
  5823  001FB4  0619               	decf	(___flmul@temp+1)^0,f,c
  5824  001FB6                     l3023:
  5825  001FB6  AE16               	btfss	(___flmul@prod+2)^0,7,c
  5826  001FB8  EFE0  F00F         	goto	u3401
  5827  001FBC  EFE2  F00F         	goto	u3400
  5828  001FC0                     u3401:
  5829  001FC0  EFC6  F00F         	goto	l3017
  5830  001FC4                     u3400:
  5831  001FC4  0E00               	movlw	0
  5832  001FC6  6E12               	movwf	___flmul@aexp^0,c
  5833  001FC8  AE11               	btfss	(___flmul@grs+3)^0,7,c
  5834  001FCA  EFE9  F00F         	goto	u3411
  5835  001FCE  EFEB  F00F         	goto	u3410
  5836  001FD2                     u3411:
  5837  001FD2  EF0F  F010         	goto	l892
  5838  001FD6                     u3410:
  5839  001FD6  0EFF               	movlw	255
  5840  001FD8  140E               	andwf	___flmul@grs^0,w,c
  5841  001FDA  6E09               	movwf	??___flmul^0,c
  5842  001FDC  0EFF               	movlw	255
  5843  001FDE  140F               	andwf	(___flmul@grs+1)^0,w,c
  5844  001FE0  6E0A               	movwf	(??___flmul+1)^0,c
  5845  001FE2  0EFF               	movlw	255
  5846  001FE4  1410               	andwf	(___flmul@grs+2)^0,w,c
  5847  001FE6  6E0B               	movwf	(??___flmul+2)^0,c
  5848  001FE8  0E7F               	movlw	127
  5849  001FEA  1411               	andwf	(___flmul@grs+3)^0,w,c
  5850  001FEC  6E0C               	movwf	(??___flmul+3)^0,c
  5851  001FEE  5009               	movf	??___flmul^0,w,c
  5852  001FF0  100A               	iorwf	(??___flmul+1)^0,w,c
  5853  001FF2  100B               	iorwf	(??___flmul+2)^0,w,c
  5854  001FF4  100C               	iorwf	(??___flmul+3)^0,w,c
  5855  001FF6  B4D8               	btfsc	status,2,c
  5856  001FF8  EF00  F010         	goto	u3421
  5857  001FFC  EF02  F010         	goto	u3420
  5858  002000                     u3421:
  5859  002000  EF06  F010         	goto	l893
  5860  002004                     u3420:
  5861  002004                     l3031:
  5862  002004  0E01               	movlw	1
  5863  002006  6E12               	movwf	___flmul@aexp^0,c
  5864  002008  EF0F  F010         	goto	l892
  5865  00200C                     l893:
  5866  00200C  A014               	btfss	___flmul@prod^0,0,c
  5867  00200E  EF0B  F010         	goto	u3431
  5868  002012  EF0D  F010         	goto	u3430
  5869  002016                     u3431:
  5870  002016  EF0F  F010         	goto	l892
  5871  00201A                     u3430:
  5872  00201A  EF02  F010         	goto	l3031
  5873  00201E                     l892:
  5874  00201E  5012               	movf	___flmul@aexp^0,w,c
  5875  002020  B4D8               	btfsc	status,2,c
  5876  002022  EF15  F010         	goto	u3441
  5877  002026  EF17  F010         	goto	u3440
  5878  00202A                     u3441:
  5879  00202A  EF3B  F010         	goto	l3043
  5880  00202E                     u3440:
  5881  00202E  0E01               	movlw	1
  5882  002030  2614               	addwf	___flmul@prod^0,f,c
  5883  002032  0E00               	movlw	0
  5884  002034  2215               	addwfc	(___flmul@prod+1)^0,f,c
  5885  002036  2216               	addwfc	(___flmul@prod+2)^0,f,c
  5886  002038  2217               	addwfc	(___flmul@prod+3)^0,f,c
  5887  00203A  A017               	btfss	(___flmul@prod+3)^0,0,c
  5888  00203C  EF22  F010         	goto	u3451
  5889  002040  EF24  F010         	goto	u3450
  5890  002044                     u3451:
  5891  002044  EF3B  F010         	goto	l3043
  5892  002048                     u3450:
  5893  002048  C014  F009         	movff	___flmul@prod,??___flmul
  5894  00204C  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  5895  002050  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  5896  002054  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  5897  002058  340C               	rlcf	(??___flmul+3)^0,w,c
  5898  00205A  320C               	rrcf	(??___flmul+3)^0,f,c
  5899  00205C  320B               	rrcf	(??___flmul+2)^0,f,c
  5900  00205E  320A               	rrcf	(??___flmul+1)^0,f,c
  5901  002060  3209               	rrcf	??___flmul^0,f,c
  5902  002062  C009  F014         	movff	??___flmul,___flmul@prod
  5903  002066  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  5904  00206A  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  5905  00206E  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  5906  002072  4A18               	infsnz	___flmul@temp^0,f,c
  5907  002074  2A19               	incf	(___flmul@temp+1)^0,f,c
  5908  002076                     l3043:
  5909  002076  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5910  002078  EF46  F010         	goto	u3461
  5911  00207C  5019               	movf	(___flmul@temp+1)^0,w,c
  5912  00207E  E108               	bnz	u3460
  5913  002080  2818               	incf	___flmul@temp^0,w,c
  5914  002082  A0D8               	btfss	status,0,c
  5915  002084  EF46  F010         	goto	u3461
  5916  002088  EF48  F010         	goto	u3460
  5917  00208C                     u3461:
  5918  00208C  EF52  F010         	goto	l3047
  5919  002090                     u3460:
  5920  002090  0E00               	movlw	0
  5921  002092  6E14               	movwf	___flmul@prod^0,c
  5922  002094  0E00               	movlw	0
  5923  002096  6E15               	movwf	(___flmul@prod+1)^0,c
  5924  002098  0E80               	movlw	128
  5925  00209A  6E16               	movwf	(___flmul@prod+2)^0,c
  5926  00209C  0E7F               	movlw	127
  5927  00209E  6E17               	movwf	(___flmul@prod+3)^0,c
  5928  0020A0  EF80  F010         	goto	l3059
  5929  0020A4                     l3047:
  5930  0020A4  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  5931  0020A6  EF5F  F010         	goto	u3470
  5932  0020AA  5019               	movf	(___flmul@temp+1)^0,w,c
  5933  0020AC  E106               	bnz	u3471
  5934  0020AE  0418               	decf	___flmul@temp^0,w,c
  5935  0020B0  B0D8               	btfsc	status,0,c
  5936  0020B2  EF5D  F010         	goto	u3471
  5937  0020B6  EF5F  F010         	goto	u3470
  5938  0020BA                     u3471:
  5939  0020BA  EF6B  F010         	goto	l900
  5940  0020BE                     u3470:
  5941  0020BE  0E00               	movlw	0
  5942  0020C0  6E14               	movwf	___flmul@prod^0,c
  5943  0020C2  0E00               	movlw	0
  5944  0020C4  6E15               	movwf	(___flmul@prod+1)^0,c
  5945  0020C6  0E00               	movlw	0
  5946  0020C8  6E16               	movwf	(___flmul@prod+2)^0,c
  5947  0020CA  0E00               	movlw	0
  5948  0020CC  6E17               	movwf	(___flmul@prod+3)^0,c
  5949  0020CE  0E00               	movlw	0
  5950  0020D0  6E0D               	movwf	___flmul@sign^0,c
  5951  0020D2  EF80  F010         	goto	l3059
  5952  0020D6                     l900:
  5953  0020D6  C018  F013         	movff	___flmul@temp,___flmul@bexp
  5954  0020DA  0EFF               	movlw	255
  5955  0020DC  1614               	andwf	___flmul@prod^0,f,c
  5956  0020DE  0EFF               	movlw	255
  5957  0020E0  1615               	andwf	(___flmul@prod+1)^0,f,c
  5958  0020E2  0E7F               	movlw	127
  5959  0020E4  1616               	andwf	(___flmul@prod+2)^0,f,c
  5960  0020E6  0E00               	movlw	0
  5961  0020E8  1617               	andwf	(___flmul@prod+3)^0,f,c
  5962  0020EA  A013               	btfss	___flmul@bexp^0,0,c
  5963  0020EC  EF7A  F010         	goto	u3481
  5964  0020F0  EF7C  F010         	goto	u3480
  5965  0020F4                     u3481:
  5966  0020F4  EF7D  F010         	goto	l3057
  5967  0020F8                     u3480:
  5968  0020F8  8E16               	bsf	(___flmul@prod+2)^0,7,c
  5969  0020FA                     l3057:
  5970  0020FA  90D8               	bcf	status,0,c
  5971  0020FC  3013               	rrcf	___flmul@bexp^0,w,c
  5972  0020FE  6E17               	movwf	(___flmul@prod+3)^0,c
  5973  002100                     l3059:
  5974  002100  500D               	movf	___flmul@sign^0,w,c
  5975  002102  1217               	iorwf	(___flmul@prod+3)^0,f,c
  5976  002104  C014  F001         	movff	___flmul@prod,?___flmul
  5977  002108  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  5978  00210C  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  5979  002110  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  5980  002114                     l887:
  5981  002114  0012               	return		;funcret
  5982  002116                     __end_of___flmul:
  5983                           	opt callstack 0
  5984                           
  5985 ;; *************** function ___flge *****************
  5986 ;; Defined at:
  5987 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
  5988 ;; Parameters:    Size  Location     Type
  5989 ;;  ff1             4   25[COMRAM] unsigned char 
  5990 ;;  ff2             4   29[COMRAM] unsigned char 
  5991 ;; Auto vars:     Size  Location     Type
  5992 ;;		None
  5993 ;; Return value:  Size  Location     Type
  5994 ;;		None               void
  5995 ;; Registers used:
  5996 ;;		wreg, status,2, status,0
  5997 ;; Tracked objects:
  5998 ;;		On entry : 0/0
  5999 ;;		On exit  : 0/0
  6000 ;;		Unchanged: 0/0
  6001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6002 ;;      Params:         8       0       0       0       0       0       0       0       0
  6003 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6004 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6005 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6006 ;;Total ram usage:       12 bytes
  6007 ;; Hardware stack levels used:    1
  6008 ;; This function calls:
  6009 ;;		Nothing
  6010 ;; This function is called by:
  6011 ;;		_efgtoa
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           	psect	text21
  6016  002958                     __ptext21:
  6017                           	opt callstack 0
  6018  002958                     ___flge:
  6019                           	opt callstack 26
  6020  002958  0E00               	movlw	0
  6021  00295A  141A               	andwf	___flge@ff1^0,w,c
  6022  00295C  6E22               	movwf	??___flge^0,c
  6023  00295E  0E00               	movlw	0
  6024  002960  141B               	andwf	(___flge@ff1+1)^0,w,c
  6025  002962  6E23               	movwf	(??___flge+1)^0,c
  6026  002964  0E80               	movlw	128
  6027  002966  141C               	andwf	(___flge@ff1+2)^0,w,c
  6028  002968  6E24               	movwf	(??___flge+2)^0,c
  6029  00296A  0E7F               	movlw	127
  6030  00296C  141D               	andwf	(___flge@ff1+3)^0,w,c
  6031  00296E  6E25               	movwf	(??___flge+3)^0,c
  6032  002970  5022               	movf	??___flge^0,w,c
  6033  002972  1023               	iorwf	(??___flge+1)^0,w,c
  6034  002974  1024               	iorwf	(??___flge+2)^0,w,c
  6035  002976  1025               	iorwf	(??___flge+3)^0,w,c
  6036  002978  A4D8               	btfss	status,2,c
  6037  00297A  EFC1  F014         	goto	u3641
  6038  00297E  EFC3  F014         	goto	u3640
  6039  002982                     u3641:
  6040  002982  EFCB  F014         	goto	l3171
  6041  002986                     u3640:
  6042  002986  0E00               	movlw	0
  6043  002988  6E1A               	movwf	___flge@ff1^0,c
  6044  00298A  0E00               	movlw	0
  6045  00298C  6E1B               	movwf	(___flge@ff1+1)^0,c
  6046  00298E  0E00               	movlw	0
  6047  002990  6E1C               	movwf	(___flge@ff1+2)^0,c
  6048  002992  0E00               	movlw	0
  6049  002994  6E1D               	movwf	(___flge@ff1+3)^0,c
  6050  002996                     l3171:
  6051  002996  0E00               	movlw	0
  6052  002998  141E               	andwf	___flge@ff2^0,w,c
  6053  00299A  6E22               	movwf	??___flge^0,c
  6054  00299C  0E00               	movlw	0
  6055  00299E  141F               	andwf	(___flge@ff2+1)^0,w,c
  6056  0029A0  6E23               	movwf	(??___flge+1)^0,c
  6057  0029A2  0E80               	movlw	128
  6058  0029A4  1420               	andwf	(___flge@ff2+2)^0,w,c
  6059  0029A6  6E24               	movwf	(??___flge+2)^0,c
  6060  0029A8  0E7F               	movlw	127
  6061  0029AA  1421               	andwf	(___flge@ff2+3)^0,w,c
  6062  0029AC  6E25               	movwf	(??___flge+3)^0,c
  6063  0029AE  5022               	movf	??___flge^0,w,c
  6064  0029B0  1023               	iorwf	(??___flge+1)^0,w,c
  6065  0029B2  1024               	iorwf	(??___flge+2)^0,w,c
  6066  0029B4  1025               	iorwf	(??___flge+3)^0,w,c
  6067  0029B6  A4D8               	btfss	status,2,c
  6068  0029B8  EFE0  F014         	goto	u3651
  6069  0029BC  EFE2  F014         	goto	u3650
  6070  0029C0                     u3651:
  6071  0029C0  EFEA  F014         	goto	l3175
  6072  0029C4                     u3650:
  6073  0029C4  0E00               	movlw	0
  6074  0029C6  6E1E               	movwf	___flge@ff2^0,c
  6075  0029C8  0E00               	movlw	0
  6076  0029CA  6E1F               	movwf	(___flge@ff2+1)^0,c
  6077  0029CC  0E00               	movlw	0
  6078  0029CE  6E20               	movwf	(___flge@ff2+2)^0,c
  6079  0029D0  0E00               	movlw	0
  6080  0029D2  6E21               	movwf	(___flge@ff2+3)^0,c
  6081  0029D4                     l3175:
  6082  0029D4  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6083  0029D6  EFEF  F014         	goto	u3661
  6084  0029DA  EFF1  F014         	goto	u3660
  6085  0029DE                     u3661:
  6086  0029DE  EFFA  F014         	goto	l3179
  6087  0029E2                     u3660:
  6088  0029E2  6C1A               	negf	___flge@ff1^0,c
  6089  0029E4  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6090  0029E6  B0D8               	btfsc	status,0,c
  6091  0029E8  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6092  0029EA  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6093  0029EC  B0D8               	btfsc	status,0,c
  6094  0029EE  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6095  0029F0  0E80               	movlw	128
  6096  0029F2  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6097  0029F4                     l3179:
  6098  0029F4  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6099  0029F6  EFFF  F014         	goto	u3671
  6100  0029FA  EF01  F015         	goto	u3670
  6101  0029FE                     u3671:
  6102  0029FE  EF0A  F015         	goto	l534
  6103  002A02                     u3670:
  6104  002A02  6C1E               	negf	___flge@ff2^0,c
  6105  002A04  1E1F               	comf	(___flge@ff2+1)^0,f,c
  6106  002A06  B0D8               	btfsc	status,0,c
  6107  002A08  2A1F               	incf	(___flge@ff2+1)^0,f,c
  6108  002A0A  1E20               	comf	(___flge@ff2+2)^0,f,c
  6109  002A0C  B0D8               	btfsc	status,0,c
  6110  002A0E  2A20               	incf	(___flge@ff2+2)^0,f,c
  6111  002A10  0E80               	movlw	128
  6112  002A12  5621               	subfwb	(___flge@ff2+3)^0,f,c
  6113  002A14                     l534:
  6114  002A14  0E00               	movlw	0
  6115  002A16  1A1A               	xorwf	___flge@ff1^0,f,c
  6116  002A18  0E00               	movlw	0
  6117  002A1A  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  6118  002A1C  0E00               	movlw	0
  6119  002A1E  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  6120  002A20  0E80               	movlw	128
  6121  002A22  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  6122  002A24  0E00               	movlw	0
  6123  002A26  1A1E               	xorwf	___flge@ff2^0,f,c
  6124  002A28  0E00               	movlw	0
  6125  002A2A  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  6126  002A2C  0E00               	movlw	0
  6127  002A2E  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  6128  002A30  0E80               	movlw	128
  6129  002A32  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  6130  002A34  501E               	movf	___flge@ff2^0,w,c
  6131  002A36  5C1A               	subwf	___flge@ff1^0,w,c
  6132  002A38  501F               	movf	(___flge@ff2+1)^0,w,c
  6133  002A3A  581B               	subwfb	(___flge@ff1+1)^0,w,c
  6134  002A3C  5020               	movf	(___flge@ff2+2)^0,w,c
  6135  002A3E  581C               	subwfb	(___flge@ff1+2)^0,w,c
  6136  002A40  5021               	movf	(___flge@ff2+3)^0,w,c
  6137  002A42  581D               	subwfb	(___flge@ff1+3)^0,w,c
  6138  002A44  B0D8               	btfsc	status,0,c
  6139  002A46  EF27  F015         	goto	u3681
  6140  002A4A  EF29  F015         	goto	u3680
  6141  002A4E                     u3681:
  6142  002A4E  EF2C  F015         	goto	l3185
  6143  002A52                     u3680:
  6144  002A52  90D8               	bcf	status,0,c
  6145  002A54  EF2D  F015         	goto	l539
  6146  002A58                     l3185:
  6147  002A58  80D8               	bsf	status,0,c
  6148  002A5A                     l539:
  6149  002A5A  0012               	return		;funcret
  6150  002A5C                     __end_of___flge:
  6151                           	opt callstack 0
  6152                           
  6153 ;; *************** function ___fleq *****************
  6154 ;; Defined at:
  6155 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;  ff1             4    0[COMRAM] unsigned char 
  6158 ;;  ff2             4    4[COMRAM] unsigned char 
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;		None
  6161 ;; Return value:  Size  Location     Type
  6162 ;;		None               void
  6163 ;; Registers used:
  6164 ;;		wreg, status,2, status,0
  6165 ;; Tracked objects:
  6166 ;;		On entry : 0/0
  6167 ;;		On exit  : 0/0
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6170 ;;      Params:         8       0       0       0       0       0       0       0       0
  6171 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6172 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6173 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6174 ;;Total ram usage:       12 bytes
  6175 ;; Hardware stack levels used:    1
  6176 ;; This function calls:
  6177 ;;		Nothing
  6178 ;; This function is called by:
  6179 ;;		_efgtoa
  6180 ;; This function uses a non-reentrant model
  6181 ;;
  6182                           
  6183                           	psect	text22
  6184  002F30                     __ptext22:
  6185                           	opt callstack 0
  6186  002F30                     ___fleq:
  6187                           	opt callstack 26
  6188  002F30  0E00               	movlw	0
  6189  002F32  1401               	andwf	___fleq@ff1^0,w,c
  6190  002F34  6E09               	movwf	??___fleq^0,c
  6191  002F36  0E00               	movlw	0
  6192  002F38  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6193  002F3A  6E0A               	movwf	(??___fleq+1)^0,c
  6194  002F3C  0E80               	movlw	128
  6195  002F3E  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6196  002F40  6E0B               	movwf	(??___fleq+2)^0,c
  6197  002F42  0E7F               	movlw	127
  6198  002F44  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6199  002F46  6E0C               	movwf	(??___fleq+3)^0,c
  6200  002F48  5009               	movf	??___fleq^0,w,c
  6201  002F4A  100A               	iorwf	(??___fleq+1)^0,w,c
  6202  002F4C  100B               	iorwf	(??___fleq+2)^0,w,c
  6203  002F4E  100C               	iorwf	(??___fleq+3)^0,w,c
  6204  002F50  A4D8               	btfss	status,2,c
  6205  002F52  EFAD  F017         	goto	u3611
  6206  002F56  EFAF  F017         	goto	u3610
  6207  002F5A                     u3611:
  6208  002F5A  EFB7  F017         	goto	l3155
  6209  002F5E                     u3610:
  6210  002F5E  0E00               	movlw	0
  6211  002F60  6E01               	movwf	___fleq@ff1^0,c
  6212  002F62  0E00               	movlw	0
  6213  002F64  6E02               	movwf	(___fleq@ff1+1)^0,c
  6214  002F66  0E00               	movlw	0
  6215  002F68  6E03               	movwf	(___fleq@ff1+2)^0,c
  6216  002F6A  0E00               	movlw	0
  6217  002F6C  6E04               	movwf	(___fleq@ff1+3)^0,c
  6218  002F6E                     l3155:
  6219  002F6E  0E00               	movlw	0
  6220  002F70  1405               	andwf	___fleq@ff2^0,w,c
  6221  002F72  6E09               	movwf	??___fleq^0,c
  6222  002F74  0E00               	movlw	0
  6223  002F76  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6224  002F78  6E0A               	movwf	(??___fleq+1)^0,c
  6225  002F7A  0E80               	movlw	128
  6226  002F7C  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6227  002F7E  6E0B               	movwf	(??___fleq+2)^0,c
  6228  002F80  0E7F               	movlw	127
  6229  002F82  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6230  002F84  6E0C               	movwf	(??___fleq+3)^0,c
  6231  002F86  5009               	movf	??___fleq^0,w,c
  6232  002F88  100A               	iorwf	(??___fleq+1)^0,w,c
  6233  002F8A  100B               	iorwf	(??___fleq+2)^0,w,c
  6234  002F8C  100C               	iorwf	(??___fleq+3)^0,w,c
  6235  002F8E  A4D8               	btfss	status,2,c
  6236  002F90  EFCC  F017         	goto	u3621
  6237  002F94  EFCE  F017         	goto	u3620
  6238  002F98                     u3621:
  6239  002F98  EFD6  F017         	goto	l3159
  6240  002F9C                     u3620:
  6241  002F9C  0E00               	movlw	0
  6242  002F9E  6E05               	movwf	___fleq@ff2^0,c
  6243  002FA0  0E00               	movlw	0
  6244  002FA2  6E06               	movwf	(___fleq@ff2+1)^0,c
  6245  002FA4  0E00               	movlw	0
  6246  002FA6  6E07               	movwf	(___fleq@ff2+2)^0,c
  6247  002FA8  0E00               	movlw	0
  6248  002FAA  6E08               	movwf	(___fleq@ff2+3)^0,c
  6249  002FAC                     l3159:
  6250  002FAC  5005               	movf	___fleq@ff2^0,w,c
  6251  002FAE  1801               	xorwf	___fleq@ff1^0,w,c
  6252  002FB0  E10F               	bnz	u3630
  6253  002FB2  5006               	movf	(___fleq@ff2+1)^0,w,c
  6254  002FB4  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6255  002FB6  E10C               	bnz	u3630
  6256  002FB8  5007               	movf	(___fleq@ff2+2)^0,w,c
  6257  002FBA  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6258  002FBC  E109               	bnz	u3630
  6259  002FBE  5008               	movf	(___fleq@ff2+3)^0,w,c
  6260  002FC0  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6261  002FC2  B4D8               	btfsc	status,2,c
  6262  002FC4  EFE6  F017         	goto	u3631
  6263  002FC8  EFE8  F017         	goto	u3630
  6264  002FCC                     u3631:
  6265  002FCC  EFEB  F017         	goto	l3163
  6266  002FD0                     u3630:
  6267  002FD0  90D8               	bcf	status,0,c
  6268  002FD2  EFEC  F017         	goto	l528
  6269  002FD6                     l3163:
  6270  002FD6  80D8               	bsf	status,0,c
  6271  002FD8                     l528:
  6272  002FD8  0012               	return		;funcret
  6273  002FDA                     __end_of___fleq:
  6274                           	opt callstack 0
  6275                           
  6276 ;; *************** function ___fldiv *****************
  6277 ;; Defined at:
  6278 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;  b               4    0[COMRAM] unsigned char 
  6281 ;;  a               4    4[COMRAM] unsigned char 
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;  grs             4   19[COMRAM] unsigned long 
  6284 ;;  rem             4   12[COMRAM] unsigned long 
  6285 ;;  new_exp         2   17[COMRAM] short 
  6286 ;;  aexp            1   24[COMRAM] unsigned char 
  6287 ;;  bexp            1   23[COMRAM] unsigned char 
  6288 ;;  sign            1   16[COMRAM] unsigned char 
  6289 ;; Return value:  Size  Location     Type
  6290 ;;                  4    0[COMRAM] unsigned char 
  6291 ;; Registers used:
  6292 ;;		wreg, status,2, status,0
  6293 ;; Tracked objects:
  6294 ;;		On entry : 0/0
  6295 ;;		On exit  : 0/0
  6296 ;;		Unchanged: 0/0
  6297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6298 ;;      Params:         8       0       0       0       0       0       0       0       0
  6299 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6300 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6301 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6302 ;;Total ram usage:       25 bytes
  6303 ;; Hardware stack levels used:    1
  6304 ;; This function calls:
  6305 ;;		Nothing
  6306 ;; This function is called by:
  6307 ;;		_efgtoa
  6308 ;; This function uses a non-reentrant model
  6309 ;;
  6310                           
  6311                           	psect	text23
  6312  002116                     __ptext23:
  6313                           	opt callstack 0
  6314  002116                     ___fldiv:
  6315                           	opt callstack 26
  6316  002116  5004               	movf	(___fldiv@b+3)^0,w,c
  6317  002118  0B80               	andlw	128
  6318  00211A  6E11               	movwf	___fldiv@sign^0,c
  6319  00211C  5004               	movf	(___fldiv@b+3)^0,w,c
  6320  00211E  2404               	addwf	(___fldiv@b+3)^0,w,c
  6321  002120  6E18               	movwf	___fldiv@bexp^0,c
  6322  002122  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6323  002124  EF96  F010         	goto	u3071
  6324  002128  EF98  F010         	goto	u3070
  6325  00212C                     u3071:
  6326  00212C  EF99  F010         	goto	l2803
  6327  002130                     u3070:
  6328  002130  8018               	bsf	___fldiv@bexp^0,0,c
  6329  002132                     l2803:
  6330  002132  5018               	movf	___fldiv@bexp^0,w,c
  6331  002134  B4D8               	btfsc	status,2,c
  6332  002136  EF9F  F010         	goto	u3081
  6333  00213A  EFA1  F010         	goto	u3080
  6334  00213E                     u3081:
  6335  00213E  EFB6  F010         	goto	l2813
  6336  002142                     u3080:
  6337  002142  2818               	incf	___fldiv@bexp^0,w,c
  6338  002144  A4D8               	btfss	status,2,c
  6339  002146  EFA7  F010         	goto	u3091
  6340  00214A  EFA9  F010         	goto	u3090
  6341  00214E                     u3091:
  6342  00214E  EFB1  F010         	goto	l2809
  6343  002152                     u3090:
  6344  002152  0E00               	movlw	0
  6345  002154  6E01               	movwf	___fldiv@b^0,c
  6346  002156  0E00               	movlw	0
  6347  002158  6E02               	movwf	(___fldiv@b+1)^0,c
  6348  00215A  0E00               	movlw	0
  6349  00215C  6E03               	movwf	(___fldiv@b+2)^0,c
  6350  00215E  0E00               	movlw	0
  6351  002160  6E04               	movwf	(___fldiv@b+3)^0,c
  6352  002162                     l2809:
  6353  002162  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6354  002164  0E00               	movlw	0
  6355  002166  6E04               	movwf	(___fldiv@b+3)^0,c
  6356  002168  EFBE  F010         	goto	l2815
  6357  00216C                     l2813:
  6358  00216C  0E00               	movlw	0
  6359  00216E  6E01               	movwf	___fldiv@b^0,c
  6360  002170  0E00               	movlw	0
  6361  002172  6E02               	movwf	(___fldiv@b+1)^0,c
  6362  002174  0E00               	movlw	0
  6363  002176  6E03               	movwf	(___fldiv@b+2)^0,c
  6364  002178  0E00               	movlw	0
  6365  00217A  6E04               	movwf	(___fldiv@b+3)^0,c
  6366  00217C                     l2815:
  6367  00217C  5008               	movf	(___fldiv@a+3)^0,w,c
  6368  00217E  0B80               	andlw	128
  6369  002180  1A11               	xorwf	___fldiv@sign^0,f,c
  6370  002182  5008               	movf	(___fldiv@a+3)^0,w,c
  6371  002184  2408               	addwf	(___fldiv@a+3)^0,w,c
  6372  002186  6E19               	movwf	___fldiv@aexp^0,c
  6373  002188  AE07               	btfss	(___fldiv@a+2)^0,7,c
  6374  00218A  EFC9  F010         	goto	u3101
  6375  00218E  EFCB  F010         	goto	u3100
  6376  002192                     u3101:
  6377  002192  EFCC  F010         	goto	l2823
  6378  002196                     u3100:
  6379  002196  8019               	bsf	___fldiv@aexp^0,0,c
  6380  002198                     l2823:
  6381  002198  5019               	movf	___fldiv@aexp^0,w,c
  6382  00219A  B4D8               	btfsc	status,2,c
  6383  00219C  EFD2  F010         	goto	u3111
  6384  0021A0  EFD4  F010         	goto	u3110
  6385  0021A4                     u3111:
  6386  0021A4  EFE9  F010         	goto	l2833
  6387  0021A8                     u3110:
  6388  0021A8  2819               	incf	___fldiv@aexp^0,w,c
  6389  0021AA  A4D8               	btfss	status,2,c
  6390  0021AC  EFDA  F010         	goto	u3121
  6391  0021B0  EFDC  F010         	goto	u3120
  6392  0021B4                     u3121:
  6393  0021B4  EFE4  F010         	goto	l2829
  6394  0021B8                     u3120:
  6395  0021B8  0E00               	movlw	0
  6396  0021BA  6E05               	movwf	___fldiv@a^0,c
  6397  0021BC  0E00               	movlw	0
  6398  0021BE  6E06               	movwf	(___fldiv@a+1)^0,c
  6399  0021C0  0E00               	movlw	0
  6400  0021C2  6E07               	movwf	(___fldiv@a+2)^0,c
  6401  0021C4  0E00               	movlw	0
  6402  0021C6  6E08               	movwf	(___fldiv@a+3)^0,c
  6403  0021C8                     l2829:
  6404  0021C8  8E07               	bsf	(___fldiv@a+2)^0,7,c
  6405  0021CA  0E00               	movlw	0
  6406  0021CC  6E08               	movwf	(___fldiv@a+3)^0,c
  6407  0021CE  EFF1  F010         	goto	l2835
  6408  0021D2                     l2833:
  6409  0021D2  0E00               	movlw	0
  6410  0021D4  6E05               	movwf	___fldiv@a^0,c
  6411  0021D6  0E00               	movlw	0
  6412  0021D8  6E06               	movwf	(___fldiv@a+1)^0,c
  6413  0021DA  0E00               	movlw	0
  6414  0021DC  6E07               	movwf	(___fldiv@a+2)^0,c
  6415  0021DE  0E00               	movlw	0
  6416  0021E0  6E08               	movwf	(___fldiv@a+3)^0,c
  6417  0021E2                     l2835:
  6418  0021E2  5005               	movf	___fldiv@a^0,w,c
  6419  0021E4  1006               	iorwf	(___fldiv@a+1)^0,w,c
  6420  0021E6  1007               	iorwf	(___fldiv@a+2)^0,w,c
  6421  0021E8  1008               	iorwf	(___fldiv@a+3)^0,w,c
  6422  0021EA  A4D8               	btfss	status,2,c
  6423  0021EC  EFFA  F010         	goto	u3131
  6424  0021F0  EFFC  F010         	goto	u3130
  6425  0021F4                     u3131:
  6426  0021F4  EF14  F011         	goto	l2847
  6427  0021F8                     u3130:
  6428  0021F8  0E00               	movlw	0
  6429  0021FA  6E01               	movwf	___fldiv@b^0,c
  6430  0021FC  0E00               	movlw	0
  6431  0021FE  6E02               	movwf	(___fldiv@b+1)^0,c
  6432  002200  0E00               	movlw	0
  6433  002202  6E03               	movwf	(___fldiv@b+2)^0,c
  6434  002204  0E00               	movlw	0
  6435  002206  6E04               	movwf	(___fldiv@b+3)^0,c
  6436  002208  0E80               	movlw	128
  6437  00220A  1203               	iorwf	(___fldiv@b+2)^0,f,c
  6438  00220C  0E7F               	movlw	127
  6439  00220E  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6440  002210                     l2841:
  6441  002210  5011               	movf	___fldiv@sign^0,w,c
  6442  002212  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6443  002214  C001  F001         	movff	___fldiv@b,?___fldiv
  6444  002218  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6445  00221C  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6446  002220  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6447  002224  EF57  F012         	goto	l851
  6448  002228                     l2847:
  6449  002228  5018               	movf	___fldiv@bexp^0,w,c
  6450  00222A  A4D8               	btfss	status,2,c
  6451  00222C  EF1A  F011         	goto	u3141
  6452  002230  EF1C  F011         	goto	u3140
  6453  002234                     u3141:
  6454  002234  EF26  F011         	goto	l2855
  6455  002238                     u3140:
  6456  002238  0E00               	movlw	0
  6457  00223A  6E01               	movwf	?___fldiv^0,c
  6458  00223C  0E00               	movlw	0
  6459  00223E  6E02               	movwf	(?___fldiv+1)^0,c
  6460  002240  0E00               	movlw	0
  6461  002242  6E03               	movwf	(?___fldiv+2)^0,c
  6462  002244  0E00               	movlw	0
  6463  002246  6E04               	movwf	(?___fldiv+3)^0,c
  6464  002248  EF57  F012         	goto	l851
  6465  00224C                     l2855:
  6466  00224C  5019               	movf	___fldiv@aexp^0,w,c
  6467  00224E  C018  F009         	movff	___fldiv@bexp,??___fldiv
  6468  002252  6A0A               	clrf	(??___fldiv+1)^0,c
  6469  002254  5E09               	subwf	??___fldiv^0,f,c
  6470  002256  0E00               	movlw	0
  6471  002258  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  6472  00225A  0E7F               	movlw	127
  6473  00225C  2409               	addwf	??___fldiv^0,w,c
  6474  00225E  6E12               	movwf	___fldiv@new_exp^0,c
  6475  002260  0E00               	movlw	0
  6476  002262  200A               	addwfc	(??___fldiv+1)^0,w,c
  6477  002264  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6478  002266  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  6479  00226A  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  6480  00226E  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  6481  002272  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  6482  002276  0E00               	movlw	0
  6483  002278  6E01               	movwf	___fldiv@b^0,c
  6484  00227A  0E00               	movlw	0
  6485  00227C  6E02               	movwf	(___fldiv@b+1)^0,c
  6486  00227E  0E00               	movlw	0
  6487  002280  6E03               	movwf	(___fldiv@b+2)^0,c
  6488  002282  0E00               	movlw	0
  6489  002284  6E04               	movwf	(___fldiv@b+3)^0,c
  6490  002286  0E00               	movlw	0
  6491  002288  6E14               	movwf	___fldiv@grs^0,c
  6492  00228A  0E00               	movlw	0
  6493  00228C  6E15               	movwf	(___fldiv@grs+1)^0,c
  6494  00228E  0E00               	movlw	0
  6495  002290  6E16               	movwf	(___fldiv@grs+2)^0,c
  6496  002292  0E00               	movlw	0
  6497  002294  6E17               	movwf	(___fldiv@grs+3)^0,c
  6498  002296  0E00               	movlw	0
  6499  002298  6E19               	movwf	___fldiv@aexp^0,c
  6500  00229A  EF87  F011         	goto	l853
  6501  00229E                     l2865:
  6502  00229E  5019               	movf	___fldiv@aexp^0,w,c
  6503  0022A0  B4D8               	btfsc	status,2,c
  6504  0022A2  EF55  F011         	goto	u3151
  6505  0022A6  EF57  F011         	goto	u3150
  6506  0022AA                     u3151:
  6507  0022AA  EF6E  F011         	goto	l2873
  6508  0022AE                     u3150:
  6509  0022AE  90D8               	bcf	status,0,c
  6510  0022B0  360D               	rlcf	___fldiv@rem^0,f,c
  6511  0022B2  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  6512  0022B4  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  6513  0022B6  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  6514  0022B8  90D8               	bcf	status,0,c
  6515  0022BA  3601               	rlcf	___fldiv@b^0,f,c
  6516  0022BC  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6517  0022BE  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6518  0022C0  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6519  0022C2  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6520  0022C4  EF66  F011         	goto	u3161
  6521  0022C8  EF68  F011         	goto	u3160
  6522  0022CC                     u3161:
  6523  0022CC  EF69  F011         	goto	l856
  6524  0022D0                     u3160:
  6525  0022D0  8001               	bsf	___fldiv@b^0,0,c
  6526  0022D2                     l856:
  6527  0022D2  90D8               	bcf	status,0,c
  6528  0022D4  3614               	rlcf	___fldiv@grs^0,f,c
  6529  0022D6  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6530  0022D8  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6531  0022DA  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6532  0022DC                     l2873:
  6533  0022DC  5005               	movf	___fldiv@a^0,w,c
  6534  0022DE  5C0D               	subwf	___fldiv@rem^0,w,c
  6535  0022E0  5006               	movf	(___fldiv@a+1)^0,w,c
  6536  0022E2  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  6537  0022E4  5007               	movf	(___fldiv@a+2)^0,w,c
  6538  0022E6  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  6539  0022E8  5008               	movf	(___fldiv@a+3)^0,w,c
  6540  0022EA  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  6541  0022EC  A0D8               	btfss	status,0,c
  6542  0022EE  EF7B  F011         	goto	u3171
  6543  0022F2  EF7D  F011         	goto	u3170
  6544  0022F6                     u3171:
  6545  0022F6  EF86  F011         	goto	l2879
  6546  0022FA                     u3170:
  6547  0022FA  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  6548  0022FC  5005               	movf	___fldiv@a^0,w,c
  6549  0022FE  5E0D               	subwf	___fldiv@rem^0,f,c
  6550  002300  5006               	movf	(___fldiv@a+1)^0,w,c
  6551  002302  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  6552  002304  5007               	movf	(___fldiv@a+2)^0,w,c
  6553  002306  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  6554  002308  5008               	movf	(___fldiv@a+3)^0,w,c
  6555  00230A  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  6556  00230C                     l2879:
  6557  00230C  2A19               	incf	___fldiv@aexp^0,f,c
  6558  00230E                     l853:
  6559  00230E  0E19               	movlw	25
  6560  002310  6419               	cpfsgt	___fldiv@aexp^0,c
  6561  002312  EF8D  F011         	goto	u3181
  6562  002316  EF8F  F011         	goto	u3180
  6563  00231A                     u3181:
  6564  00231A  EF4F  F011         	goto	l2865
  6565  00231E                     u3180:
  6566  00231E  500D               	movf	___fldiv@rem^0,w,c
  6567  002320  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  6568  002322  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  6569  002324  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  6570  002326  B4D8               	btfsc	status,2,c
  6571  002328  EF98  F011         	goto	u3191
  6572  00232C  EF9A  F011         	goto	u3190
  6573  002330                     u3191:
  6574  002330  EFB2  F011         	goto	l2891
  6575  002334                     u3190:
  6576  002334  8014               	bsf	___fldiv@grs^0,0,c
  6577  002336  EFB2  F011         	goto	l2891
  6578  00233A                     l2885:
  6579  00233A  90D8               	bcf	status,0,c
  6580  00233C  3601               	rlcf	___fldiv@b^0,f,c
  6581  00233E  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6582  002340  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6583  002342  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6584  002344  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6585  002346  EFA7  F011         	goto	u3201
  6586  00234A  EFA9  F011         	goto	u3200
  6587  00234E                     u3201:
  6588  00234E  EFAA  F011         	goto	l862
  6589  002352                     u3200:
  6590  002352  8001               	bsf	___fldiv@b^0,0,c
  6591  002354                     l862:
  6592  002354  90D8               	bcf	status,0,c
  6593  002356  3614               	rlcf	___fldiv@grs^0,f,c
  6594  002358  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6595  00235A  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6596  00235C  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6597  00235E  0612               	decf	___fldiv@new_exp^0,f,c
  6598  002360  A0D8               	btfss	status,0,c
  6599  002362  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  6600  002364                     l2891:
  6601  002364  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6602  002366  EFB7  F011         	goto	u3211
  6603  00236A  EFB9  F011         	goto	u3210
  6604  00236E                     u3211:
  6605  00236E  EF9D  F011         	goto	l2885
  6606  002372                     u3210:
  6607  002372  0E00               	movlw	0
  6608  002374  6E19               	movwf	___fldiv@aexp^0,c
  6609  002376  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6610  002378  EFC0  F011         	goto	u3221
  6611  00237C  EFC2  F011         	goto	u3220
  6612  002380                     u3221:
  6613  002380  EFE6  F011         	goto	l864
  6614  002384                     u3220:
  6615  002384  0EFF               	movlw	255
  6616  002386  1414               	andwf	___fldiv@grs^0,w,c
  6617  002388  6E09               	movwf	??___fldiv^0,c
  6618  00238A  0EFF               	movlw	255
  6619  00238C  1415               	andwf	(___fldiv@grs+1)^0,w,c
  6620  00238E  6E0A               	movwf	(??___fldiv+1)^0,c
  6621  002390  0EFF               	movlw	255
  6622  002392  1416               	andwf	(___fldiv@grs+2)^0,w,c
  6623  002394  6E0B               	movwf	(??___fldiv+2)^0,c
  6624  002396  0E7F               	movlw	127
  6625  002398  1417               	andwf	(___fldiv@grs+3)^0,w,c
  6626  00239A  6E0C               	movwf	(??___fldiv+3)^0,c
  6627  00239C  5009               	movf	??___fldiv^0,w,c
  6628  00239E  100A               	iorwf	(??___fldiv+1)^0,w,c
  6629  0023A0  100B               	iorwf	(??___fldiv+2)^0,w,c
  6630  0023A2  100C               	iorwf	(??___fldiv+3)^0,w,c
  6631  0023A4  B4D8               	btfsc	status,2,c
  6632  0023A6  EFD7  F011         	goto	u3231
  6633  0023AA  EFD9  F011         	goto	u3230
  6634  0023AE                     u3231:
  6635  0023AE  EFDD  F011         	goto	l865
  6636  0023B2                     u3230:
  6637  0023B2                     l2899:
  6638  0023B2  0E01               	movlw	1
  6639  0023B4  6E19               	movwf	___fldiv@aexp^0,c
  6640  0023B6  EFE6  F011         	goto	l864
  6641  0023BA                     l865:
  6642  0023BA  A001               	btfss	___fldiv@b^0,0,c
  6643  0023BC  EFE2  F011         	goto	u3241
  6644  0023C0  EFE4  F011         	goto	u3240
  6645  0023C4                     u3241:
  6646  0023C4  EFE6  F011         	goto	l864
  6647  0023C8                     u3240:
  6648  0023C8  EFD9  F011         	goto	l2899
  6649  0023CC                     l864:
  6650  0023CC  5019               	movf	___fldiv@aexp^0,w,c
  6651  0023CE  B4D8               	btfsc	status,2,c
  6652  0023D0  EFEC  F011         	goto	u3251
  6653  0023D4  EFEE  F011         	goto	u3250
  6654  0023D8                     u3251:
  6655  0023D8  EF12  F012         	goto	l2911
  6656  0023DC                     u3250:
  6657  0023DC  0E01               	movlw	1
  6658  0023DE  2601               	addwf	___fldiv@b^0,f,c
  6659  0023E0  0E00               	movlw	0
  6660  0023E2  2202               	addwfc	(___fldiv@b+1)^0,f,c
  6661  0023E4  2203               	addwfc	(___fldiv@b+2)^0,f,c
  6662  0023E6  2204               	addwfc	(___fldiv@b+3)^0,f,c
  6663  0023E8  A004               	btfss	(___fldiv@b+3)^0,0,c
  6664  0023EA  EFF9  F011         	goto	u3261
  6665  0023EE  EFFB  F011         	goto	u3260
  6666  0023F2                     u3261:
  6667  0023F2  EF12  F012         	goto	l2911
  6668  0023F6                     u3260:
  6669  0023F6  C001  F009         	movff	___fldiv@b,??___fldiv
  6670  0023FA  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  6671  0023FE  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  6672  002402  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  6673  002406  340C               	rlcf	(??___fldiv+3)^0,w,c
  6674  002408  320C               	rrcf	(??___fldiv+3)^0,f,c
  6675  00240A  320B               	rrcf	(??___fldiv+2)^0,f,c
  6676  00240C  320A               	rrcf	(??___fldiv+1)^0,f,c
  6677  00240E  3209               	rrcf	??___fldiv^0,f,c
  6678  002410  C009  F001         	movff	??___fldiv,___fldiv@b
  6679  002414  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  6680  002418  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  6681  00241C  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  6682  002420  4A12               	infsnz	___fldiv@new_exp^0,f,c
  6683  002422  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  6684  002424                     l2911:
  6685  002424  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6686  002426  EF1D  F012         	goto	u3271
  6687  00242A  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6688  00242C  E108               	bnz	u3270
  6689  00242E  2812               	incf	___fldiv@new_exp^0,w,c
  6690  002430  A0D8               	btfss	status,0,c
  6691  002432  EF1D  F012         	goto	u3271
  6692  002436  EF1F  F012         	goto	u3270
  6693  00243A                     u3271:
  6694  00243A  EF2A  F012         	goto	l2915
  6695  00243E                     u3270:
  6696  00243E  0E00               	movlw	0
  6697  002440  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6698  002442  6812               	setf	___fldiv@new_exp^0,c
  6699  002444  0E00               	movlw	0
  6700  002446  6E01               	movwf	___fldiv@b^0,c
  6701  002448  0E00               	movlw	0
  6702  00244A  6E02               	movwf	(___fldiv@b+1)^0,c
  6703  00244C  0E00               	movlw	0
  6704  00244E  6E03               	movwf	(___fldiv@b+2)^0,c
  6705  002450  0E00               	movlw	0
  6706  002452  6E04               	movwf	(___fldiv@b+3)^0,c
  6707  002454                     l2915:
  6708  002454  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6709  002456  EF37  F012         	goto	u3280
  6710  00245A  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6711  00245C  E106               	bnz	u3281
  6712  00245E  0412               	decf	___fldiv@new_exp^0,w,c
  6713  002460  B0D8               	btfsc	status,0,c
  6714  002462  EF35  F012         	goto	u3281
  6715  002466  EF37  F012         	goto	u3280
  6716  00246A                     u3281:
  6717  00246A  EF45  F012         	goto	l2919
  6718  00246E                     u3280:
  6719  00246E  0E00               	movlw	0
  6720  002470  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6721  002472  0E00               	movlw	0
  6722  002474  6E12               	movwf	___fldiv@new_exp^0,c
  6723  002476  0E00               	movlw	0
  6724  002478  6E01               	movwf	___fldiv@b^0,c
  6725  00247A  0E00               	movlw	0
  6726  00247C  6E02               	movwf	(___fldiv@b+1)^0,c
  6727  00247E  0E00               	movlw	0
  6728  002480  6E03               	movwf	(___fldiv@b+2)^0,c
  6729  002482  0E00               	movlw	0
  6730  002484  6E04               	movwf	(___fldiv@b+3)^0,c
  6731  002486  0E00               	movlw	0
  6732  002488  6E11               	movwf	___fldiv@sign^0,c
  6733  00248A                     l2919:
  6734  00248A  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  6735  00248E  A018               	btfss	___fldiv@bexp^0,0,c
  6736  002490  EF4C  F012         	goto	u3291
  6737  002494  EF4E  F012         	goto	u3290
  6738  002498                     u3291:
  6739  002498  EF51  F012         	goto	l2925
  6740  00249C                     u3290:
  6741  00249C  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6742  00249E  EF52  F012         	goto	l2927
  6743  0024A2                     l2925:
  6744  0024A2  9E03               	bcf	(___fldiv@b+2)^0,7,c
  6745  0024A4                     l2927:
  6746  0024A4  90D8               	bcf	status,0,c
  6747  0024A6  3018               	rrcf	___fldiv@bexp^0,w,c
  6748  0024A8  6E04               	movwf	(___fldiv@b+3)^0,c
  6749  0024AA  EF08  F011         	goto	l2841
  6750  0024AE                     l851:
  6751  0024AE  0012               	return		;funcret
  6752  0024B0                     __end_of___fldiv:
  6753                           	opt callstack 0
  6754                           
  6755 ;; *************** function ___awmod *****************
  6756 ;; Defined at:
  6757 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
  6758 ;; Parameters:    Size  Location     Type
  6759 ;;  dividend        2    0[COMRAM] int 
  6760 ;;  divisor         2    2[COMRAM] int 
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;  sign            1    5[COMRAM] unsigned char 
  6763 ;;  counter         1    4[COMRAM] unsigned char 
  6764 ;; Return value:  Size  Location     Type
  6765 ;;                  2    0[COMRAM] int 
  6766 ;; Registers used:
  6767 ;;		wreg, status,2, status,0
  6768 ;; Tracked objects:
  6769 ;;		On entry : 0/0
  6770 ;;		On exit  : 0/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6773 ;;      Params:         4       0       0       0       0       0       0       0       0
  6774 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6775 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6776 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6777 ;;Total ram usage:        6 bytes
  6778 ;; Hardware stack levels used:    1
  6779 ;; This function calls:
  6780 ;;		Nothing
  6781 ;; This function is called by:
  6782 ;;		_efgtoa
  6783 ;; This function uses a non-reentrant model
  6784 ;;
  6785                           
  6786                           	psect	text24
  6787  002E80                     __ptext24:
  6788                           	opt callstack 0
  6789  002E80                     ___awmod:
  6790                           	opt callstack 26
  6791  002E80  0E00               	movlw	0
  6792  002E82  6E06               	movwf	___awmod@sign^0,c
  6793  002E84  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6794  002E86  EF49  F017         	goto	u3550
  6795  002E8A  EF47  F017         	goto	u3551
  6796  002E8E                     u3551:
  6797  002E8E  EF4F  F017         	goto	l3123
  6798  002E92                     u3550:
  6799  002E92  6C01               	negf	___awmod@dividend^0,c
  6800  002E94  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6801  002E96  B0D8               	btfsc	status,0,c
  6802  002E98  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6803  002E9A  0E01               	movlw	1
  6804  002E9C  6E06               	movwf	___awmod@sign^0,c
  6805  002E9E                     l3123:
  6806  002E9E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6807  002EA0  EF56  F017         	goto	u3560
  6808  002EA4  EF54  F017         	goto	u3561
  6809  002EA8                     u3561:
  6810  002EA8  EF5A  F017         	goto	l3127
  6811  002EAC                     u3560:
  6812  002EAC  6C03               	negf	___awmod@divisor^0,c
  6813  002EAE  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6814  002EB0  B0D8               	btfsc	status,0,c
  6815  002EB2  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6816  002EB4                     l3127:
  6817  002EB4  5003               	movf	___awmod@divisor^0,w,c
  6818  002EB6  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6819  002EB8  B4D8               	btfsc	status,2,c
  6820  002EBA  EF61  F017         	goto	u3571
  6821  002EBE  EF63  F017         	goto	u3570
  6822  002EC2                     u3571:
  6823  002EC2  EF87  F017         	goto	l3143
  6824  002EC6                     u3570:
  6825  002EC6  0E01               	movlw	1
  6826  002EC8  6E05               	movwf	___awmod@counter^0,c
  6827  002ECA  EF6B  F017         	goto	l3133
  6828  002ECE                     l3131:
  6829  002ECE  90D8               	bcf	status,0,c
  6830  002ED0  3603               	rlcf	___awmod@divisor^0,f,c
  6831  002ED2  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6832  002ED4  2A05               	incf	___awmod@counter^0,f,c
  6833  002ED6                     l3133:
  6834  002ED6  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6835  002ED8  EF70  F017         	goto	u3581
  6836  002EDC  EF72  F017         	goto	u3580
  6837  002EE0                     u3581:
  6838  002EE0  EF67  F017         	goto	l3131
  6839  002EE4                     u3580:
  6840  002EE4                     l3135:
  6841  002EE4  5003               	movf	___awmod@divisor^0,w,c
  6842  002EE6  5C01               	subwf	___awmod@dividend^0,w,c
  6843  002EE8  5004               	movf	(___awmod@divisor+1)^0,w,c
  6844  002EEA  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6845  002EEC  A0D8               	btfss	status,0,c
  6846  002EEE  EF7B  F017         	goto	u3591
  6847  002EF2  EF7D  F017         	goto	u3590
  6848  002EF6                     u3591:
  6849  002EF6  EF81  F017         	goto	l3139
  6850  002EFA                     u3590:
  6851  002EFA  5003               	movf	___awmod@divisor^0,w,c
  6852  002EFC  5E01               	subwf	___awmod@dividend^0,f,c
  6853  002EFE  5004               	movf	(___awmod@divisor+1)^0,w,c
  6854  002F00  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6855  002F02                     l3139:
  6856  002F02  90D8               	bcf	status,0,c
  6857  002F04  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6858  002F06  3203               	rrcf	___awmod@divisor^0,f,c
  6859  002F08  2E05               	decfsz	___awmod@counter^0,f,c
  6860  002F0A  EF72  F017         	goto	l3135
  6861  002F0E                     l3143:
  6862  002F0E  5006               	movf	___awmod@sign^0,w,c
  6863  002F10  B4D8               	btfsc	status,2,c
  6864  002F12  EF8D  F017         	goto	u3601
  6865  002F16  EF8F  F017         	goto	u3600
  6866  002F1A                     u3601:
  6867  002F1A  EF93  F017         	goto	l3147
  6868  002F1E                     u3600:
  6869  002F1E  6C01               	negf	___awmod@dividend^0,c
  6870  002F20  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6871  002F22  B0D8               	btfsc	status,0,c
  6872  002F24  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6873  002F26                     l3147:
  6874  002F26  C001  F001         	movff	___awmod@dividend,?___awmod
  6875  002F2A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6876  002F2E  0012               	return		;funcret
  6877  002F30                     __end_of___awmod:
  6878                           	opt callstack 0
  6879                           
  6880 ;; *************** function ___awdiv *****************
  6881 ;; Defined at:
  6882 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;  dividend        2    0[COMRAM] int 
  6885 ;;  divisor         2    2[COMRAM] int 
  6886 ;; Auto vars:     Size  Location     Type
  6887 ;;  quotient        2    6[COMRAM] int 
  6888 ;;  sign            1    5[COMRAM] unsigned char 
  6889 ;;  counter         1    4[COMRAM] unsigned char 
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  2    0[COMRAM] int 
  6892 ;; Registers used:
  6893 ;;		wreg, status,2, status,0
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6899 ;;      Params:         4       0       0       0       0       0       0       0       0
  6900 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6901 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6902 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6903 ;;Total ram usage:        8 bytes
  6904 ;; Hardware stack levels used:    1
  6905 ;; This function calls:
  6906 ;;		Nothing
  6907 ;; This function is called by:
  6908 ;;		_efgtoa
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           	psect	text25
  6913  002CFA                     __ptext25:
  6914                           	opt callstack 0
  6915  002CFA                     ___awdiv:
  6916                           	opt callstack 26
  6917  002CFA  0E00               	movlw	0
  6918  002CFC  6E06               	movwf	___awdiv@sign^0,c
  6919  002CFE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6920  002D00  EF86  F016         	goto	u3490
  6921  002D04  EF84  F016         	goto	u3491
  6922  002D08                     u3491:
  6923  002D08  EF8C  F016         	goto	l3079
  6924  002D0C                     u3490:
  6925  002D0C  6C03               	negf	___awdiv@divisor^0,c
  6926  002D0E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6927  002D10  B0D8               	btfsc	status,0,c
  6928  002D12  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6929  002D14  0E01               	movlw	1
  6930  002D16  6E06               	movwf	___awdiv@sign^0,c
  6931  002D18                     l3079:
  6932  002D18  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6933  002D1A  EF93  F016         	goto	u3500
  6934  002D1E  EF91  F016         	goto	u3501
  6935  002D22                     u3501:
  6936  002D22  EF99  F016         	goto	l3085
  6937  002D26                     u3500:
  6938  002D26  6C01               	negf	___awdiv@dividend^0,c
  6939  002D28  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6940  002D2A  B0D8               	btfsc	status,0,c
  6941  002D2C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6942  002D2E  0E01               	movlw	1
  6943  002D30  1A06               	xorwf	___awdiv@sign^0,f,c
  6944  002D32                     l3085:
  6945  002D32  0E00               	movlw	0
  6946  002D34  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6947  002D36  0E00               	movlw	0
  6948  002D38  6E07               	movwf	___awdiv@quotient^0,c
  6949  002D3A  5003               	movf	___awdiv@divisor^0,w,c
  6950  002D3C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6951  002D3E  B4D8               	btfsc	status,2,c
  6952  002D40  EFA4  F016         	goto	u3511
  6953  002D44  EFA6  F016         	goto	u3510
  6954  002D48                     u3511:
  6955  002D48  EFCE  F016         	goto	l3107
  6956  002D4C                     u3510:
  6957  002D4C  0E01               	movlw	1
  6958  002D4E  6E05               	movwf	___awdiv@counter^0,c
  6959  002D50  EFAE  F016         	goto	l3093
  6960  002D54                     l3091:
  6961  002D54  90D8               	bcf	status,0,c
  6962  002D56  3603               	rlcf	___awdiv@divisor^0,f,c
  6963  002D58  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6964  002D5A  2A05               	incf	___awdiv@counter^0,f,c
  6965  002D5C                     l3093:
  6966  002D5C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6967  002D5E  EFB3  F016         	goto	u3521
  6968  002D62  EFB5  F016         	goto	u3520
  6969  002D66                     u3521:
  6970  002D66  EFAA  F016         	goto	l3091
  6971  002D6A                     u3520:
  6972  002D6A                     l3095:
  6973  002D6A  90D8               	bcf	status,0,c
  6974  002D6C  3607               	rlcf	___awdiv@quotient^0,f,c
  6975  002D6E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6976  002D70  5003               	movf	___awdiv@divisor^0,w,c
  6977  002D72  5C01               	subwf	___awdiv@dividend^0,w,c
  6978  002D74  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6979  002D76  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6980  002D78  A0D8               	btfss	status,0,c
  6981  002D7A  EFC1  F016         	goto	u3531
  6982  002D7E  EFC3  F016         	goto	u3530
  6983  002D82                     u3531:
  6984  002D82  EFC8  F016         	goto	l3103
  6985  002D86                     u3530:
  6986  002D86  5003               	movf	___awdiv@divisor^0,w,c
  6987  002D88  5E01               	subwf	___awdiv@dividend^0,f,c
  6988  002D8A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6989  002D8C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6990  002D8E  8007               	bsf	___awdiv@quotient^0,0,c
  6991  002D90                     l3103:
  6992  002D90  90D8               	bcf	status,0,c
  6993  002D92  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6994  002D94  3203               	rrcf	___awdiv@divisor^0,f,c
  6995  002D96  2E05               	decfsz	___awdiv@counter^0,f,c
  6996  002D98  EFB5  F016         	goto	l3095
  6997  002D9C                     l3107:
  6998  002D9C  5006               	movf	___awdiv@sign^0,w,c
  6999  002D9E  B4D8               	btfsc	status,2,c
  7000  002DA0  EFD4  F016         	goto	u3541
  7001  002DA4  EFD6  F016         	goto	u3540
  7002  002DA8                     u3541:
  7003  002DA8  EFDA  F016         	goto	l3111
  7004  002DAC                     u3540:
  7005  002DAC  6C07               	negf	___awdiv@quotient^0,c
  7006  002DAE  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7007  002DB0  B0D8               	btfsc	status,0,c
  7008  002DB2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7009  002DB4                     l3111:
  7010  002DB4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7011  002DB8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7012  002DBC  0012               	return		;funcret
  7013  002DBE                     __end_of___awdiv:
  7014                           	opt callstack 0
  7015                           
  7016 ;; *************** function _atoi *****************
  7017 ;; Defined at:
  7018 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7021 ;;		 -> STR_1(5), 
  7022 ;; Auto vars:     Size  Location     Type
  7023 ;;  n               2   20[COMRAM] int 
  7024 ;;  neg             2   13[COMRAM] int 
  7025 ;; Return value:  Size  Location     Type
  7026 ;;                  2    7[COMRAM] int 
  7027 ;; Registers used:
  7028 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7029 ;; Tracked objects:
  7030 ;;		On entry : 0/0
  7031 ;;		On exit  : 0/0
  7032 ;;		Unchanged: 0/0
  7033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7034 ;;      Params:         2       0       0       0       0       0       0       0       0
  7035 ;;      Locals:         9       0       0       0       0       0       0       0       0
  7036 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7037 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7038 ;;Total ram usage:       15 bytes
  7039 ;; Hardware stack levels used:    1
  7040 ;; Hardware stack levels required when called:    1
  7041 ;; This function calls:
  7042 ;;		___wmul
  7043 ;;		_isdigit
  7044 ;;		_isspace
  7045 ;; This function is called by:
  7046 ;;		_vfpfcnvrt
  7047 ;; This function uses a non-reentrant model
  7048 ;;
  7049                           
  7050                           	psect	text26
  7051  0026C2                     __ptext26:
  7052                           	opt callstack 0
  7053  0026C2                     _atoi:
  7054                           	opt callstack 26
  7055  0026C2  0E00               	movlw	0
  7056  0026C4  6E16               	movwf	(atoi@n+1)^0,c
  7057  0026C6  0E00               	movlw	0
  7058  0026C8  6E15               	movwf	atoi@n^0,c
  7059  0026CA  0E00               	movlw	0
  7060  0026CC  6E0F               	movwf	(atoi@neg+1)^0,c
  7061  0026CE  0E00               	movlw	0
  7062  0026D0  6E0E               	movwf	atoi@neg^0,c
  7063  0026D2  EF6D  F013         	goto	l3575
  7064  0026D6                     l3573:
  7065  0026D6  4A08               	infsnz	atoi@s^0,f,c
  7066  0026D8  2A09               	incf	(atoi@s+1)^0,f,c
  7067  0026DA                     l3575:
  7068  0026DA  0E01               	movlw	1
  7069  0026DC  6E14               	movwf	_atoi$783^0,c
  7070  0026DE  C008  FFF6         	movff	atoi@s,tblptrl
  7071  0026E2  C009  FFF7         	movff	atoi@s+1,tblptrh
  7072  0026E6                     	if	0	;tblptru may be non-zero
  7073  0026E6                     	endif
  7074  0026E6                     	if	0	;tblptru may be non-zero
  7075  0026E6                     	endif
  7076  0026E6  0008               	tblrd		*
  7077  0026E8  50F5               	movf	tablat,w,c
  7078  0026EA  0A20               	xorlw	32
  7079  0026EC  B4D8               	btfsc	status,2,c
  7080  0026EE  EF7B  F013         	goto	u4331
  7081  0026F2  EF7D  F013         	goto	u4330
  7082  0026F6                     u4331:
  7083  0026F6  EF9A  F013         	goto	l3583
  7084  0026FA                     u4330:
  7085  0026FA  0EF7               	movlw	247
  7086  0026FC  6E0A               	movwf	??_atoi^0,c
  7087  0026FE  0EFF               	movlw	255
  7088  002700  6E0B               	movwf	(??_atoi+1)^0,c
  7089  002702  C008  FFF6         	movff	atoi@s,tblptrl
  7090  002706  C009  FFF7         	movff	atoi@s+1,tblptrh
  7091  00270A                     	if	0	;tblptru may be non-zero
  7092  00270A                     	endif
  7093  00270A                     	if	0	;tblptru may be non-zero
  7094  00270A                     	endif
  7095  00270A  0008               	tblrd		*
  7096  00270C  50F5               	movf	tablat,w,c
  7097  00270E  6E0C               	movwf	(??_atoi+2)^0,c
  7098  002710  6A0D               	clrf	(??_atoi+3)^0,c
  7099  002712  500A               	movf	??_atoi^0,w,c
  7100  002714  260C               	addwf	(??_atoi+2)^0,f,c
  7101  002716  500B               	movf	(??_atoi+1)^0,w,c
  7102  002718  220D               	addwfc	(??_atoi+3)^0,f,c
  7103  00271A  500D               	movf	(??_atoi+3)^0,w,c
  7104  00271C  E109               	bnz	u4340
  7105  00271E  0E05               	movlw	5
  7106  002720  5C0C               	subwf	(??_atoi+2)^0,w,c
  7107  002722  A0D8               	btfss	status,0,c
  7108  002724  EF96  F013         	goto	u4341
  7109  002728  EF98  F013         	goto	u4340
  7110  00272C                     u4341:
  7111  00272C  EF9A  F013         	goto	l3583
  7112  002730                     u4340:
  7113  002730  0E00               	movlw	0
  7114  002732  6E14               	movwf	_atoi$783^0,c
  7115  002734                     l3583:
  7116  002734  C014  F010         	movff	_atoi$783,_atoi$782
  7117  002738  6A11               	clrf	(_atoi$782+1)^0,c
  7118  00273A  5010               	movf	_atoi$782^0,w,c
  7119  00273C  1011               	iorwf	(_atoi$782+1)^0,w,c
  7120  00273E  A4D8               	btfss	status,2,c
  7121  002740  EFA4  F013         	goto	u4351
  7122  002744  EFA6  F013         	goto	u4350
  7123  002748                     u4351:
  7124  002748  EF6B  F013         	goto	l3573
  7125  00274C                     u4350:
  7126  00274C  EFB0  F013         	goto	l3593
  7127  002750                     l3589:
  7128  002750  0E00               	movlw	0
  7129  002752  6E0F               	movwf	(atoi@neg+1)^0,c
  7130  002754  0E01               	movlw	1
  7131  002756  6E0E               	movwf	atoi@neg^0,c
  7132  002758                     l3591:
  7133  002758  4A08               	infsnz	atoi@s^0,f,c
  7134  00275A  2A09               	incf	(atoi@s+1)^0,f,c
  7135  00275C  EFE5  F013         	goto	l3599
  7136  002760                     l3593:
  7137  002760  C008  FFF6         	movff	atoi@s,tblptrl
  7138  002764  C009  FFF7         	movff	atoi@s+1,tblptrh
  7139  002768                     	if	0	;tblptru may be non-zero
  7140  002768                     	endif
  7141  002768                     	if	0	;tblptru may be non-zero
  7142  002768                     	endif
  7143  002768  0008               	tblrd		*
  7144  00276A  50F5               	movf	tablat,w,c
  7145  00276C  6E0A               	movwf	??_atoi^0,c
  7146  00276E  6A0B               	clrf	(??_atoi+1)^0,c
  7147                           
  7148                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7149                           ; Switch size 1, requested type "simple"
  7150                           ; Number of cases is 1, Range of values is 0 to 0
  7151                           ; switch strategies available:
  7152                           ; Name         Instructions Cycles
  7153                           ; simple_byte            4     3 (average)
  7154                           ;	Chosen strategy is simple_byte
  7155  002770  500B               	movf	(??_atoi+1)^0,w,c
  7156  002772  0A00               	xorlw	0	; case 0
  7157  002774  B4D8               	btfsc	status,2,c
  7158  002776  EFBF  F013         	goto	l3845
  7159  00277A  EFE5  F013         	goto	l3599
  7160  00277E                     l3845:
  7161                           
  7162                           ; Switch size 1, requested type "simple"
  7163                           ; Number of cases is 2, Range of values is 43 to 45
  7164                           ; switch strategies available:
  7165                           ; Name         Instructions Cycles
  7166                           ; simple_byte            7     4 (average)
  7167                           ;	Chosen strategy is simple_byte
  7168  00277E  500A               	movf	??_atoi^0,w,c
  7169  002780  0A2B               	xorlw	43	; case 43
  7170  002782  B4D8               	btfsc	status,2,c
  7171  002784  EFAC  F013         	goto	l3591
  7172  002788  0A06               	xorlw	6	; case 45
  7173  00278A  B4D8               	btfsc	status,2,c
  7174  00278C  EFA8  F013         	goto	l3589
  7175  002790  EFE5  F013         	goto	l3599
  7176  002794                     l3595:
  7177  002794  C015  F001         	movff	atoi@n,___wmul@multiplier
  7178  002798  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7179  00279C  0E00               	movlw	0
  7180  00279E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7181  0027A0  0E0A               	movlw	10
  7182  0027A2  6E03               	movwf	___wmul@multiplicand^0,c
  7183  0027A4  EC5B  F01A         	call	___wmul	;wreg free
  7184  0027A8  C008  FFF6         	movff	atoi@s,tblptrl
  7185  0027AC  C009  FFF7         	movff	atoi@s+1,tblptrh
  7186  0027B0                     	if	0	;tblptru may be non-zero
  7187  0027B0                     	endif
  7188  0027B0                     	if	0	;tblptru may be non-zero
  7189  0027B0                     	endif
  7190  0027B0  0008               	tblrd		*
  7191  0027B2  50F5               	movf	tablat,w,c
  7192  0027B4  5E01               	subwf	?___wmul^0,f,c
  7193  0027B6  0E00               	movlw	0
  7194  0027B8  5A02               	subwfb	(?___wmul+1)^0,f,c
  7195  0027BA  0E30               	movlw	48
  7196  0027BC  2401               	addwf	?___wmul^0,w,c
  7197  0027BE  6E15               	movwf	atoi@n^0,c
  7198  0027C0  0E00               	movlw	0
  7199  0027C2  2002               	addwfc	(?___wmul+1)^0,w,c
  7200  0027C4  6E16               	movwf	(atoi@n+1)^0,c
  7201  0027C6  EFAC  F013         	goto	l3591
  7202  0027CA                     l3599:
  7203  0027CA  0ED0               	movlw	208
  7204  0027CC  6E0A               	movwf	??_atoi^0,c
  7205  0027CE  0EFF               	movlw	255
  7206  0027D0  6E0B               	movwf	(??_atoi+1)^0,c
  7207  0027D2  C008  FFF6         	movff	atoi@s,tblptrl
  7208  0027D6  C009  FFF7         	movff	atoi@s+1,tblptrh
  7209  0027DA                     	if	0	;tblptru may be non-zero
  7210  0027DA                     	endif
  7211  0027DA                     	if	0	;tblptru may be non-zero
  7212  0027DA                     	endif
  7213  0027DA  0008               	tblrd		*
  7214  0027DC  50F5               	movf	tablat,w,c
  7215  0027DE  6E0C               	movwf	(??_atoi+2)^0,c
  7216  0027E0  6A0D               	clrf	(??_atoi+3)^0,c
  7217  0027E2  500A               	movf	??_atoi^0,w,c
  7218  0027E4  260C               	addwf	(??_atoi+2)^0,f,c
  7219  0027E6  500B               	movf	(??_atoi+1)^0,w,c
  7220  0027E8  220D               	addwfc	(??_atoi+3)^0,f,c
  7221  0027EA  500D               	movf	(??_atoi+3)^0,w,c
  7222  0027EC  E10A               	bnz	u4360
  7223  0027EE  0E0A               	movlw	10
  7224  0027F0  5C0C               	subwf	(??_atoi+2)^0,w,c
  7225  0027F2  A0D8               	btfss	status,0,c
  7226  0027F4  EFFE  F013         	goto	u4361
  7227  0027F8  EF01  F014         	goto	u4360
  7228  0027FC                     u4361:
  7229  0027FC  0E01               	movlw	1
  7230  0027FE  EF02  F014         	goto	u4370
  7231  002802                     u4360:
  7232  002802  0E00               	movlw	0
  7233  002804                     u4370:
  7234  002804  6E12               	movwf	_atoi$784^0,c
  7235  002806  6A13               	clrf	(_atoi$784+1)^0,c
  7236  002808  5012               	movf	_atoi$784^0,w,c
  7237  00280A  1013               	iorwf	(_atoi$784+1)^0,w,c
  7238  00280C  A4D8               	btfss	status,2,c
  7239  00280E  EF0B  F014         	goto	u4381
  7240  002812  EF0D  F014         	goto	u4380
  7241  002816                     u4381:
  7242  002816  EFCA  F013         	goto	l3595
  7243  00281A                     u4380:
  7244  00281A  500E               	movf	atoi@neg^0,w,c
  7245  00281C  100F               	iorwf	(atoi@neg+1)^0,w,c
  7246  00281E  A4D8               	btfss	status,2,c
  7247  002820  EF14  F014         	goto	u4391
  7248  002824  EF16  F014         	goto	u4390
  7249  002828                     u4391:
  7250  002828  EF24  F014         	goto	l979
  7251  00282C                     u4390:
  7252  00282C  C015  F00A         	movff	atoi@n,??_atoi
  7253  002830  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7254  002834  1E0A               	comf	??_atoi^0,f,c
  7255  002836  1E0B               	comf	(??_atoi+1)^0,f,c
  7256  002838  4A0A               	infsnz	??_atoi^0,f,c
  7257  00283A  2A0B               	incf	(??_atoi+1)^0,f,c
  7258  00283C  C00A  F008         	movff	??_atoi,?_atoi
  7259  002840  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7260  002844  EF28  F014         	goto	l982
  7261  002848                     l979:
  7262  002848  C015  F008         	movff	atoi@n,?_atoi
  7263  00284C  C016  F009         	movff	atoi@n+1,?_atoi+1
  7264  002850                     l982:
  7265  002850  0012               	return		;funcret
  7266  002852                     __end_of_atoi:
  7267                           	opt callstack 0
  7268                           
  7269 ;; *************** function _isspace *****************
  7270 ;; Defined at:
  7271 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;  c               2    0[COMRAM] int 
  7274 ;; Auto vars:     Size  Location     Type
  7275 ;;		None
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  2    0[COMRAM] int 
  7278 ;; Registers used:
  7279 ;;		wreg, status,2, status,0
  7280 ;; Tracked objects:
  7281 ;;		On entry : 0/0
  7282 ;;		On exit  : 0/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7285 ;;      Params:         2       0       0       0       0       0       0       0       0
  7286 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7287 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7288 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7289 ;;Total ram usage:        7 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; This function calls:
  7292 ;;		Nothing
  7293 ;; This function is called by:
  7294 ;;		_atoi
  7295 ;; This function uses a non-reentrant model
  7296 ;;
  7297                           
  7298                           	psect	text27
  7299  0031A0                     __ptext27:
  7300                           	opt callstack 0
  7301  0031A0                     _isspace:
  7302                           	opt callstack 26
  7303  0031A0  0E01               	movlw	1
  7304  0031A2  6E07               	movwf	_isspace$813^0,c
  7305  0031A4  0E20               	movlw	32
  7306  0031A6  1801               	xorwf	isspace@c^0,w,c
  7307  0031A8  1002               	iorwf	(isspace@c+1)^0,w,c
  7308  0031AA  B4D8               	btfsc	status,2,c
  7309  0031AC  EFDA  F018         	goto	u3771
  7310  0031B0  EFDC  F018         	goto	u3770
  7311  0031B4                     u3771:
  7312  0031B4  EFF5  F018         	goto	l3249
  7313  0031B8                     u3770:
  7314  0031B8  0EF7               	movlw	247
  7315  0031BA  6E03               	movwf	??_isspace^0,c
  7316  0031BC  0EFF               	movlw	255
  7317  0031BE  6E04               	movwf	(??_isspace+1)^0,c
  7318  0031C0  C001  F005         	movff	isspace@c,??_isspace+2
  7319  0031C4  C002  F006         	movff	isspace@c+1,??_isspace+3
  7320  0031C8  5003               	movf	??_isspace^0,w,c
  7321  0031CA  2605               	addwf	(??_isspace+2)^0,f,c
  7322  0031CC  5004               	movf	(??_isspace+1)^0,w,c
  7323  0031CE  2206               	addwfc	(??_isspace+3)^0,f,c
  7324  0031D0  5006               	movf	(??_isspace+3)^0,w,c
  7325  0031D2  E109               	bnz	u3780
  7326  0031D4  0E05               	movlw	5
  7327  0031D6  5C05               	subwf	(??_isspace+2)^0,w,c
  7328  0031D8  A0D8               	btfss	status,0,c
  7329  0031DA  EFF1  F018         	goto	u3781
  7330  0031DE  EFF3  F018         	goto	u3780
  7331  0031E2                     u3781:
  7332  0031E2  EFF5  F018         	goto	l3249
  7333  0031E6                     u3780:
  7334  0031E6  0E00               	movlw	0
  7335  0031E8  6E07               	movwf	_isspace$813^0,c
  7336  0031EA                     l3249:
  7337  0031EA  C007  F001         	movff	_isspace$813,?_isspace
  7338  0031EE  6A02               	clrf	(?_isspace+1)^0,c
  7339  0031F0  0012               	return		;funcret
  7340  0031F2                     __end_of_isspace:
  7341                           	opt callstack 0
  7342                           
  7343 ;; *************** function _isdigit *****************
  7344 ;; Defined at:
  7345 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
  7346 ;; Parameters:    Size  Location     Type
  7347 ;;  c               2    0[COMRAM] int 
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;		None
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  2    0[COMRAM] int 
  7352 ;; Registers used:
  7353 ;;		wreg, status,2, status,0
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7359 ;;      Params:         2       0       0       0       0       0       0       0       0
  7360 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7361 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7362 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7363 ;;Total ram usage:        6 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; This function calls:
  7366 ;;		Nothing
  7367 ;; This function is called by:
  7368 ;;		_vfpfcnvrt
  7369 ;;		_atoi
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           	psect	text28
  7374  0033C0                     __ptext28:
  7375                           	opt callstack 0
  7376  0033C0                     _isdigit:
  7377                           	opt callstack 27
  7378  0033C0  0ED0               	movlw	208
  7379  0033C2  6E03               	movwf	??_isdigit^0,c
  7380  0033C4  0EFF               	movlw	255
  7381  0033C6  6E04               	movwf	(??_isdigit+1)^0,c
  7382  0033C8  C001  F005         	movff	isdigit@c,??_isdigit+2
  7383  0033CC  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7384  0033D0  5003               	movf	??_isdigit^0,w,c
  7385  0033D2  2605               	addwf	(??_isdigit+2)^0,f,c
  7386  0033D4  5004               	movf	(??_isdigit+1)^0,w,c
  7387  0033D6  2206               	addwfc	(??_isdigit+3)^0,f,c
  7388  0033D8  5006               	movf	(??_isdigit+3)^0,w,c
  7389  0033DA  E10A               	bnz	u3050
  7390  0033DC  0E0A               	movlw	10
  7391  0033DE  5C05               	subwf	(??_isdigit+2)^0,w,c
  7392  0033E0  A0D8               	btfss	status,0,c
  7393  0033E2  EFF5  F019         	goto	u3051
  7394  0033E6  EFF8  F019         	goto	u3050
  7395  0033EA                     u3051:
  7396  0033EA  0E01               	movlw	1
  7397  0033EC  EFF9  F019         	goto	u3060
  7398  0033F0                     u3050:
  7399  0033F0  0E00               	movlw	0
  7400  0033F2                     u3060:
  7401  0033F2  6E01               	movwf	?_isdigit^0,c
  7402  0033F4  6A02               	clrf	(?_isdigit+1)^0,c
  7403  0033F6  0012               	return		;funcret
  7404  0033F8                     __end_of_isdigit:
  7405                           	opt callstack 0
  7406                           
  7407 ;; *************** function ___wmul *****************
  7408 ;; Defined at:
  7409 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c"
  7410 ;; Parameters:    Size  Location     Type
  7411 ;;  multiplier      2    0[COMRAM] unsigned int 
  7412 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7413 ;; Auto vars:     Size  Location     Type
  7414 ;;  product         2    4[COMRAM] unsigned int 
  7415 ;; Return value:  Size  Location     Type
  7416 ;;                  2    0[COMRAM] unsigned int 
  7417 ;; Registers used:
  7418 ;;		wreg, status,2, status,0, prodl, prodh
  7419 ;; Tracked objects:
  7420 ;;		On entry : 0/0
  7421 ;;		On exit  : 0/0
  7422 ;;		Unchanged: 0/0
  7423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7424 ;;      Params:         4       0       0       0       0       0       0       0       0
  7425 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7426 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7427 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7428 ;;Total ram usage:        6 bytes
  7429 ;; Hardware stack levels used:    1
  7430 ;; This function calls:
  7431 ;;		Nothing
  7432 ;; This function is called by:
  7433 ;;		_atoi
  7434 ;; This function uses a non-reentrant model
  7435 ;;
  7436                           
  7437                           	psect	text29
  7438  0034B6                     __ptext29:
  7439                           	opt callstack 0
  7440  0034B6                     ___wmul:
  7441                           	opt callstack 26
  7442  0034B6  5001               	movf	___wmul@multiplier^0,w,c
  7443  0034B8  0203               	mulwf	___wmul@multiplicand^0,c
  7444  0034BA  CFF3 F005          	movff	prodl,___wmul@product
  7445  0034BE  CFF4 F006          	movff	prodh,___wmul@product+1
  7446  0034C2  5001               	movf	___wmul@multiplier^0,w,c
  7447  0034C4  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7448  0034C6  50F3               	movf	243,w,c
  7449  0034C8  2606               	addwf	(___wmul@product+1)^0,f,c
  7450  0034CA  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7451  0034CC  0203               	mulwf	___wmul@multiplicand^0,c
  7452  0034CE  50F3               	movf	243,w,c
  7453  0034D0  2606               	addwf	(___wmul@product+1)^0,f,c
  7454  0034D2  C005  F001         	movff	___wmul@product,?___wmul
  7455  0034D6  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7456  0034DA  0012               	return		;funcret
  7457  0034DC                     __end_of___wmul:
  7458                           	opt callstack 0
  7459                           
  7460 ;; *************** function _LCD_String_xy *****************
  7461 ;; Defined at:
  7462 ;;		line 108 in file "main.c"
  7463 ;; Parameters:    Size  Location     Type
  7464 ;;  row             1    wreg     unsigned char 
  7465 ;;  pos             1    9[COMRAM] unsigned char 
  7466 ;;  msg             2   10[COMRAM] PTR const unsigned char 
  7467 ;;		 -> main@result(10), 
  7468 ;; Auto vars:     Size  Location     Type
  7469 ;;  row             1   12[COMRAM] unsigned char 
  7470 ;;  location        1   13[COMRAM] unsigned char 
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  1    wreg      void 
  7473 ;; Registers used:
  7474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7475 ;; Tracked objects:
  7476 ;;		On entry : 0/0
  7477 ;;		On exit  : 0/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7480 ;;      Params:         3       0       0       0       0       0       0       0       0
  7481 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7482 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7483 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7484 ;;Total ram usage:        5 bytes
  7485 ;; Hardware stack levels used:    1
  7486 ;; Hardware stack levels required when called:    3
  7487 ;; This function calls:
  7488 ;;		_LCD_Command
  7489 ;;		_LCD_String
  7490 ;; This function is called by:
  7491 ;;		_main
  7492 ;; This function uses a non-reentrant model
  7493 ;;
  7494                           
  7495                           	psect	text30
  7496  003310                     __ptext30:
  7497                           	opt callstack 0
  7498  003310                     _LCD_String_xy:
  7499                           	opt callstack 27
  7500                           
  7501                           ;incstack = 0
  7502                           ;LCD_String_xy@row stored from wreg
  7503  003310  6E0D               	movwf	LCD_String_xy@row^0,c
  7504  003312                     
  7505                           ;main.c: 111:     if(row<=1)
  7506  003312  0E02               	movlw	2
  7507  003314  600D               	cpfslt	LCD_String_xy@row^0,c
  7508  003316  EF8F  F019         	goto	u4621
  7509  00331A  EF91  F019         	goto	u4620
  7510  00331E                     u4621:
  7511  00331E  EF9A  F019         	goto	l3805
  7512  003322                     u4620:
  7513  003322                     
  7514                           ;main.c: 112:     {;main.c: 113:         location=(0x80) | ((pos) & 0x0f);
  7515  003322  500A               	movf	LCD_String_xy@pos^0,w,c
  7516  003324  0B0F               	andlw	15
  7517  003326  0980               	iorlw	128
  7518  003328  6E0E               	movwf	LCD_String_xy@location^0,c
  7519  00332A                     
  7520                           ;main.c: 114:         LCD_Command(location);
  7521  00332A  500E               	movf	LCD_String_xy@location^0,w,c
  7522  00332C  EC7D  F01A         	call	_LCD_Command
  7523                           
  7524                           ;main.c: 115:     }
  7525  003330  EFA1  F019         	goto	l3809
  7526  003334                     l3805:
  7527                           
  7528                           ;main.c: 117:     {;main.c: 118:         location=(0xC0) | ((pos) & 0x0f);
  7529  003334  500A               	movf	LCD_String_xy@pos^0,w,c
  7530  003336  0B0F               	andlw	15
  7531  003338  09C0               	iorlw	192
  7532  00333A  6E0E               	movwf	LCD_String_xy@location^0,c
  7533  00333C                     
  7534                           ;main.c: 119:         LCD_Command(location);
  7535  00333C  500E               	movf	LCD_String_xy@location^0,w,c
  7536  00333E  EC7D  F01A         	call	_LCD_Command
  7537  003342                     l3809:
  7538                           
  7539                           ;main.c: 121:     LCD_String(msg);
  7540  003342  C00B  F008         	movff	LCD_String_xy@msg,LCD_String@msg
  7541  003346  C00C  F009         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  7542  00334A  EC30  F01A         	call	_LCD_String	;wreg free
  7543  00334E  0012               	return		;funcret
  7544  003350                     __end_of_LCD_String_xy:
  7545                           	opt callstack 0
  7546                           
  7547 ;; *************** function _LCD_String *****************
  7548 ;; Defined at:
  7549 ;;		line 98 in file "main.c"
  7550 ;; Parameters:    Size  Location     Type
  7551 ;;  msg             2    7[COMRAM] PTR const unsigned char 
  7552 ;;		 -> main@result(10), 
  7553 ;; Auto vars:     Size  Location     Type
  7554 ;;		None
  7555 ;; Return value:  Size  Location     Type
  7556 ;;                  1    wreg      void 
  7557 ;; Registers used:
  7558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7559 ;; Tracked objects:
  7560 ;;		On entry : 0/0
  7561 ;;		On exit  : 0/0
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7564 ;;      Params:         2       0       0       0       0       0       0       0       0
  7565 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7566 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7567 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7568 ;;Total ram usage:        2 bytes
  7569 ;; Hardware stack levels used:    1
  7570 ;; Hardware stack levels required when called:    2
  7571 ;; This function calls:
  7572 ;;		_LCD_Char
  7573 ;; This function is called by:
  7574 ;;		_LCD_String_xy
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           
  7578                           	psect	text31
  7579  003460                     __ptext31:
  7580                           	opt callstack 0
  7581  003460                     _LCD_String:
  7582                           	opt callstack 27
  7583  003460                     
  7584                           ;main.c: 98: void LCD_String(const char *msg);main.c: 99: {;main.c: 100:  while((*msg)!=
      +                          0)
  7585  003460  EF3B  F01A         	goto	l3749
  7586  003464                     l3745:
  7587                           
  7588                           ;main.c: 101:  {;main.c: 102:    LCD_Char(*msg);
  7589  003464  C008  FFD9         	movff	LCD_String@msg,fsr2l
  7590  003468  C009  FFDA         	movff	LCD_String@msg+1,fsr2h
  7591  00346C  50DF               	movf	indf2,w,c
  7592  00346E  EC6E  F01A         	call	_LCD_Char
  7593  003472                     
  7594                           ;main.c: 103:    msg++;
  7595  003472  4A08               	infsnz	LCD_String@msg^0,f,c
  7596  003474  2A09               	incf	(LCD_String@msg+1)^0,f,c
  7597  003476                     l3749:
  7598                           
  7599                           ;main.c: 100:  while((*msg)!=0)
  7600  003476  C008  FFD9         	movff	LCD_String@msg,fsr2l
  7601  00347A  C009  FFDA         	movff	LCD_String@msg+1,fsr2h
  7602  00347E  50DF               	movf	indf2,w,c
  7603  003480  A4D8               	btfss	status,2,c
  7604  003482  EF45  F01A         	goto	u4591
  7605  003486  EF47  F01A         	goto	u4590
  7606  00348A                     u4591:
  7607  00348A  EF32  F01A         	goto	l3745
  7608  00348E                     u4590:
  7609  00348E  0012               	return		;funcret
  7610  003490                     __end_of_LCD_String:
  7611                           	opt callstack 0
  7612                           
  7613 ;; *************** function _LCD_Char *****************
  7614 ;; Defined at:
  7615 ;;		line 88 in file "main.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;  dat             1    wreg     unsigned char 
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;  dat             1    6[COMRAM] unsigned char 
  7620 ;; Return value:  Size  Location     Type
  7621 ;;                  1    wreg      void 
  7622 ;; Registers used:
  7623 ;;		wreg, status,2, status,0, cstack
  7624 ;; Tracked objects:
  7625 ;;		On entry : 0/0
  7626 ;;		On exit  : 0/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7629 ;;      Params:         0       0       0       0       0       0       0       0       0
  7630 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7631 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7632 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7633 ;;Total ram usage:        1 bytes
  7634 ;; Hardware stack levels used:    1
  7635 ;; Hardware stack levels required when called:    1
  7636 ;; This function calls:
  7637 ;;		_MSdelay
  7638 ;;		_process_data
  7639 ;; This function is called by:
  7640 ;;		_LCD_String
  7641 ;; This function uses a non-reentrant model
  7642 ;;
  7643                           
  7644                           	psect	text32
  7645  0034DC                     __ptext32:
  7646                           	opt callstack 0
  7647  0034DC                     _LCD_Char:
  7648                           	opt callstack 27
  7649                           
  7650                           ;incstack = 0
  7651                           ;LCD_Char@dat stored from wreg
  7652  0034DC  6E07               	movwf	LCD_Char@dat^0,c
  7653  0034DE                     
  7654                           ;main.c: 88: void LCD_Char(char dat);main.c: 89: {;main.c: 90:  process_data(dat);
  7655  0034DE  5007               	movf	LCD_Char@dat^0,w,c
  7656  0034E0  EC8C  F01A         	call	_process_data
  7657  0034E4                     
  7658                           ;main.c: 91:  LATD2 = 1;
  7659  0034E4  848C               	bsf	3980,2,c	;volatile
  7660  0034E6                     
  7661                           ;main.c: 92:  LATD3=1;
  7662  0034E6  868C               	bsf	3980,3,c	;volatile
  7663  0034E8                     
  7664                           ;main.c: 93:  __nop();
  7665  0034E8  F000               	nop	
  7666  0034EA                     
  7667                           ;main.c: 94:  LATD3=0;
  7668  0034EA  968C               	bcf	3980,3,c	;volatile
  7669                           
  7670                           ;main.c: 95:  MSdelay(1);
  7671  0034EC  0E00               	movlw	0
  7672  0034EE  6E02               	movwf	(MSdelay@val+1)^0,c
  7673  0034F0  0E01               	movlw	1
  7674  0034F2  6E01               	movwf	MSdelay@val^0,c
  7675  0034F4  ECF9  F018         	call	_MSdelay	;wreg free
  7676  0034F8  0012               	return		;funcret
  7677  0034FA                     __end_of_LCD_Char:
  7678                           	opt callstack 0
  7679                           
  7680 ;; *************** function _LCD_Init *****************
  7681 ;; Defined at:
  7682 ;;		line 61 in file "main.c"
  7683 ;; Parameters:    Size  Location     Type
  7684 ;;		None
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;		None
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  1    wreg      void 
  7689 ;; Registers used:
  7690 ;;		wreg, status,2, status,0, cstack
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7696 ;;      Params:         0       0       0       0       0       0       0       0       0
  7697 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7698 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7699 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7700 ;;Total ram usage:        0 bytes
  7701 ;; Hardware stack levels used:    1
  7702 ;; Hardware stack levels required when called:    2
  7703 ;; This function calls:
  7704 ;;		_LCD_Command
  7705 ;;		_MSdelay
  7706 ;; This function is called by:
  7707 ;;		_main
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           	psect	text33
  7712  00342E                     __ptext33:
  7713                           	opt callstack 0
  7714  00342E                     _LCD_Init:
  7715                           	opt callstack 28
  7716  00342E                     
  7717                           ;main.c: 63:     MSdelay(15);
  7718  00342E  0E00               	movlw	0
  7719  003430  6E02               	movwf	(MSdelay@val+1)^0,c
  7720  003432  0E0F               	movlw	15
  7721  003434  6E01               	movwf	MSdelay@val^0,c
  7722  003436  ECF9  F018         	call	_MSdelay	;wreg free
  7723  00343A                     
  7724                           ;main.c: 64:     TRISA = 0x00;
  7725  00343A  0E00               	movlw	0
  7726  00343C  6E92               	movwf	146,c	;volatile
  7727  00343E                     
  7728                           ;main.c: 65:     TRISE = 0x04;
  7729  00343E  0E04               	movlw	4
  7730  003440  6E96               	movwf	150,c	;volatile
  7731  003442                     
  7732                           ;main.c: 66:     TRISD = 0x00;
  7733  003442  0E00               	movlw	0
  7734  003444  6E95               	movwf	149,c	;volatile
  7735  003446                     
  7736                           ;main.c: 67:     LCD_Command(0x38);
  7737  003446  0E38               	movlw	56
  7738  003448  EC7D  F01A         	call	_LCD_Command
  7739  00344C                     
  7740                           ;main.c: 68:     LCD_Command(0x01);
  7741  00344C  0E01               	movlw	1
  7742  00344E  EC7D  F01A         	call	_LCD_Command
  7743  003452                     
  7744                           ;main.c: 69:     LCD_Command(0x0c);
  7745  003452  0E0C               	movlw	12
  7746  003454  EC7D  F01A         	call	_LCD_Command
  7747  003458                     
  7748                           ;main.c: 70:     LCD_Command(0x06);
  7749  003458  0E06               	movlw	6
  7750  00345A  EC7D  F01A         	call	_LCD_Command
  7751  00345E  0012               	return		;funcret
  7752  003460                     __end_of_LCD_Init:
  7753                           	opt callstack 0
  7754                           
  7755 ;; *************** function _LCD_Command *****************
  7756 ;; Defined at:
  7757 ;;		line 78 in file "main.c"
  7758 ;; Parameters:    Size  Location     Type
  7759 ;;  cmd             1    wreg     unsigned char 
  7760 ;; Auto vars:     Size  Location     Type
  7761 ;;  cmd             1    6[COMRAM] unsigned char 
  7762 ;; Return value:  Size  Location     Type
  7763 ;;                  1    wreg      void 
  7764 ;; Registers used:
  7765 ;;		wreg, status,2, status,0, cstack
  7766 ;; Tracked objects:
  7767 ;;		On entry : 0/0
  7768 ;;		On exit  : 0/0
  7769 ;;		Unchanged: 0/0
  7770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7771 ;;      Params:         0       0       0       0       0       0       0       0       0
  7772 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7773 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7774 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7775 ;;Total ram usage:        1 bytes
  7776 ;; Hardware stack levels used:    1
  7777 ;; Hardware stack levels required when called:    1
  7778 ;; This function calls:
  7779 ;;		_MSdelay
  7780 ;;		_process_data
  7781 ;; This function is called by:
  7782 ;;		_LCD_Init
  7783 ;;		_LCD_String_xy
  7784 ;;		_LCD_Clear
  7785 ;; This function uses a non-reentrant model
  7786 ;;
  7787                           
  7788                           	psect	text34
  7789  0034FA                     __ptext34:
  7790                           	opt callstack 0
  7791  0034FA                     _LCD_Command:
  7792                           	opt callstack 28
  7793                           
  7794                           ;incstack = 0
  7795                           ;LCD_Command@cmd stored from wreg
  7796  0034FA  6E07               	movwf	LCD_Command@cmd^0,c
  7797  0034FC                     
  7798                           ;main.c: 78: void LCD_Command(char cmd );main.c: 79: {;main.c: 80:  process_data(cmd);
  7799  0034FC  5007               	movf	LCD_Command@cmd^0,w,c
  7800  0034FE  EC8C  F01A         	call	_process_data
  7801  003502                     
  7802                           ;main.c: 81:  LATD2 = 0;
  7803  003502  948C               	bcf	3980,2,c	;volatile
  7804  003504                     
  7805                           ;main.c: 82:  LATD3 = 1;
  7806  003504  868C               	bsf	3980,3,c	;volatile
  7807  003506                     
  7808                           ;main.c: 83:  __nop();
  7809  003506  F000               	nop	
  7810  003508                     
  7811                           ;main.c: 84:  LATD3 = 0;
  7812  003508  968C               	bcf	3980,3,c	;volatile
  7813                           
  7814                           ;main.c: 85:  MSdelay(3);
  7815  00350A  0E00               	movlw	0
  7816  00350C  6E02               	movwf	(MSdelay@val+1)^0,c
  7817  00350E  0E03               	movlw	3
  7818  003510  6E01               	movwf	MSdelay@val^0,c
  7819  003512  ECF9  F018         	call	_MSdelay	;wreg free
  7820  003516  0012               	return		;funcret
  7821  003518                     __end_of_LCD_Command:
  7822                           	opt callstack 0
  7823                           
  7824 ;; *************** function _process_data *****************
  7825 ;; Defined at:
  7826 ;;		line 56 in file "main.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;  data            1    wreg     unsigned char 
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;  data            1    0[COMRAM] unsigned char 
  7831 ;; Return value:  Size  Location     Type
  7832 ;;                  1    wreg      void 
  7833 ;; Registers used:
  7834 ;;		wreg, status,2, status,0
  7835 ;; Tracked objects:
  7836 ;;		On entry : 0/0
  7837 ;;		On exit  : 0/0
  7838 ;;		Unchanged: 0/0
  7839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7840 ;;      Params:         0       0       0       0       0       0       0       0       0
  7841 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7842 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7843 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7844 ;;Total ram usage:        1 bytes
  7845 ;; Hardware stack levels used:    1
  7846 ;; This function calls:
  7847 ;;		Nothing
  7848 ;; This function is called by:
  7849 ;;		_LCD_Command
  7850 ;;		_LCD_Char
  7851 ;; This function uses a non-reentrant model
  7852 ;;
  7853                           
  7854                           	psect	text35
  7855  003518                     __ptext35:
  7856                           	opt callstack 0
  7857  003518                     _process_data:
  7858                           	opt callstack 27
  7859                           
  7860                           ;incstack = 0
  7861                           ;process_data@data stored from wreg
  7862  003518  6E01               	movwf	process_data@data^0,c
  7863  00351A                     
  7864                           ;main.c: 57:     LATA = data;
  7865  00351A  C001  FF89         	movff	process_data@data,3977	;volatile
  7866  00351E                     
  7867                           ;main.c: 58:     LATE = (data >> 6) & 0x03;
  7868  00351E  4401               	rlncf	process_data@data^0,w,c
  7869  003520  46E8               	rlncf	wreg,f,c
  7870  003522  0B03               	andlw	3
  7871  003524  0B03               	andlw	3
  7872  003526  6E8D               	movwf	141,c	;volatile
  7873  003528  0012               	return		;funcret
  7874  00352A                     __end_of_process_data:
  7875                           	opt callstack 0
  7876                           
  7877 ;; *************** function _MSdelay *****************
  7878 ;; Defined at:
  7879 ;;		line 150 in file "main.c"
  7880 ;; Parameters:    Size  Location     Type
  7881 ;;  val             2    0[COMRAM] unsigned int 
  7882 ;; Auto vars:     Size  Location     Type
  7883 ;;  j               2    4[COMRAM] unsigned int 
  7884 ;;  i               2    2[COMRAM] unsigned int 
  7885 ;; Return value:  Size  Location     Type
  7886 ;;                  1    wreg      void 
  7887 ;; Registers used:
  7888 ;;		wreg, status,2, status,0
  7889 ;; Tracked objects:
  7890 ;;		On entry : 0/0
  7891 ;;		On exit  : 0/0
  7892 ;;		Unchanged: 0/0
  7893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7894 ;;      Params:         2       0       0       0       0       0       0       0       0
  7895 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7896 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7897 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7898 ;;Total ram usage:        6 bytes
  7899 ;; Hardware stack levels used:    1
  7900 ;; This function calls:
  7901 ;;		Nothing
  7902 ;; This function is called by:
  7903 ;;		_LCD_Init
  7904 ;;		_LCD_Command
  7905 ;;		_LCD_Char
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           	psect	text36
  7910  0031F2                     __ptext36:
  7911                           	opt callstack 0
  7912  0031F2                     _MSdelay:
  7913                           	opt callstack 27
  7914  0031F2                     
  7915                           ;main.c: 150: void MSdelay(unsigned int val);main.c: 151: {;main.c: 152:      unsigned i
      +                          nt i,j;;main.c: 153:         for(i=0;i<val;i++)
  7916  0031F2  0E00               	movlw	0
  7917  0031F4  6E04               	movwf	(MSdelay@i+1)^0,c
  7918  0031F6  0E00               	movlw	0
  7919  0031F8  6E03               	movwf	MSdelay@i^0,c
  7920  0031FA  EF12  F019         	goto	l3271
  7921  0031FE                     l3259:
  7922                           
  7923                           ;main.c: 154:             for(j=0;j<165;j++);
  7924  0031FE  0E00               	movlw	0
  7925  003200  6E06               	movwf	(MSdelay@j+1)^0,c
  7926  003202  0E00               	movlw	0
  7927  003204  6E05               	movwf	MSdelay@j^0,c
  7928  003206                     l3265:
  7929  003206  4A05               	infsnz	MSdelay@j^0,f,c
  7930  003208  2A06               	incf	(MSdelay@j+1)^0,f,c
  7931  00320A  5006               	movf	(MSdelay@j+1)^0,w,c
  7932  00320C  E109               	bnz	u3790
  7933  00320E  0EA5               	movlw	165
  7934  003210  5C05               	subwf	MSdelay@j^0,w,c
  7935  003212  A0D8               	btfss	status,0,c
  7936  003214  EF0E  F019         	goto	u3791
  7937  003218  EF10  F019         	goto	u3790
  7938  00321C                     u3791:
  7939  00321C  EF03  F019         	goto	l3265
  7940  003220                     u3790:
  7941  003220  4A03               	infsnz	MSdelay@i^0,f,c
  7942  003222  2A04               	incf	(MSdelay@i+1)^0,f,c
  7943  003224                     l3271:
  7944  003224  5001               	movf	MSdelay@val^0,w,c
  7945  003226  5C03               	subwf	MSdelay@i^0,w,c
  7946  003228  5002               	movf	(MSdelay@val+1)^0,w,c
  7947  00322A  5804               	subwfb	(MSdelay@i+1)^0,w,c
  7948  00322C  A0D8               	btfss	status,0,c
  7949  00322E  EF1B  F019         	goto	u3801
  7950  003232  EF1D  F019         	goto	u3800
  7951  003236                     u3801:
  7952  003236  EFFF  F018         	goto	l3259
  7953  00323A                     u3800:
  7954  00323A  0012               	return		;funcret
  7955  00323C                     __end_of_MSdelay:
  7956                           	opt callstack 0
  7957                           
  7958 ;; *************** function _ADC_Read *****************
  7959 ;; Defined at:
  7960 ;;		line 135 in file "main.c"
  7961 ;; Parameters:    Size  Location     Type
  7962 ;;  channel         2    0[COMRAM] int 
  7963 ;; Auto vars:     Size  Location     Type
  7964 ;;  digital         2    4[COMRAM] int 
  7965 ;; Return value:  Size  Location     Type
  7966 ;;                  2    0[COMRAM] int 
  7967 ;; Registers used:
  7968 ;;		wreg, status,2, status,0
  7969 ;; Tracked objects:
  7970 ;;		On entry : 0/0
  7971 ;;		On exit  : 0/0
  7972 ;;		Unchanged: 0/0
  7973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7974 ;;      Params:         2       0       0       0       0       0       0       0       0
  7975 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7976 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7977 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7978 ;;Total ram usage:        6 bytes
  7979 ;; Hardware stack levels used:    1
  7980 ;; This function calls:
  7981 ;;		Nothing
  7982 ;; This function is called by:
  7983 ;;		_main
  7984 ;; This function uses a non-reentrant model
  7985 ;;
  7986                           
  7987                           	psect	text37
  7988  00323C                     __ptext37:
  7989                           	opt callstack 0
  7990  00323C                     _ADC_Read:
  7991                           	opt callstack 30
  7992  00323C                     
  7993                           ;main.c: 135: int ADC_Read(int channel);main.c: 136: {;main.c: 137:     int digital;;mai
      +                          n.c: 138:     ADCON0 =(ADCON0 & 0b11000011)|((channel<<2) & 0b00111100);
  7994  00323C  C001  F003         	movff	ADC_Read@channel,??_ADC_Read
  7995  003240  90D8               	bcf	status,0,c
  7996  003242  3603               	rlcf	??_ADC_Read^0,f,c
  7997  003244  90D8               	bcf	status,0,c
  7998  003246  3603               	rlcf	??_ADC_Read^0,f,c
  7999  003248  0E3C               	movlw	60
  8000  00324A  1603               	andwf	??_ADC_Read^0,f,c
  8001  00324C  50C2               	movf	194,w,c	;volatile
  8002  00324E  0BC3               	andlw	195
  8003  003250  1003               	iorwf	??_ADC_Read^0,w,c
  8004  003252  6EC2               	movwf	194,c	;volatile
  8005                           
  8006                           ;main.c: 141:     ADCON0 |= 0b11;
  8007  003254  0E03               	movlw	3
  8008  003256  12C2               	iorwf	194,f,c	;volatile
  8009  003258                     l87:
  8010  003258  B2C2               	btfsc	194,1,c	;volatile
  8011  00325A  EF31  F019         	goto	u4611
  8012  00325E  EF33  F019         	goto	u4610
  8013  003262                     u4611:
  8014  003262  EF2C  F019         	goto	l87
  8015  003266                     u4610:
  8016  003266                     
  8017                           ;main.c: 146:     digital = (ADRESH*256) | (ADRESL);
  8018  003266  50C3               	movf	195,w,c	;volatile
  8019  003268  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  8020  00326C  6A04               	clrf	(??_ADC_Read+1)^0,c
  8021  00326E  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  8022  003272  6A03               	clrf	??_ADC_Read^0,c
  8023  003274  1003               	iorwf	??_ADC_Read^0,w,c
  8024  003276  6E05               	movwf	ADC_Read@digital^0,c
  8025  003278  5004               	movf	(??_ADC_Read+1)^0,w,c
  8026  00327A  6E06               	movwf	(ADC_Read@digital+1)^0,c
  8027  00327C                     
  8028                           ;main.c: 147:     return(digital);
  8029  00327C  C005  F001         	movff	ADC_Read@digital,?_ADC_Read
  8030  003280  C006  F002         	movff	ADC_Read@digital+1,?_ADC_Read+1
  8031  003284  0012               	return		;funcret
  8032  003286                     __end_of_ADC_Read:
  8033                           	opt callstack 0
  8034                           
  8035 ;; *************** function _ADC_Init *****************
  8036 ;; Defined at:
  8037 ;;		line 126 in file "main.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;		None
  8040 ;; Auto vars:     Size  Location     Type
  8041 ;;		None
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  1    wreg      void 
  8044 ;; Registers used:
  8045 ;;		wreg, status,2
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8051 ;;      Params:         0       0       0       0       0       0       0       0       0
  8052 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8053 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8054 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8055 ;;Total ram usage:        0 bytes
  8056 ;; Hardware stack levels used:    1
  8057 ;; This function calls:
  8058 ;;		Nothing
  8059 ;; This function is called by:
  8060 ;;		_main
  8061 ;; This function uses a non-reentrant model
  8062 ;;
  8063                           
  8064                           	psect	text38
  8065  00352A                     __ptext38:
  8066                           	opt callstack 0
  8067  00352A                     _ADC_Init:
  8068                           	opt callstack 30
  8069  00352A                     
  8070                           ;main.c: 129:     ADCON1 = 0x07;
  8071  00352A  0E07               	movlw	7
  8072  00352C  6EC1               	movwf	193,c	;volatile
  8073                           
  8074                           ;main.c: 130:     ADCON2 = 0x92;
  8075  00352E  0E92               	movlw	146
  8076  003530  6EC0               	movwf	192,c	;volatile
  8077                           
  8078                           ;main.c: 131:     ADRESH=0;
  8079  003532  0E00               	movlw	0
  8080  003534  6EC4               	movwf	196,c	;volatile
  8081                           
  8082                           ;main.c: 132:     ADRESL=0;
  8083  003536  0E00               	movlw	0
  8084  003538  6EC3               	movwf	195,c	;volatile
  8085  00353A  0012               	return		;funcret
  8086  00353C                     __end_of_ADC_Init:
  8087                           	opt callstack 0
  8088                           
  8089                           	psect	rparam
  8090  0000                     tosu	equ	0xFFF
  8091                           tosh	equ	0xFFE
  8092                           tosl	equ	0xFFD
  8093                           stkptr	equ	0xFFC
  8094                           pclatu	equ	0xFFB
  8095                           pclath	equ	0xFFA
  8096                           pcl	equ	0xFF9
  8097                           tblptru	equ	0xFF8
  8098                           tblptrh	equ	0xFF7
  8099                           tblptrl	equ	0xFF6
  8100                           tablat	equ	0xFF5
  8101                           prodh	equ	0xFF4
  8102                           prodl	equ	0xFF3
  8103                           indf0	equ	0xFEF
  8104                           postinc0	equ	0xFEE
  8105                           postdec0	equ	0xFED
  8106                           preinc0	equ	0xFEC
  8107                           plusw0	equ	0xFEB
  8108                           fsr0h	equ	0xFEA
  8109                           fsr0l	equ	0xFE9
  8110                           wreg	equ	0xFE8
  8111                           indf1	equ	0xFE7
  8112                           postinc1	equ	0xFE6
  8113                           postdec1	equ	0xFE5
  8114                           preinc1	equ	0xFE4
  8115                           plusw1	equ	0xFE3
  8116                           fsr1h	equ	0xFE2
  8117                           fsr1l	equ	0xFE1
  8118                           bsr	equ	0xFE0
  8119                           indf2	equ	0xFDF
  8120                           postinc2	equ	0xFDE
  8121                           postdec2	equ	0xFDD
  8122                           preinc2	equ	0xFDC
  8123                           plusw2	equ	0xFDB
  8124                           fsr2h	equ	0xFDA
  8125                           fsr2l	equ	0xFD9
  8126                           status	equ	0xFD8


Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160     78      92
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           244      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> main@result(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@result(BANK0[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S826_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@result(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> main@result(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> main@result(BANK0[10]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 10
		 -> main@result(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   29649
                                             66 BANK0     12    12      0
                           _ADC_Init
                           _ADC_Read
                           _LCD_Init
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             16    10      6   27569
                                             87 COMRAM     6     0      6
                                             56 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   27212
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   26840
                                             57 COMRAM    22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   21541
                                             45 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2352
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2007
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    1180
                                              9 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     507
                                              7 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     386
                                              6 COMRAM     1     1      0
                            _MSdelay
                       _process_data
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     706
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     386
                                              6 COMRAM     1     1      0
                            _MSdelay
                       _process_data
 ---------------------------------------------------------------------------------
 (4) _process_data                                         1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _MSdelay                                              6     4      2     320
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             6     4      2     121
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _LCD_Init
     _LCD_Command
       _MSdelay
       _process_data
     _MSdelay
   _LCD_String_xy
     _LCD_Command
       _MSdelay
       _process_data
     _LCD_String
       _LCD_Char
         _MSdelay
         _process_data
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3F3      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK3            F4      0       0      12        0.0%
BANK3               F4      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4E      5C       5       57.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10B      11        0.0%
DATA                 0      0     10B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Nov 15 23:20:59 2019

           ___fldiv@aexp 0019             ___fldiv@bexp 0018             ___fldiv@sign 0011  
           ?_LCD_Command 0001                       l61 345E                       l70 34F8  
                     l81 334E                       l90 3284                       l58 3528  
                     l67 3516                       l84 353A                       l76 348E  
                     l87 3258                       l98 323A             ___awdiv@sign 0006  
            __CFG_BOR$ON 000000      ___wmul@multiplicand 0003              __CFG_BORV$3 000000  
            ?_LCD_String 0008             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l142 2E44  
                    l206 0F9E                      l144 2E7E                      l162 13CA  
                    l139 2E02                      l500 2DBC                      l180 0C06  
                    l252 1CEA                      l513 2F2E                      l265 3032  
                    l266 303A                      l259 1C34                      l269 34DA  
                    l534 2A14                      l543 33BE                      l528 2FD8  
                    l539 2A5A                      l900 20D6                      l814 16D4  
                    l806 188A                      l566 2956                      l823 17A4  
                    l824 1792                      l851 24AE                      l853 230E  
                    l862 2354                      l950 2B58                      l839 32CA  
                    l864 23CC                      l856 22D2                      l865 23BA  
                    l890 1FA6                      l883 1DB0                      l892 201E  
                    l893 200C                      l797 15BA                      l982 2850  
                    l798 15A8                      l887 2114                      l799 156E  
                    l991 2604                      l979 2848                      l988 26C0  
                    l998 33F6             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
                    _pad 2DBE             ___awmod@sign 0006                      wreg 000FE8  
           ___flmul@aexp 0012             ___flmul@bexp 0013              _tolower$898 000D  
           ___flmul@sign 000D             ___flmul@temp 0018             ___flmul@prod 0014  
            main@digital 00AC             __CFG_LVP$OFF 000000              LCD_Char@dat 0007  
           ___fltol@exp1 000A             __CFG_WDT$OFF 000000                     l1012 3386  
                   l1006 31F0                     l1042 319E                     l1027 2CF8  
                   l1035 330E                     l1051 30F6                     l1045 353C  
                   l1061 2C2E                     l1071 3092                     l3001 1EAC  
                   l1057 342C                     l3011 1F2A                     l3003 1EBC  
                   l1076 309A                     l3101 2D8E                     l3021 1FA4  
                   l3013 1F60                     l3005 1ED8                     l3111 2DB4  
                   l3103 2D90                     l3031 2004                     l3023 1FB6  
                   l3015 1F6E                     l3007 1EE4                     l3105 2D96  
                   l3121 2E9A                     l3041 2072                     l3025 1FC4  
                   l3017 1F8C                     l3009 1F00                     l3107 2D9C  
                   l3131 2ECE                     l3123 2E9E                     l3115 2E80  
                   l3051 20DA                     l3035 202E                     l3043 2076  
                   l3027 1FC8                     l3019 1F96                     l3211 28BC  
                   l3203 287C                     l3109 2DAC                     l3141 2F08  
                   l3133 2ED6                     l3125 2EAC                     l3117 2E84  
                   l3061 2104                     l3053 20EA                     l3045 2090  
                   l3037 203A                     l3029 1FD6                     l2501 13D8  
                   l3221 28EC                     l3213 28CA                     l3205 28A6  
                   l3301 08CE                     l3071 2CFA                     l3135 2EE4  
                   l3143 2F0E                     l3127 2EB4                     l3119 2E92  
                   l3151 2F30                     l3055 20F8                     l3047 20A4  
                   l3039 2048                     l2511 1418                     l2503 13E6  
                   l3231 2916                     l3223 28F6                     l3207 28A8  
                   l3311 0942                     l3303 08D4                     l3241 31A0  
                   l3081 2D26                     l3073 2CFE                     l3145 2F1E  
                   l3137 2EFA                     l3129 2EC6                     l3161 2FD0  
                   l3153 2F5E                     l3057 20FA                     l3049 20BE  
                   l2601 15D8                     l2521 144A                     l2513 141A  
                   l2505 13E8                     l3065 3286                     l3233 2926  
                   l3209 28B8                     l3401 0CF2                     l3313 095E  
                   l3305 08FA                     l3321 09A8                     l3243 31A4  
                   l3091 2D54                     l3083 2D2E                     l3075 2D0C  
                   l3147 2F26                     l3139 2F02                     l3163 2FD6  
                   l3155 2F6E                     l3171 2996                     l3059 2100  
                   l2611 1618                     l2531 1472                     l2523 144C  
                   l2507 13F8                     l2515 1422                     l3067 3296  
                   l3235 2936                     l3219 28E2                     l3411 0D3C  
                   l3403 0D0A                     l3331 0A32                     l3323 09CE  
                   l3315 0976                     l3253 351A                     l3245 31B8  
                   l3093 2D5C                     l3085 2D32                     l3077 2D14  
                   l3157 2F9C                     l3181 2A02                     l3173 29C4  
                   l2621 1642                     l2613 1624                     l2605 15EC  
                   l2541 14AC                     l2533 1482                     l2525 1452  
                   l2517 1432                     l2509 1408                     l3237 2946  
                   l3229 290A                     l2701 2DBE                     l3501 11F0  
                   l3413 0D50                     l3421 0E46                     l3405 0D1C  
                   l3341 0A68                     l3317 0980                     l3309 0930  
                   l3271 3224                     l3255 351E                     l3247 31E6  
                   l3095 2D6A                     l3087 2D3A                     l3079 2D18  
                   l3159 2FAC                     l3183 2A52                     l3175 29D4  
                   l3167 2958                     l3191 339E                     l2631 16B4  
                   l2615 1628                     l2607 15FC                     l2623 1648  
                   l2551 14D8                     l2543 14BE                     l2535 1492  
                   l2527 1460                     l2519 1438                     l2471 2C7C  
                   l2463 2C30                     l2711 2E0E                     l2703 2DCC  
                   l3511 122E                     l3503 1200                     l3431 0F12  
                   l3423 0E64                     l3415 0DB4                     l3407 0D24  
                   l3351 0B32                     l3327 0A04                     l3265 3206  
                   l3257 31F2                     l3249 31EA                     l3097 2D70  
                   l3089 2D4C                     l2801 2130                     l3185 2A58  
                   l3177 29E2                     l3169 2986                     l3193 33AE  
                   l2641 170E                     l2625 166E                     l2633 16C4  
                   l2617 1636                     l2609 160A                     l2561 14EC  
                   l2553 14DC                     l2545 14CC                     l2537 1494  
                   l2529 1462                     l2473 2CB2                     l2465 2C42  
                   l2481 32EA                     l2713 2E22                     l2705 2DE0  
                   l3521 1264                     l3513 123E                     l3505 1204  
                   l3441 0F8A                     l3433 0F22                     l3425 0E98  
                   l3417 0E0C                     l3409 0D2C                     l3361 0BB4  
                   l3353 0B66                     l3345 0A9E                     l3329 0A16  
                   l3281 084A                     l3273 081A                     l3267 320A  
                   l3259 31FE                     l3603 2808                     l3099 2D86  
                   l2811 2164                     l2803 2132                     l3179 29F4  
                   l2651 173E                     l2643 1718                     l2635 16EA  
                   l2627 16A2                     l2619 1638                     l2571 1500  
                   l2563 14F0                     l2555 14E0                     l2547 14D0  
                   l2539 149C                     l2731 2AEE                     l2723 2A5C  
                   l2467 2C54                     l2483 32EE                     l2491 3420  
                   l2715 2E26                     l2707 2DEE                     l3531 12C0  
                   l3523 1270                     l3515 1246                     l3507 1214  
                   l3451 1040                     l3443 0F96                     l3435 0F32  
                   l3427 0ECA                     l3419 0E40                     l3363 0BC6  
                   l3371 0C12                     l3355 0B6E                     l3347 0AD2  
                   l3339 0A4E                     l3291 08A0                     l3283 086E  
                   l3275 0824                     l3269 3220                     l3605 281A  
                   l2821 2196                     l2805 2142                     l2813 216C  
                   l3189 3388                     l2661 1766                     l2653 1742  
                   l2645 1726                     l2637 16FA                     l2629 16A4  
                   l2581 153A                     l2573 1504                     l2565 14F4  
                   l2557 14E4                     l2549 14D4                     l3197 2852  
                   l2741 2B50                     l2725 2A7C                     l2469 2C5E  
                   l2477 32CC                     l2485 33F8                     l2717 2E52  
                   l2709 2DFA                     l3541 130A                     l3525 1276  
                   l3533 12C6                     l3517 1254                     l3509 1226  
                   l3461 108A                     l3453 1052                     l3445 0FBA  
                   l3437 0F66                     l3429 0EE0                     l3381 0C52  
                   l3365 0BD8                     l3349 0AD8                     l3357 0BA0  
                   l3293 08B2                     l3285 0878                     l3277 0834  
                   l3621 2B9E                     l3613 2B5A                     l3701 1BD0  
                   l3607 282C                     l2903 23DC                     l2911 2424  
                   l2831 21CA                     l2823 2198                     l2815 217C  
                   l2807 2152                     l2671 17C0                     l2663 1774  
                   l2655 1752                     l2647 1728                     l2591 158C  
                   l2583 1556                     l2575 1508                     l2567 14F8  
                   l2559 14E8                     l3199 2868                     l2727 2ABA  
                   l2735 2AFA                     l2479 32D8                     l2487 3404  
                   l2719 2E66                     l2495 3350                     l3551 133A  
                   l3543 1316                     l3535 12D8                     l3527 129C  
                   l3519 125C                     l3471 10C0                     l3463 109A  
                   l3455 1060                     l3447 101E                     l3439 0F76  
                   l3391 0CAE                     l3383 0C88                     l3367 0BE0  
                   l3359 0BB0                     l3295 08BE                     l3287 0880  
                   l3279 0842                     l3623 2BB6                     l3615 2B84  
                   l3711 1C6C                     l3703 1C04                     l3641 34EA  
                   l3633 34DE                     l3801 3322                     l2921 248E  
                   l2913 243E                     l2905 23E8                     l2841 2210  
                   l2825 21A8                     l2833 21D2                     l2817 2182  
                   l2809 2162                     l2681 182A                     l2673 17CE  
                   l2665 178A                     l2649 1736                     l2657 1754  
                   l2593 159A                     l2585 1566                     l2569 14FC  
                   l2577 150C                     l2737 2B0C                     l2729 2AE2  
                   l2761 24D0                     l2489 3408                     l2745 309C  
                   l2753 3072                     l3561 1394                     l3545 131E  
                   l3537 12F2                     l3529 12B8                     l3481 10F4  
                   l3473 10C4                     l3465 109E                     l3449 102C  
                   l3457 1068                     l3393 0CC0                     l3385 0C90  
                   l3377 0C24                     l3369 0BFA                     l3297 08C6  
                   l3289 0892                     l3625 2BD2                     l3721 1CA8  
                   l3713 1C7A                     l3635 34E4                     l3803 332A  
                   l3571 26C2                     l2923 249C                     l2915 2454  
                   l2907 23F6                     l2851 2238                     l2843 2214  
                   l2835 21E2                     l2827 21B8                     l2819 2188  
                   l2691 1864                     l2683 184A                     l2675 1808  
                   l2659 1762                     l2595 159C                     l2587 157C  
                   l2579 1510                     l2499 13CC                     l2771 25B8  
                   l2763 2526                     l2747 30AC                     l2755 3084  
                   l3563 13A4                     l3555 136E                     l3547 132E  
                   l3539 12F8                     l3491 1192                     l3483 10F8  
                   l3475 10CA                     l3467 10A4                     l3459 107C  
                   l3395 0CCE                     l3379 0C36                     l3387 0C94  
                   l3299 08CA                     l3627 2BE4                     l3619 2B90  
                   l3715 1C8E                     l3651 18D4                     l3643 188C  
                   l3811 30F8                     l3741 3508                     l3733 34FC  
                   l3637 34E6                     l3805 3334                     l3581 2730  
                   l3573 26D6                     l2925 24A2                     l2917 246E  
                   l2909 2420                     l2861 2286                     l2837 21F8  
                   l2829 21C8                     l2941 1D08                     l2693 186A  
                   l2685 184E                     l2669 17B4                     l2677 180A  
                   l2597 15A6                     l2589 1588                     l2781 26A0  
                   l2773 25F4                     l2765 253A                     l2749 303C  
                   l3565 13AA                     l3557 1380                     l3549 1334  
                   l3469 10B0                     l3477 10D0                     l3485 10FE  
                   l3493 1196                     l3397 0CD2                     l3389 0C9C  
                   l3629 2C0C                     l3709 1C48                     l3661 196C  
                   l3653 18F8                     l3645 18B0                     l3725 1CB4  
                   l3821 3134                     l3813 30FC                     ?_pad 0011  
                   l3735 3502                     l3639 34E8                     l3743 3460  
                   l3807 333C                     l2791 34B6                     l3591 2758  
                   l3583 2734                     l3575 26DA                     l2927 24A4  
                   l2919 248A                     l2871 22D0                     l2863 2296  
                   l2855 224C                     l2839 2208                     l2847 2228  
                   l2951 1D4E                     l2943 1D18                     l2935 1CEC  
                   l2695 1878                     l2687 185C                     l2679 181A  
                   l2599 15C8                     l2783 26B0                     l2767 2548  
                   l2775 2628                     l2759 24B0                     l3559 138C  
                   l3495 11B4                     l3487 1156                     l3479 10E2  
                   l3399 0CE4                     l3727 1CD8                     l3719 1C9A  
                   l3663 198C                     l3655 1900                     l3671 19F2  
                   l3647 18BE                     l3751 2FDA                     l3815 3100  
                   l3737 3504                     l3761 343A                     l3745 3464  
                   l3809 3342                     l2793 34D2                     l3593 2760  
                   l3577 26DE                     l2881 231E                     l2873 22DC  
                   l2865 229E                     l2857 2266                     l2849 2238  
                   l2961 1D7A                     l2953 1D54                     l2945 1D28  
                   l2937 1CF8                     l2697 187A                     l2689 1862  
                   l2777 2664                     l3497 11D0                     l3489 118A  
                   l3681 1A92                     l3673 1A12                     l3665 199A  
                   l3657 190E                     l3649 18D0                     l3753 2FE2  
                   l3817 3104                     l3739 3506                     l3771 3452  
                   l3763 343E                     l3747 3472                     l2787 33C0  
                   l3595 2794                     l3587 273A                     l3579 26FA  
                   l2883 2334                     l2891 2364                     l2875 22FA  
                   l2867 22AE                     l2859 2276                     l2971 1DD0  
                   l2963 1D8A                     l2955 1D5A                     l2947 1D38  
                   l2939 1D06                     l2779 2678                     l3499 11E2  
                   l3683 1AA4                     l3675 1A22                     l3659 1932  
                   l3755 2FF0                     l3819 3118                     l3781 327C  
                   l3773 3458                     l3765 3442                     l3749 3476  
                   l3845 277E                     l3589 2750                     l2893 2372  
                   l2885 233A                     l2877 22FC                     l2869 22C2  
                   l2797 2116                     l2981 1E10                     l2965 1D9A  
                   l2957 1D68                     l2949 1D3E                     l3685 1ABA  
                   l3693 1B24                     l3677 1A52                     l3669 19E0  
                   l3757 3016                     l3775 352A                     l3767 3446  
                   l3759 342E                     l3599 27CA                     l2895 2376  
                   l2887 2344                     l2879 230C                     l2799 2122  
                   l2991 1E5A                     l2983 1E1C                     l2975 1DE4  
                   l2967 1DA0                     l2959 1D6A                     l3695 1B52  
                   l3687 1AC8                     l3679 1A62                     l3791 3170  
                   l3777 323C                     l3769 344C                     l2897 2384  
                   l2889 2352                     l2993 1E66                     l2985 1E34  
                   l2977 1DF0                     l2969 1DC0                     l3689 1AF8  
                   l3793 318C                     l3785 314E                     l3779 3266  
                   l2899 23B2                     l2995 1E76                     l2987 1E40  
                   l2979 1DFA                     l3699 1BBE                     l3787 3160  
                   l3797 3312                     l2997 1E82                     l2989 1E4C  
                   l3789 3168                     l3799 3312                     l2999 1E92  
                   STR_1 0801                     STR_2 0806                     STR_3 080E  
                   STR_6 080A                     STR_7 0812                     u3000 25D8  
                   u3010 25F4                     u3011 25F0                     u3100 2196  
                   u3020 2648                     u3101 2192                     u3005 25CE  
                   _LATA 000F89                     u3110 21A8                     u3030 2664  
                   u3111 21A4                     u3031 2660                     u3200 2352  
                   u3120 21B8                     u2400 13E6                     u3040 26A0  
                   u2320 2C42                     u4000 0C36                     u3201 234E  
                   u3121 21B4                     u2401 13E2                     u3041 269C  
                   u3025 263E                     u2321 2C3E                     u4001 0C32  
                   _LATE 000F8D                     u3050 33F0                     u3210 2372  
                   u3130 21F8                     u2410 13F8                     u2330 2C54  
                   u4010 0C52                     u3051 33EA                     u3211 236E  
                   u3131 21F4                     u2411 13F4                     u2331 2C50  
                   u4011 0C4E                     u3060 33F2                     u3220 2384  
                   u3140 2238                     u3300 1D06                     u2500 1552  
                   u2420 1408                     u2340 2C7C                     u4100 0ECA  
                   u4020 0C88                     u3221 2380                     u3141 2234  
                   u3301 1D02                     u2501 154C                     u2421 1404  
                   u2341 2C78                     u4101 0EC6                     u4021 0C84  
                   u3230 23B2                     u3150 22AE                     u3070 2130  
                   u3310 1D18                     u2510 1554                     u2430 144A  
                   u2350 2CB2                     u4110 0F12                     u4030 0CAE  
                   u3231 23AE                     u3151 22AA                     u3071 212C  
                   u3311 1D14                     u2431 1446                     u2351 2CAE  
                   u4111 0F0E                     u4031 0CAA                     u3240 23C8  
                   u3160 22D0                     u3080 2142                     u3400 1FC4  
                   u3320 1D28                     u2600 166E                     u2520 157C  
                   u2440 1460                     u2360 330E                     u4200 10E2  
                   u4120 0F22                     u4040 0CC0                     u3241 23C4  
                   u3161 22CC                     u3081 213E                     u3401 1FC0  
                   u3321 1D24                     u2601 166A                     u2521 1578  
                   u2441 145C                     u2361 330A                     u4201 10DE  
                   u4121 0F1E                     u4041 0CBC                     u3250 23DC  
                   u3170 22FA                     u3090 2152                     u3410 1FD6  
                   u3330 1D68                     u2610 16B4                     u2530 159A  
                   u2450 1472                     u2370 3420                     u4210 11B4  
                   u4130 0F8A                     u4050 0CCE                     u3251 23D8  
                   u3171 22F6                     u3091 214E                     u3411 1FD2  
                   u3331 1D64                     u2611 16B0                     u2531 1596  
                   u2451 146E                     u2371 341C                     u4211 11B0  
                   u4131 0F86                     u4051 0CCA                     u3500 2D26  
                   u3260 23F6                     u3180 231E                     u3420 2004  
                   u3340 1D7A                     u2700 17A0                     u2620 16EA  
                   u2540 15BA                     u2460 1482                     u2380 3380  
                   u4300 1368                     u4220 11D0                     u4140 102C  
                   u4060 0CE4                     u3501 2D22                     u3261 23F2  
                   u3181 231A                     u3421 2000                     u3341 1D76  
                   u2701 179C                     u2621 16E6                     u2541 15B6  
                   u2461 147E                     u2381 337A                     u4301 1362  
                   u4221 11CC                     u4141 1028                     u4061 0CE0  
                   u3510 2D4C                     u3270 243E                     u3190 2334  
                   u3430 201A                     u3350 1D8A                     u2710 17B4  
                   u2630 16FA                     u2550 15C8                     u2470 14BE  
                   u2390 3382                     u4310 136A                     u4230 11E2  
                   u4150 1040                     u4070 0CF2                     u3511 2D48  
                   u3271 243A                     u3191 2330                     u3431 2016  
                   u3351 1D86                     u2711 17B0                     u2631 16F6  
                   u2551 15C4                     u2471 14BA                     u4231 11DE  
                   u4151 103C                     u4071 0CEE                     u3520 2D6A  
                   u3600 2F1E                     u3280 246E                     u3440 202E  
                   u3360 1DC0                     u2720 17CE                     u2640 1726  
                   u2560 15D8                     u2480 14CC                     u2800 2DEE  
                   u4320 1380                     u4240 11F0                     u4160 1052  
                   u4080 0D1C                     u4400 2B84                     u3521 2D66  
                   u3601 2F1A                     u3281 246A                     u3441 202A  
                   u3361 1DBC                     u2721 17CA                     u2641 1722  
                   u2561 15D4                     u2481 14C8                     u2801 2DEA  
                   u4321 137C                     u4241 11EC                     u4161 104E  
                   u4081 0D18                     u4401 2B80                     u4330 26FA  
                   u3530 2D86                     u3290 249C                     u3610 2F5E  
                   u3450 2048                     u3370 1DD0                     u2730 1808  
                   u2650 1736                     u2570 160A                     u2490 153A  
                   u2810 2E44                     u4250 1226                     u4170 1060  
                   u4090 0E64                     u4410 2BB6                     u4331 26F6  
                   u3531 2D82                     u3291 2498                     u3611 2F5A  
                   u3451 2044                     u3371 1DCC                     u2731 1804  
                   u2651 1732                     u2571 1606                     u2491 1536  
                   u2811 2E40                     u4251 1222                     u4171 105C  
                   u4091 0E60                     u4411 2BB2                     u4340 2730  
                   u3540 2DAC                     u3620 2F9C                     u3460 2090  
                   u3380 1F4A                     u2740 181A                     u2660 1752  
                   u2580 1618                     u3700 2868                     u2820 2E52  
                   u2900 30E4                     u4260 1254                     u4180 107C  
                   u4420 2BD2                     u4500 19F2                     u4341 272C  
                   u3541 2DA8                     u3621 2F98                     u3461 208C  
                   u2741 1816                     u2661 174E                     u2581 1614  
                   u3701 2864                     u2821 2E4E                     u4261 1250  
                   u4181 1078                     u4421 2BCE                     u4501 19EE  
                   u4350 274C                     u3550 2E92                     u3630 2FD0  
                   u3470 20BE                     u3390 1FA4                     u2750 182A  
                   u2670 1762                     u2590 1636                     u3710 289C  
                   u2830 2A9C                     u2910 30F6                     u4270 12D8  
                   u4190 108A                     u4430 2BE4                     u4510 1A22  
                   u4351 2748                     u3551 2E8E                     u3631 2FCC  
                   u3471 20BA                     u3391 1FA0                     u2751 1826  
                   u2671 175E                     u2591 1632                     u2911 30F2  
                   u4271 12D4                     u4191 1086                     u4431 2BE0  
                   u4511 1A1E                     u3800 323A                     u4360 2802  
                   u3560 2EAC                     u3640 2986                     u3480 20F8  
                   u2760 184A                     u2680 1774                     u3720 28CA  
                   u2840 2ABA                     u2920 306C                     u4280 12F2  
                   u4440 2C0C                     u4520 1A62                     u4600 3032  
                   u3801 3236                     u4361 27FC                     u3561 2EA8  
                   u3641 2982                     u3481 20F4                     u3385 1F40  
                   u2761 1846                     u2681 1770                     u3721 28C6  
                   u2841 2AB6                     u2921 3066                     u4281 12EE  
                   u4441 2C08                     u4521 1A5E                     u4601 302E  
                   u4610 3266                     u4370 2804                     u3490 2D0C  
                   u3570 2EC6                     u3650 29C4                     u2770 185C  
                   u2690 178A                     u3730 28DE                     u2850 2AE2  
                   u2930 306E                     u4290 130A                     u3810 0842  
                   u4530 1AA4                     u4450 18B0                     u4611 3262  
                   u3491 2D08                     u3571 2EC2                     u3651 29C0  
                   u2771 1858                     u2691 1786                     u3731 28DA  
                   u3715 2892                     u2851 2ADE                     u2835 2A92  
                   u2907 30DA                     u4291 1306                     u3811 083E  
                   u4531 1AA0                     u4451 18AC                     u4620 3322  
                   u4380 281A                     u3580 2EE4                     u3660 29E2  
                   u2780 1878                     u3740 2906                     u2860 2B0C  
                   u2940 3084                     u3900 09FC                     u3820 0892  
                   u4540 1B52                     u4460 18F8                     u4621 331E  
                   u4381 2816                     u3581 2EE0                     u3661 29DE  
                   u2781 1874                     u3741 2902                     u2861 2B08  
                   u2941 3080                     u3901 09F6                     u3821 088E  
                   u4541 1B4E                     u4461 18F4                     u4390 282C  
                   u3590 2EFA                     u3670 2A02                     u3750 2926  
                   u2950 24F8                     u2790 2DCC                     u3910 09FE  
                   u3830 08A0                     u4550 1BB8                     u4470 1932  
                   u4391 2828                     u3591 2EF6                     u3671 29FE  
                   u3751 2922                     u2791 2DC8                     u3831 089C  
                   u4551 1BB2                     u4471 192E                     u3680 2A52  
                   u3760 2936                     u2880 2B46                     u2960 2526  
                   u3920 0A16                     u3840 08B2                     u4560 1BBA  
                   u4480 19DA                     u3681 2A4E                     u3761 2932  
                   u2881 2B40                     u2961 2522                     u3921 0A12  
                   u3841 08AE                     u4481 19D4                     u3770 31B8  
                   u3690 339E                     u2890 2B48                     u2970 2548  
                   u3930 0A9A                     u3850 08FA                     u4570 1BD0  
                   u4490 19DC                     u3771 31B4                     u3691 339A  
                   u2875 2B1E                     u2971 2544                     u2955 24EE  
                   u3931 0A96                     u3851 08F6                     u4571 1BCC  
                   u3780 31E6                     u3940 0B2E                     u3860 0928  
                   u4580 1C6C                     u3781 31E2                     u3941 0B2A  
                   u3861 0922                     u4581 1C68                     u3790 3220  
                   u4590 348E                     u2990 25B4                     u3950 0BA0  
                   u3870 092A                     u3791 321C                     u4591 348A  
                   u2991 25B0                     u3951 0B9C                     u3960 0BC6  
                   u3880 0942                     u2985 255C                     u3961 0BC2  
                   u3881 093E                     u2986 2566                     u3970 0BD8  
                   u3890 09CE                     u2987 2576                     u3971 0BD4  
                   u3891 09CA                     u3980 0BFA                     u3981 0BF6  
                   u3990 0C20                     u3991 0C1C                     _dbuf 0100  
                   _atoi 26C2                     _main 30F8                     _prec 00BA  
                   _nout 00B6                     pad@i 0018                     pad@p 0015  
                   fsr1h 000FE2                     fsr2h 000FDA                     indf1 000FE7  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001A  
                   fsr2l 000FD9         __end_of_ADC_Init 353C         __end_of_ADC_Read 3286  
          ___fpclassifyf 2A5C                     prodh 000FF4                     prodl 000FF3  
                   start 0000          __end_of_MSdelay 323C            __CFG_IESO$OFF 000000  
        ___fldiv@new_exp 0012            _LCD_String_xy 3310             ___param_bank 000000  
                  ??_pad 0017         __end_of_LCD_Char 34FA         __end_of_LCD_Init 3460  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000            ___fltol@sign1 0009  
                  ?_atoi 0008          __end_of___fladd 188C                    ?_main 0001  
        __end_of___fldiv 24B0          __end_of___awdiv 2DBE          __end_of___flneg 33C0  
                  STR_10 0816                    STR_12 0816          __end_of___awmod 2F30  
        __end_of___flmul 2116          __end_of___flsub 32CC          __end_of___fltol 2958  
        ___awdiv@divisor 0003                    _LATD2 007C62                    _LATD3 007C63  
        ___awdiv@counter 0005             vfpfcnvrt@fmt 003C            __CFG_USBDIV$1 000000  
                  _TRISA 000F92                    _TRISD 000F95                    _TRISE 000F96  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    _flags 005E  
                  _fputc 2C30                    _fputs 32CC          __end_of_isdigit 33F8  
                  atoi@n 0015                    pad@fp 0011                    atoi@s 0008  
                  _width 00B8                    _putch 353C          __end_of_isspace 31F2  
        __end_of_isupper 3388                    tablat 000FF5                    status 000FD8  
    __size_of_LCD_String 0030          __end_of_sprintf 31A0           ?___fpclassifyf 0001  
        __end_of_tolower 309C          __end_of_strncmp 2C30           __CFG_ICPRT$OFF 000000  
         ?_LCD_String_xy 000A           __CFG_MCLRE$OFF 000000          __initialization 3490  
           __end_of_atoi 2852             __end_of_main 314E                   ??_atoi 000A  
                 ??_main 005E            __activetblptr 000002                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   ?_fputc 0001  
                 ?_fputs 000A                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 0001                   ?_putch 0001         LCD_String_xy@msg 000B  
       LCD_String_xy@pos 000A         LCD_String_xy@row 000D                ??_MSdelay 0003  
                 _OSCCON 000FD3           __CFG_XINST$OFF 000000             vfprintf@cfmt 0056  
                 ___flge 2958                   ___fleq 2F30                ??___fladd 0009  
                 ___wmul 34B6                ??___fldiv 0009                ??___awdiv 0005  
              ??___flneg 0005           __CFG_STVREN$ON 000000                ??___awmod 0005  
              ??___flmul 0009                ??___flsub 0022                ??___fltol 0005  
                 _efgtoa 081A          ADC_Read@channel 0001                   _floorf 24B0  
        ADC_Read@digital 0005                   clear_0 3496                   clear_1 34A2  
       ___awdiv@quotient 0007          ___awmod@divisor 0003          ___awmod@counter 0005  
                 pad@buf 0013     __size_of_LCD_Command 001E                   _strcpy 309C  
                 _strlen 33F8                   fputc@c 0001                   fputs@c 000E  
                 fputs@i 000F                   fputs@s 000A                ??_isdigit 0003  
        ___fpclassifyf@e 0009                ?_ADC_Init 0001          ___fpclassifyf@u 000B  
              ?_ADC_Read 0001          ___fpclassifyf@x 0001             __mediumconst 0000  
              ??_isspace 0003                   tblptrh 000FF7                ??_isupper 0003  
                 tblptrl 000FF6                   tblptru 000FF8                   putch@c 0001  
       __end_of_vfprintf 303C                ??_sprintf 005E                ??_tolower 0009  
              ??_strncmp 0007               ___flge@ff1 001A               ___flge@ff2 001E  
        ??___fpclassifyf 0005               ___fleq@ff1 0001               ___fleq@ff2 0005  
              ?_LCD_Char 0001               __accesstop 0060  __end_of__initialization 34AC  
              ?_LCD_Init 0001          __CFG_PBADEN$OFF 000000          ??_LCD_String_xy 000D  
             ___flneg@f1 0001            ___rparam_used 000001               ___fltol@f1 0001  
         __pcstackCOMRAM 0001            __end_of_fputc 2CFA            __end_of_fputs 3310  
          __end_of_putch 353E             ??_LCD_String 000A               ??_ADC_Init 0001  
             ??_ADC_Read 0003                  ??_fputc 0005                  ??_fputs 000E  
                ??_putch 0001               __pbssBANK0 00AE               __pbssBANK1 0100  
             ??_LCD_Char 0007               ??_LCD_Init 0008       __end_of_LCD_String 3490  
             _efgtoa$281 0064               _efgtoa$282 0066               _efgtoa$291 006A  
             _efgtoa$292 006C               _efgtoa$293 006E               _efgtoa$287 0068  
                ?___flge 001A                  ?___fleq 0001                  ?___wmul 0001  
                ?_efgtoa 002E                  ?_floorf 001A                  ?_strcpy 0001  
                ?_strlen 0001       __size_of_vfpfcnvrt 0460                  _MSdelay 31F2  
        __CFG_VREGEN$OFF 000000            LCD_String@msg 0008                  __Hparam 0000  
                __Lparam 0000          __size_of___flge 0104          __size_of___fleq 00AA  
                ___fladd 13CC                  ___fldiv 2116                  ___awdiv 2CFA  
                ___flneg 3388                  ___awmod 2E80                  ___flmul 1CEC  
                ___flsub 3286                  ___fltol 2852          __size_of___wmul 0026  
              ?_vfprintf 0050             __psmallconst 0800          __size_of_efgtoa 0BB2  
        __size_of_floorf 0212                  __pcinit 3490                  __ramtop 0800  
                __ptext0 30F8                  __ptext1 314E                  __ptext2 2FDA  
                __ptext3 188C                  __ptext4 2B5A                  __ptext5 081A  
                __ptext6 303C                  __ptext7 3350                  __ptext8 309C  
                __ptext9 2DBE          __size_of_strcpy 005C          __size_of_strlen 0036  
           __size_of_pad 00C2                  _isdigit 33C0         ___awmod@dividend 0001  
                _isspace 31A0                  _isupper 3350                  efgtoa@c 0034  
                efgtoa@d 0078                  efgtoa@e 0090                  efgtoa@f 0030  
                efgtoa@g 008C                  efgtoa@h 0082                  efgtoa@i 008A  
                efgtoa@l 0086                  efgtoa@m 0074                  efgtoa@n 0092  
                efgtoa@p 007C                  efgtoa@t 0070                  efgtoa@u 0094  
                efgtoa@w 007F                  atoi@neg 000E                  _sprintf 314E  
                _tolower 303C                  _strncmp 2B5A     end_of_initialization 34AC  
                floorf@e 0028                  floorf@m 0024                  floorf@u 002A  
                floorf@x 001A                  fputc@fp 0003           LCD_Command@cmd 0007  
          __Lmediumconst 0000                  fputs@fp 000C        __end_of_vfpfcnvrt 1CEC  
             efgtoa@mode 0081               efgtoa@sign 007A                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
             ??_vfprintf 0056                  strcpy@d 0009                  strlen@a 0003  
                strcpy@s 0007                  strlen@s 0001            ?_process_data 0001  
            ___fladd@grs 0010              ___fldiv@grs 0014              ___fldiv@rem 000D  
      __size_of_ADC_Init 0012        __size_of_ADC_Read 004A              ___flmul@grs 000E  
      __size_of_LCD_Char 001E               main@result 00A2        __size_of_LCD_Init 0032  
          ??_LCD_Command 0007           __end_of___flge 2A5C           __end_of___fleq 2FDA  
            vfpfcnvrt@ap 003E              vfpfcnvrt@ct 004C              vfpfcnvrt@fp 003A  
         __end_of___wmul 34DC           __end_of_efgtoa 13CC           __end_of_floorf 26C2  
             floorf@F524 00AE           ??_process_data 0001           __end_of_strcpy 30F8  
         __end_of_strlen 342E      start_initialization 3490              __end_of_pad 2E80  
  __end_of___fpclassifyf 2B5A    __end_of_LCD_String_xy 3350              vfprintf@fmt 0052  
               ??___flge 0022                 ??___fleq 0009                 ??___wmul 0005  
               ??_efgtoa 0035                 ??_floorf 001E         __CFG_LPT1OSC$OFF 000000  
               ??_strcpy 0005                 ??_strlen 0003                ___fladd@a 0005  
              ___fladd@b 0001                ___fldiv@a 0005                ___fldiv@b 0001  
    __end_of_LCD_Command 3518                ___flmul@a 0005                ___flmul@b 0001  
            __pbssCOMRAM 005E                ___flsub@a 001E                ___flsub@b 001A  
          __pcstackBANK0 0060                 ?_MSdelay 0001                 ?___fladd 0001  
               ?___fldiv 0001                 ?___awdiv 0001                 ?___flneg 0001  
               ?___awmod 0001                 ?___flmul 0001                 ?___flsub 001A  
               ?___fltol 0001        __size_of_vfprintf 0062              __smallconst 0800  
               ?_isdigit 0001                 _ADC_Init 352A                 _ADC_Read 323C  
               ?_isspace 0001                 ?_isupper 0001    LCD_String_xy@location 000E  
               ?_sprintf 0058                 ?_tolower 0007           __size_of_fputc 00CA  
         __size_of_fputs 0044                 ?_strncmp 0001           __size_of_putch 0002  
               MSdelay@i 0003                 MSdelay@j 0005                 _LCD_Char 34DC  
               _LCD_Init 342E           ___wmul@product 0005     __end_of_process_data 352A  
       __CFG_WDTPS$32768 000000              _LCD_Command 34FA                _vfpfcnvrt 188C  
             _ADCON0bits 000FC2        ___wmul@multiplier 0001               vfpfcnvrt@c 004F  
             vfpfcnvrt@f 0048         __size_of_MSdelay 004A                 __Hrparam 0000  
             vfprintf@ap 0054                 __Lrparam 0000               vfprintf@fp 0050  
       __size_of___fladd 04C0         __size_of___fldiv 039A         __size_of___awdiv 00C4  
       __size_of___flneg 0038         __size_of___awmod 00B0         __size_of___flmul 042A  
       __size_of___flsub 0046         __size_of___fltol 0106               ?_vfpfcnvrt 003A  
     ___fpclassifyf@F463 00B2               sprintf@fmt 005A                 _atoi$782 0010  
               _atoi$783 0014                 _atoi$784 0012         __size_of_isdigit 0038  
       __size_of_isspace 0052                 __ptext10 33F8                 __ptext11 32CC  
               __ptext20 1CEC                 __ptext12 2C30                 __ptext21 2958  
               __ptext13 353C                 __ptext30 3310                 __ptext22 2F30  
               __ptext14 24B0                 __ptext31 3460                 __ptext23 2116  
               __ptext15 2A5C                 __ptext32 34DC                 __ptext24 2E80  
               __ptext16 2852                 __ptext33 342E                 __ptext25 2CFA  
               __ptext17 3286                 __ptext34 34FA                 __ptext26 26C2  
               __ptext18 13CC                 __ptext35 3518                 __ptext27 31A0  
               __ptext19 3388                 __ptext36 31F2                 __ptext28 33C0  
               __ptext37 323C                 __ptext29 34B6                 __ptext38 352A  
       __size_of_isupper 0038         __size_of_sprintf 0052         __size_of_tolower 0060  
             strcpy@dest 0001         __size_of_strncmp 00D6            __size_of_atoi 0190  
          __size_of_main 0056               MSdelay@val 0001                 efgtoa@fp 002E  
               efgtoa@ne 0076                 efgtoa@pp 0072                 efgtoa@ou 0060  
               _vfprintf 2FDA               _LCD_String 3460              _isspace$813 0007  
  __CFG_CPUDIV$OSC1_PLL2 000000         process_data@data 0001                 isdigit@c 0001  
  __size_of_process_data 0012                sprintf@ap 009A                 isspace@c 0001  
              strcpy@src 0003                 isupper@c 0001                strncmp@_l 0001  
              strncmp@_r 0003              efgtoa@nmode 007E              ??_vfpfcnvrt 0040  
          _vfpfcnvrt$311 0046            _vfpfcnvrt$307 0044      __CFG_FOSC$INTOSC_EC 000000  
               sprintf@f 009C                 tolower@c 0007                 sprintf@s 0058  
 __size_of___fpclassifyf 00FE             _process_data 3518                 strncmp@l 0008  
               strncmp@n 0005                 strncmp@r 000A   __size_of_LCD_String_xy 0040  
          ___fladd@signs 000D             ___fladd@aexp 000E             ___fladd@bexp 000F  
